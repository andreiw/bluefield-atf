#ifndef __REGS_HNF_DEF_H__
#define __REGS_HNF_DEF_H__

#ifdef __ASSEMBLER__
#define _64bit(x) x
#else /* __ASSEMBLER__ */
#ifdef __tile__
#define _64bit(x) x ## UL
#else /* __tile__ */
#define _64bit(x) x ## ULL
#endif /* __tile__ */
#endif /* __ASSEMBLER */



#ifndef __DOXYGEN__

/*
 * Device Info.
 * This register provides general information about the device attached to
 * this port and channel.
 */
#define HNF_DEV_INFO 0x0000
#define HNF_DEV_INFO__LENGTH 0x0001

#define HNF_DEV_INFO__TYPE_SHIFT 0
#define HNF_DEV_INFO__TYPE_WIDTH 12
#define HNF_DEV_INFO__TYPE_RESET_VAL 0
#define HNF_DEV_INFO__TYPE_RMASK 0xfff
#define HNF_DEV_INFO__TYPE_MASK  0xfff
#define HNF_DEV_INFO__TYPE_FIELD 0,11
#define HNF_DEV_INFO__TYPE_VAL_PCIE 0x1
#define HNF_DEV_INFO__TYPE_VAL_GBE 0x10
#define HNF_DEV_INFO__TYPE_VAL_XGBE 0x11
#define HNF_DEV_INFO__TYPE_VAL_MPIPE 0x13
#define HNF_DEV_INFO__TYPE_VAL_TRIO 0x14
#define HNF_DEV_INFO__TYPE_VAL_CRYPTO 0x16
#define HNF_DEV_INFO__TYPE_VAL_COMPRESSION 0x18
#define HNF_DEV_INFO__TYPE_VAL_GPIO 0x20
#define HNF_DEV_INFO__TYPE_VAL_RSHIM 0x21
#define HNF_DEV_INFO__TYPE_VAL_SROM 0x22
#define HNF_DEV_INFO__TYPE_VAL_I2CM 0x25
#define HNF_DEV_INFO__TYPE_VAL_I2CS 0x26
#define HNF_DEV_INFO__TYPE_VAL_UART 0x28
#define HNF_DEV_INFO__TYPE_VAL_USBH 0x29
#define HNF_DEV_INFO__TYPE_VAL_USBS 0x2a
#define HNF_DEV_INFO__TYPE_VAL_USBHS 0x2b
#define HNF_DEV_INFO__TYPE_VAL_MMC 0x2c
#define HNF_DEV_INFO__TYPE_VAL_DDR2 0x40
#define HNF_DEV_INFO__TYPE_VAL_DDR3 0x42
#define HNF_DEV_INFO__TYPE_VAL_DDR4 0x44
#define HNF_DEV_INFO__TYPE_VAL_HMC 0x45
#define HNF_DEV_INFO__TYPE_VAL_MSS 0x46
#define HNF_DEV_INFO__TYPE_VAL_DIAG_SNP 0x80
#define HNF_DEV_INFO__TYPE_VAL_IPIC 0x81
#define HNF_DEV_INFO__TYPE_VAL_TILE 0x82
#define HNF_DEV_INFO__TYPE_VAL_TM 0x83
#define HNF_DEV_INFO__TYPE_VAL_TCAM 0x84
#define HNF_DEV_INFO__TYPE_VAL_SMMU 0x85
#define HNF_DEV_INFO__TYPE_VAL_GIC 0x86
#define HNF_DEV_INFO__TYPE_VAL_MPIPE_TX 0x87

#define HNF_DEV_INFO__DEVICE_REV_SHIFT 16
#define HNF_DEV_INFO__DEVICE_REV_WIDTH 8
#define HNF_DEV_INFO__DEVICE_REV_RMASK 0xff
#define HNF_DEV_INFO__DEVICE_REV_MASK  0xff0000
#define HNF_DEV_INFO__DEVICE_REV_FIELD 16,23

#define HNF_DEV_INFO__REGISTER_REV_SHIFT 24
#define HNF_DEV_INFO__REGISTER_REV_WIDTH 4
#define HNF_DEV_INFO__REGISTER_REV_RESET_VAL 0
#define HNF_DEV_INFO__REGISTER_REV_RMASK 0xf
#define HNF_DEV_INFO__REGISTER_REV_MASK  0xf000000
#define HNF_DEV_INFO__REGISTER_REV_FIELD 24,27

#define HNF_DEV_INFO__INSTANCE_SHIFT 32
#define HNF_DEV_INFO__INSTANCE_WIDTH 4
#define HNF_DEV_INFO__INSTANCE_RMASK 0xf
#define HNF_DEV_INFO__INSTANCE_MASK  _64bit(0xf00000000)
#define HNF_DEV_INFO__INSTANCE_FIELD 32,35


/*
 * Device Control.
 * This register provides general device control.
 */
#define HNF_DEV_CTL 0x0008
#define HNF_DEV_CTL__LENGTH 0x0001

#define HNF_DEV_CTL__NDN_ROUTE_ORDER_SHIFT 0
#define HNF_DEV_CTL__NDN_ROUTE_ORDER_WIDTH 1
#define HNF_DEV_CTL__NDN_ROUTE_ORDER_RESET_VAL 0
#define HNF_DEV_CTL__NDN_ROUTE_ORDER_RMASK 0x1
#define HNF_DEV_CTL__NDN_ROUTE_ORDER_MASK  0x1
#define HNF_DEV_CTL__NDN_ROUTE_ORDER_FIELD 0,0

#define HNF_DEV_CTL__CDN_ROUTE_ORDER_SHIFT 1
#define HNF_DEV_CTL__CDN_ROUTE_ORDER_WIDTH 1
#define HNF_DEV_CTL__CDN_ROUTE_ORDER_RESET_VAL 1
#define HNF_DEV_CTL__CDN_ROUTE_ORDER_RMASK 0x1
#define HNF_DEV_CTL__CDN_ROUTE_ORDER_MASK  0x2
#define HNF_DEV_CTL__CDN_ROUTE_ORDER_FIELD 1,1

#define HNF_DEV_CTL__DDN_ROUTE_ORDER_SHIFT 2
#define HNF_DEV_CTL__DDN_ROUTE_ORDER_WIDTH 1
#define HNF_DEV_CTL__DDN_ROUTE_ORDER_RESET_VAL 1
#define HNF_DEV_CTL__DDN_ROUTE_ORDER_RMASK 0x1
#define HNF_DEV_CTL__DDN_ROUTE_ORDER_MASK  0x4
#define HNF_DEV_CTL__DDN_ROUTE_ORDER_FIELD 2,2

#define HNF_DEV_CTL__DMA_RD_CA_ENA_SHIFT 3
#define HNF_DEV_CTL__DMA_RD_CA_ENA_WIDTH 1
#define HNF_DEV_CTL__DMA_RD_CA_ENA_RESET_VAL 1
#define HNF_DEV_CTL__DMA_RD_CA_ENA_RMASK 0x1
#define HNF_DEV_CTL__DMA_RD_CA_ENA_MASK  0x8
#define HNF_DEV_CTL__DMA_RD_CA_ENA_FIELD 3,3

#define HNF_DEV_CTL__L3_PROFILE_OVD_SHIFT 4
#define HNF_DEV_CTL__L3_PROFILE_OVD_WIDTH 1
#define HNF_DEV_CTL__L3_PROFILE_OVD_RESET_VAL 0
#define HNF_DEV_CTL__L3_PROFILE_OVD_RMASK 0x1
#define HNF_DEV_CTL__L3_PROFILE_OVD_MASK  0x10
#define HNF_DEV_CTL__L3_PROFILE_OVD_FIELD 4,4

#define HNF_DEV_CTL__L3_PROFILE_VAL_SHIFT 5
#define HNF_DEV_CTL__L3_PROFILE_VAL_WIDTH 4
#define HNF_DEV_CTL__L3_PROFILE_VAL_RESET_VAL 0
#define HNF_DEV_CTL__L3_PROFILE_VAL_RMASK 0xf
#define HNF_DEV_CTL__L3_PROFILE_VAL_MASK  0x1e0
#define HNF_DEV_CTL__L3_PROFILE_VAL_FIELD 5,8

#define HNF_DEV_CTL__WR_SLVERR_MAP_SHIFT 9
#define HNF_DEV_CTL__WR_SLVERR_MAP_WIDTH 2
#define HNF_DEV_CTL__WR_SLVERR_MAP_RESET_VAL 2
#define HNF_DEV_CTL__WR_SLVERR_MAP_RMASK 0x3
#define HNF_DEV_CTL__WR_SLVERR_MAP_MASK  0x600
#define HNF_DEV_CTL__WR_SLVERR_MAP_FIELD 9,10
#define HNF_DEV_CTL__WR_SLVERR_MAP_VAL_OKAY 0x0
#define HNF_DEV_CTL__WR_SLVERR_MAP_VAL_DATAERROR 0x2
#define HNF_DEV_CTL__WR_SLVERR_MAP_VAL_NONDATAERROR 0x3

#define HNF_DEV_CTL__WR_DECERR_MAP_SHIFT 11
#define HNF_DEV_CTL__WR_DECERR_MAP_WIDTH 2
#define HNF_DEV_CTL__WR_DECERR_MAP_RESET_VAL 3
#define HNF_DEV_CTL__WR_DECERR_MAP_RMASK 0x3
#define HNF_DEV_CTL__WR_DECERR_MAP_MASK  0x1800
#define HNF_DEV_CTL__WR_DECERR_MAP_FIELD 11,12
#define HNF_DEV_CTL__WR_DECERR_MAP_VAL_OKAY 0x0
#define HNF_DEV_CTL__WR_DECERR_MAP_VAL_DATAERROR 0x2
#define HNF_DEV_CTL__WR_DECERR_MAP_VAL_NONDATAERROR 0x3

#define HNF_DEV_CTL__RD_SLVERR_MAP_SHIFT 13
#define HNF_DEV_CTL__RD_SLVERR_MAP_WIDTH 2
#define HNF_DEV_CTL__RD_SLVERR_MAP_RESET_VAL 2
#define HNF_DEV_CTL__RD_SLVERR_MAP_RMASK 0x3
#define HNF_DEV_CTL__RD_SLVERR_MAP_MASK  0x6000
#define HNF_DEV_CTL__RD_SLVERR_MAP_FIELD 13,14
#define HNF_DEV_CTL__RD_SLVERR_MAP_VAL_OKAY 0x0
#define HNF_DEV_CTL__RD_SLVERR_MAP_VAL_DATAERROR 0x2
#define HNF_DEV_CTL__RD_SLVERR_MAP_VAL_NONDATAERROR 0x3

#define HNF_DEV_CTL__RD_DECERR_MAP_SHIFT 15
#define HNF_DEV_CTL__RD_DECERR_MAP_WIDTH 2
#define HNF_DEV_CTL__RD_DECERR_MAP_RESET_VAL 3
#define HNF_DEV_CTL__RD_DECERR_MAP_RMASK 0x3
#define HNF_DEV_CTL__RD_DECERR_MAP_MASK  0x18000
#define HNF_DEV_CTL__RD_DECERR_MAP_FIELD 15,16
#define HNF_DEV_CTL__RD_DECERR_MAP_VAL_OKAY 0x0
#define HNF_DEV_CTL__RD_DECERR_MAP_VAL_DATAERROR 0x2
#define HNF_DEV_CTL__RD_DECERR_MAP_VAL_NONDATAERROR 0x3

#define HNF_DEV_CTL__CDN_REQ_BUF_ENA_SHIFT 17
#define HNF_DEV_CTL__CDN_REQ_BUF_ENA_WIDTH 1
#define HNF_DEV_CTL__CDN_REQ_BUF_ENA_RESET_VAL 1
#define HNF_DEV_CTL__CDN_REQ_BUF_ENA_RMASK 0x1
#define HNF_DEV_CTL__CDN_REQ_BUF_ENA_MASK  0x20000
#define HNF_DEV_CTL__CDN_REQ_BUF_ENA_FIELD 17,17

#define HNF_DEV_CTL__DMA_WRQ_HWM_SHIFT 20
#define HNF_DEV_CTL__DMA_WRQ_HWM_WIDTH 8
#define HNF_DEV_CTL__DMA_WRQ_HWM_RESET_VAL 255
#define HNF_DEV_CTL__DMA_WRQ_HWM_RMASK 0xff
#define HNF_DEV_CTL__DMA_WRQ_HWM_MASK  0xff00000
#define HNF_DEV_CTL__DMA_WRQ_HWM_FIELD 20,27

#define HNF_DEV_CTL__GTHR_DELAY_ADJ_SHIFT 28
#define HNF_DEV_CTL__GTHR_DELAY_ADJ_WIDTH 4
#define HNF_DEV_CTL__GTHR_DELAY_ADJ_RESET_VAL 0
#define HNF_DEV_CTL__GTHR_DELAY_ADJ_RMASK 0xf
#define HNF_DEV_CTL__GTHR_DELAY_ADJ_MASK  0xf0000000
#define HNF_DEV_CTL__GTHR_DELAY_ADJ_FIELD 28,31


/* Scratchpad. */
#define HNF_SCRATCHPAD 0x0020
#define HNF_SCRATCHPAD__LENGTH 0x0001

#define HNF_SCRATCHPAD__SCRATCHPAD_SHIFT 0
#define HNF_SCRATCHPAD__SCRATCHPAD_WIDTH 64
#define HNF_SCRATCHPAD__SCRATCHPAD_RESET_VAL 0
#define HNF_SCRATCHPAD__SCRATCHPAD_RMASK _64bit(0xffffffffffffffff)
#define HNF_SCRATCHPAD__SCRATCHPAD_MASK  _64bit(0xffffffffffffffff)
#define HNF_SCRATCHPAD__SCRATCHPAD_FIELD 0,63


/*
 * Semaphore0.
 * Semaphore
 */
#define HNF_SEMAPHORE0 0x0028
#define HNF_SEMAPHORE0__LENGTH 0x0001

#define HNF_SEMAPHORE0__VAL_SHIFT 0
#define HNF_SEMAPHORE0__VAL_WIDTH 1
#define HNF_SEMAPHORE0__VAL_RESET_VAL 0
#define HNF_SEMAPHORE0__VAL_RMASK 0x1
#define HNF_SEMAPHORE0__VAL_MASK  0x1
#define HNF_SEMAPHORE0__VAL_FIELD 0,0


/*
 * DMA Status.
 * DMA status information for debug. Unused for devices that do not have DMA.
 */
#define HNF_DMA_STATUS 0x0030
#define HNF_DMA_STATUS__LENGTH 0x0001

#define HNF_DMA_STATUS__RDQ_INFL_COUNT_SHIFT 0
#define HNF_DMA_STATUS__RDQ_INFL_COUNT_WIDTH 9
#define HNF_DMA_STATUS__RDQ_INFL_COUNT_RESET_VAL 0
#define HNF_DMA_STATUS__RDQ_INFL_COUNT_RMASK 0x1ff
#define HNF_DMA_STATUS__RDQ_INFL_COUNT_MASK  0x1ff
#define HNF_DMA_STATUS__RDQ_INFL_COUNT_FIELD 0,8

#define HNF_DMA_STATUS__WRQ_INFL_COUNT_SHIFT 9
#define HNF_DMA_STATUS__WRQ_INFL_COUNT_WIDTH 9
#define HNF_DMA_STATUS__WRQ_INFL_COUNT_RESET_VAL 0
#define HNF_DMA_STATUS__WRQ_INFL_COUNT_RMASK 0x1ff
#define HNF_DMA_STATUS__WRQ_INFL_COUNT_MASK  0x3fe00
#define HNF_DMA_STATUS__WRQ_INFL_COUNT_FIELD 9,17

#define HNF_DMA_STATUS__WRQ_DIAG_VEC_SHIFT 25
#define HNF_DMA_STATUS__WRQ_DIAG_VEC_WIDTH 39
#define HNF_DMA_STATUS__WRQ_DIAG_VEC_RESET_VAL 0
#define HNF_DMA_STATUS__WRQ_DIAG_VEC_RMASK _64bit(0x7fffffffff)
#define HNF_DMA_STATUS__WRQ_DIAG_VEC_MASK  _64bit(0xfffffffffe000000)
#define HNF_DMA_STATUS__WRQ_DIAG_VEC_FIELD 25,63


/* Clock Count. */
#define HNF_CLOCK_COUNT 0x0038
#define HNF_CLOCK_COUNT__LENGTH 0x0001

#define HNF_CLOCK_COUNT__RUN_SHIFT 0
#define HNF_CLOCK_COUNT__RUN_WIDTH 1
#define HNF_CLOCK_COUNT__RUN_RESET_VAL 0
#define HNF_CLOCK_COUNT__RUN_RMASK 0x1
#define HNF_CLOCK_COUNT__RUN_MASK  0x1
#define HNF_CLOCK_COUNT__RUN_FIELD 0,0

#define HNF_CLOCK_COUNT__COUNT_SHIFT 1
#define HNF_CLOCK_COUNT__COUNT_WIDTH 15
#define HNF_CLOCK_COUNT__COUNT_RMASK 0x7fff
#define HNF_CLOCK_COUNT__COUNT_MASK  0xfffe
#define HNF_CLOCK_COUNT__COUNT_FIELD 1,15


/*
 * Interrupt Setup.
 * Configuration for device interrupts.
 */
#define HNF_INT_SETUP 0x0040
#define HNF_INT_SETUP__LENGTH 0x0001

#define HNF_INT_SETUP__GBL_ENA_SHIFT 0
#define HNF_INT_SETUP__GBL_ENA_WIDTH 1
#define HNF_INT_SETUP__GBL_ENA_RESET_VAL 0
#define HNF_INT_SETUP__GBL_ENA_RMASK 0x1
#define HNF_INT_SETUP__GBL_ENA_MASK  0x1
#define HNF_INT_SETUP__GBL_ENA_FIELD 0,0

#define HNF_INT_SETUP__BASE_INT_NUM_SHIFT 48
#define HNF_INT_SETUP__BASE_INT_NUM_WIDTH 16
#define HNF_INT_SETUP__BASE_INT_NUM_RMASK 0xffff
#define HNF_INT_SETUP__BASE_INT_NUM_MASK  _64bit(0xffff000000000000)
#define HNF_INT_SETUP__BASE_INT_NUM_FIELD 48,63


/*
 * Feature Control.
 * Device-specific feature controls.
 */
#define HNF_FEATURE_CTL 0x0048
#define HNF_FEATURE_CTL__LENGTH 0x0001

#define HNF_FEATURE_CTL__FEATURE_CTL_SHIFT 0
#define HNF_FEATURE_CTL__FEATURE_CTL_WIDTH 64
#define HNF_FEATURE_CTL__FEATURE_CTL_RESET_VAL 12297829382473034410
#define HNF_FEATURE_CTL__FEATURE_CTL_RMASK _64bit(0xffffffffffffffff)
#define HNF_FEATURE_CTL__FEATURE_CTL_MASK  _64bit(0xffffffffffffffff)
#define HNF_FEATURE_CTL__FEATURE_CTL_FIELD 0,63


/*
 * Credit Control.
 * Provides access to the request-credit counters that control end-to-end
 * flow control between the device and other nodes in the system.
 */
#define HNF_CRED_CTL 0x0050
#define HNF_CRED_CTL__LENGTH 0x0001

#define HNF_CRED_CTL__UPDATE_SHIFT 0
#define HNF_CRED_CTL__UPDATE_WIDTH 1
#define HNF_CRED_CTL__UPDATE_RESET_VAL 0
#define HNF_CRED_CTL__UPDATE_RMASK 0x1
#define HNF_CRED_CTL__UPDATE_MASK  0x1
#define HNF_CRED_CTL__UPDATE_FIELD 0,0

#define HNF_CRED_CTL__NODEID_SEL_SHIFT 1
#define HNF_CRED_CTL__NODEID_SEL_WIDTH 11
#define HNF_CRED_CTL__NODEID_SEL_RESET_VAL 0
#define HNF_CRED_CTL__NODEID_SEL_RMASK 0x7ff
#define HNF_CRED_CTL__NODEID_SEL_MASK  0xffe
#define HNF_CRED_CTL__NODEID_SEL_FIELD 1,11

#define HNF_CRED_CTL__TGT_SEL_SHIFT 12
#define HNF_CRED_CTL__TGT_SEL_WIDTH 2
#define HNF_CRED_CTL__TGT_SEL_RESET_VAL 0
#define HNF_CRED_CTL__TGT_SEL_RMASK 0x3
#define HNF_CRED_CTL__TGT_SEL_MASK  0x3000
#define HNF_CRED_CTL__TGT_SEL_FIELD 12,13
#define HNF_CRED_CTL__TGT_SEL_VAL_TX_REQ 0x0
#define HNF_CRED_CTL__TGT_SEL_VAL_RETRYQ 0x1
#define HNF_CRED_CTL__TGT_SEL_VAL_RING 0x2

#define HNF_CRED_CTL__CLIENT_SEL_SHIFT 14
#define HNF_CRED_CTL__CLIENT_SEL_WIDTH 2
#define HNF_CRED_CTL__CLIENT_SEL_RESET_VAL 0
#define HNF_CRED_CTL__CLIENT_SEL_RMASK 0x3
#define HNF_CRED_CTL__CLIENT_SEL_MASK  0xc000
#define HNF_CRED_CTL__CLIENT_SEL_FIELD 14,15

#define HNF_CRED_CTL__VAL_SHIFT 16
#define HNF_CRED_CTL__VAL_WIDTH 16
#define HNF_CRED_CTL__VAL_RESET_VAL 0
#define HNF_CRED_CTL__VAL_RMASK 0xffff
#define HNF_CRED_CTL__VAL_MASK  0xffff0000
#define HNF_CRED_CTL__VAL_FIELD 16,31


/*
 * SAM Control.
 * Provides access to SAM initialization.
 */
#define HNF_SAM_CTL 0x0058
#define HNF_SAM_CTL__LENGTH 0x0001

#define HNF_SAM_CTL__UPDATE_SHIFT 0
#define HNF_SAM_CTL__UPDATE_WIDTH 1
#define HNF_SAM_CTL__UPDATE_RESET_VAL 0
#define HNF_SAM_CTL__UPDATE_RMASK 0x1
#define HNF_SAM_CTL__UPDATE_MASK  0x1
#define HNF_SAM_CTL__UPDATE_FIELD 0,0

#define HNF_SAM_CTL__IDX_SHIFT 1
#define HNF_SAM_CTL__IDX_WIDTH 12
#define HNF_SAM_CTL__IDX_RESET_VAL 0
#define HNF_SAM_CTL__IDX_RMASK 0xfff
#define HNF_SAM_CTL__IDX_MASK  0x1ffe
#define HNF_SAM_CTL__IDX_FIELD 1,12
#define HNF_SAM_CTL__IDX_VAL_HNF_SIZE 0x7f7
#define HNF_SAM_CTL__IDX_VAL_LDR_SIZE 0x20

#define HNF_SAM_CTL__TBL_SEL_SHIFT 13
#define HNF_SAM_CTL__TBL_SEL_WIDTH 3
#define HNF_SAM_CTL__TBL_SEL_RESET_VAL 0
#define HNF_SAM_CTL__TBL_SEL_RMASK 0x7
#define HNF_SAM_CTL__TBL_SEL_MASK  0xe000
#define HNF_SAM_CTL__TBL_SEL_FIELD 13,15
#define HNF_SAM_CTL__TBL_SEL_VAL_LDR 0x0
#define HNF_SAM_CTL__TBL_SEL_VAL_HNF 0x1
#define HNF_SAM_CTL__TBL_SEL_VAL_PCI_NPF 0x2
#define HNF_SAM_CTL__TBL_SEL_VAL_PCI_PF 0x3
#define HNF_SAM_CTL__TBL_SEL_VAL_PCI_CFG 0x4

#define HNF_SAM_CTL__CLIENT_SEL_SHIFT 16
#define HNF_SAM_CTL__CLIENT_SEL_WIDTH 1
#define HNF_SAM_CTL__CLIENT_SEL_RESET_VAL 0
#define HNF_SAM_CTL__CLIENT_SEL_RMASK 0x1
#define HNF_SAM_CTL__CLIENT_SEL_MASK  0x10000
#define HNF_SAM_CTL__CLIENT_SEL_FIELD 16,16

#define HNF_SAM_CTL__READ_SHIFT 17
#define HNF_SAM_CTL__READ_WIDTH 1
#define HNF_SAM_CTL__READ_RESET_VAL 0
#define HNF_SAM_CTL__READ_RMASK 0x1
#define HNF_SAM_CTL__READ_MASK  0x20000
#define HNF_SAM_CTL__READ_FIELD 17,17

#define HNF_SAM_CTL__VAL_SHIFT 18
#define HNF_SAM_CTL__VAL_WIDTH 34
#define HNF_SAM_CTL__VAL_RESET_VAL 0
#define HNF_SAM_CTL__VAL_RMASK _64bit(0x3ffffffff)
#define HNF_SAM_CTL__VAL_MASK  _64bit(0xffffffffc0000)
#define HNF_SAM_CTL__VAL_FIELD 18,51


/*
 * Scratchpad register.
 * General purpose read/write register.
 */
#define HNF_HNF_SCRATCHPAD 0x20020
#define HNF_HNF_SCRATCHPAD__LENGTH 0x0001

#define HNF_HNF_SCRATCHPAD__HNF_SCRATCHPAD_SHIFT 0
#define HNF_HNF_SCRATCHPAD__HNF_SCRATCHPAD_WIDTH 64
#define HNF_HNF_SCRATCHPAD__HNF_SCRATCHPAD_RESET_VAL 0
#define HNF_HNF_SCRATCHPAD__HNF_SCRATCHPAD_RMASK _64bit(0xffffffffffffffff)
#define HNF_HNF_SCRATCHPAD__HNF_SCRATCHPAD_MASK  _64bit(0xffffffffffffffff)
#define HNF_HNF_SCRATCHPAD__HNF_SCRATCHPAD_FIELD 0,63


/*
 * Array Dimensions.
 * Provides the dimensions of the array of clusters.
 */
#define HNF_HNF_DIM 0x20008
#define HNF_HNF_DIM__LENGTH 0x0001

#define HNF_HNF_DIM__X_SHIFT 0
#define HNF_HNF_DIM__X_WIDTH 8
#define HNF_HNF_DIM__X_RESET_VAL 0
#define HNF_HNF_DIM__X_RMASK 0xff
#define HNF_HNF_DIM__X_MASK  0xff
#define HNF_HNF_DIM__X_FIELD 0,7

#define HNF_HNF_DIM__Y_SHIFT 8
#define HNF_HNF_DIM__Y_WIDTH 8
#define HNF_HNF_DIM__Y_RESET_VAL 0
#define HNF_HNF_DIM__Y_RMASK 0xff
#define HNF_HNF_DIM__Y_MASK  0xff00
#define HNF_HNF_DIM__Y_FIELD 8,15

#define HNF_HNF_DIM__XC_SHIFT 16
#define HNF_HNF_DIM__XC_WIDTH 8
#define HNF_HNF_DIM__XC_RESET_VAL 0
#define HNF_HNF_DIM__XC_RMASK 0xff
#define HNF_HNF_DIM__XC_MASK  0xff0000
#define HNF_HNF_DIM__XC_FIELD 16,23

#define HNF_HNF_DIM__YC_SHIFT 24
#define HNF_HNF_DIM__YC_WIDTH 8
#define HNF_HNF_DIM__YC_RESET_VAL 0
#define HNF_HNF_DIM__YC_RMASK 0xff
#define HNF_HNF_DIM__YC_MASK  0xff000000
#define HNF_HNF_DIM__YC_FIELD 24,31

#define HNF_HNF_DIM__Z_SHIFT 32
#define HNF_HNF_DIM__Z_WIDTH 4
#define HNF_HNF_DIM__Z_RESET_VAL 0
#define HNF_HNF_DIM__Z_RMASK 0xf
#define HNF_HNF_DIM__Z_MASK  _64bit(0xf00000000)
#define HNF_HNF_DIM__Z_FIELD 32,35


/*
 * Directory Configurtaion.
 * Configuration information for Directory.
 */
#define HNF_HNF_CFG 0x20000
#define HNF_HNF_CFG__LENGTH 0x0001

#define HNF_HNF_CFG__FWD_I_CTL_SHIFT 0
#define HNF_HNF_CFG__FWD_I_CTL_WIDTH 2
#define HNF_HNF_CFG__FWD_I_CTL_RESET_VAL 1
#define HNF_HNF_CFG__FWD_I_CTL_RMASK 0x3
#define HNF_HNF_CFG__FWD_I_CTL_MASK  0x3
#define HNF_HNF_CFG__FWD_I_CTL_FIELD 0,1
#define HNF_HNF_CFG__FWD_I_CTL_VAL_NEVER 0x0
#define HNF_HNF_CFG__FWD_I_CTL_VAL_HIT 0x1
#define HNF_HNF_CFG__FWD_I_CTL_VAL_MISS 0x2
#define HNF_HNF_CFG__FWD_I_CTL_VAL_RESERVED 0x3

#define HNF_HNF_CFG__FWD_D_CTL_SHIFT 2
#define HNF_HNF_CFG__FWD_D_CTL_WIDTH 2
#define HNF_HNF_CFG__FWD_D_CTL_RESET_VAL 1
#define HNF_HNF_CFG__FWD_D_CTL_RMASK 0x3
#define HNF_HNF_CFG__FWD_D_CTL_MASK  0xc
#define HNF_HNF_CFG__FWD_D_CTL_FIELD 2,3
#define HNF_HNF_CFG__FWD_D_CTL_VAL_NEVER 0x0
#define HNF_HNF_CFG__FWD_D_CTL_VAL_HIT 0x1
#define HNF_HNF_CFG__FWD_D_CTL_VAL_MISS 0x2
#define HNF_HNF_CFG__FWD_D_CTL_VAL_RESERVED 0x3

#define HNF_HNF_CFG__FWD_WRITE_CTL_SHIFT 4
#define HNF_HNF_CFG__FWD_WRITE_CTL_WIDTH 2
#define HNF_HNF_CFG__FWD_WRITE_CTL_RESET_VAL 0
#define HNF_HNF_CFG__FWD_WRITE_CTL_RMASK 0x3
#define HNF_HNF_CFG__FWD_WRITE_CTL_MASK  0x30
#define HNF_HNF_CFG__FWD_WRITE_CTL_FIELD 4,5
#define HNF_HNF_CFG__FWD_WRITE_CTL_VAL_NEVER 0x0
#define HNF_HNF_CFG__FWD_WRITE_CTL_VAL_GT_1 0x1
#define HNF_HNF_CFG__FWD_WRITE_CTL_VAL_GT_0 0x2
#define HNF_HNF_CFG__FWD_WRITE_CTL_VAL_ALWAYS 0x3

#define HNF_HNF_CFG__L3_PD_EN_SHIFT 6
#define HNF_HNF_CFG__L3_PD_EN_WIDTH 1
#define HNF_HNF_CFG__L3_PD_EN_RESET_VAL 1
#define HNF_HNF_CFG__L3_PD_EN_RMASK 0x1
#define HNF_HNF_CFG__L3_PD_EN_MASK  0x40
#define HNF_HNF_CFG__L3_PD_EN_FIELD 6,6

#define HNF_HNF_CFG__REQ_SA_EN_SHIFT 7
#define HNF_HNF_CFG__REQ_SA_EN_WIDTH 1
#define HNF_HNF_CFG__REQ_SA_EN_RESET_VAL 1
#define HNF_HNF_CFG__REQ_SA_EN_RMASK 0x1
#define HNF_HNF_CFG__REQ_SA_EN_MASK  0x80
#define HNF_HNF_CFG__REQ_SA_EN_FIELD 7,7

#define HNF_HNF_CFG__HBE_SHIFT 8
#define HNF_HNF_CFG__HBE_WIDTH 1
#define HNF_HNF_CFG__HBE_RESET_VAL 1
#define HNF_HNF_CFG__HBE_RMASK 0x1
#define HNF_HNF_CFG__HBE_MASK  0x100
#define HNF_HNF_CFG__HBE_FIELD 8,8

#define HNF_HNF_CFG__INDEX_SHIFT 10
#define HNF_HNF_CFG__INDEX_WIDTH 1
#define HNF_HNF_CFG__INDEX_RESET_VAL 1
#define HNF_HNF_CFG__INDEX_RMASK 0x1
#define HNF_HNF_CFG__INDEX_MASK  0x400
#define HNF_HNF_CFG__INDEX_FIELD 10,10
#define HNF_HNF_CFG__INDEX_VAL_DIRECT 0x0
#define HNF_HNF_CFG__INDEX_VAL_SCRAMBLED 0x1

#define HNF_HNF_CFG__LMR_SCRAMBLE_EN_SHIFT 11
#define HNF_HNF_CFG__LMR_SCRAMBLE_EN_WIDTH 1
#define HNF_HNF_CFG__LMR_SCRAMBLE_EN_RESET_VAL 0
#define HNF_HNF_CFG__LMR_SCRAMBLE_EN_RMASK 0x1
#define HNF_HNF_CFG__LMR_SCRAMBLE_EN_MASK  0x800
#define HNF_HNF_CFG__LMR_SCRAMBLE_EN_FIELD 11,11

#define HNF_HNF_CFG__SNP_LIMIT_SHIFT 12
#define HNF_HNF_CFG__SNP_LIMIT_WIDTH 4
#define HNF_HNF_CFG__SNP_LIMIT_RESET_VAL 8
#define HNF_HNF_CFG__SNP_LIMIT_RMASK 0xf
#define HNF_HNF_CFG__SNP_LIMIT_MASK  0xf000
#define HNF_HNF_CFG__SNP_LIMIT_FIELD 12,15

#define HNF_HNF_CFG__EXCL_PS_SHIFT 16
#define HNF_HNF_CFG__EXCL_PS_WIDTH 2
#define HNF_HNF_CFG__EXCL_PS_RESET_VAL 2
#define HNF_HNF_CFG__EXCL_PS_RMASK 0x3
#define HNF_HNF_CFG__EXCL_PS_MASK  0x30000
#define HNF_HNF_CFG__EXCL_PS_FIELD 16,17
#define HNF_HNF_CFG__EXCL_PS_VAL_OFF 0x0
#define HNF_HNF_CFG__EXCL_PS_VAL_LOW 0x1
#define HNF_HNF_CFG__EXCL_PS_VAL_MED 0x2
#define HNF_HNF_CFG__EXCL_PS_VAL_HI 0x3

#define HNF_HNF_CFG__EXCL_TO_SHIFT 18
#define HNF_HNF_CFG__EXCL_TO_WIDTH 1
#define HNF_HNF_CFG__EXCL_TO_RESET_VAL 0
#define HNF_HNF_CFG__EXCL_TO_RMASK 0x1
#define HNF_HNF_CFG__EXCL_TO_MASK  0x40000
#define HNF_HNF_CFG__EXCL_TO_FIELD 18,18

#define HNF_HNF_CFG__SW_INT_SHIFT 19
#define HNF_HNF_CFG__SW_INT_WIDTH 1
#define HNF_HNF_CFG__SW_INT_RESET_VAL 0
#define HNF_HNF_CFG__SW_INT_RMASK 0x1
#define HNF_HNF_CFG__SW_INT_MASK  0x80000
#define HNF_HNF_CFG__SW_INT_FIELD 19,19

#define HNF_HNF_CFG__TSO_NOWAIT_SHIFT 20
#define HNF_HNF_CFG__TSO_NOWAIT_WIDTH 1
#define HNF_HNF_CFG__TSO_NOWAIT_RESET_VAL 0
#define HNF_HNF_CFG__TSO_NOWAIT_RMASK 0x1
#define HNF_HNF_CFG__TSO_NOWAIT_MASK  0x100000
#define HNF_HNF_CFG__TSO_NOWAIT_FIELD 20,20

#define HNF_HNF_CFG__TSO_ARB_LIMIT_SHIFT 21
#define HNF_HNF_CFG__TSO_ARB_LIMIT_WIDTH 2
#define HNF_HNF_CFG__TSO_ARB_LIMIT_RESET_VAL 0
#define HNF_HNF_CFG__TSO_ARB_LIMIT_RMASK 0x3
#define HNF_HNF_CFG__TSO_ARB_LIMIT_MASK  0x600000
#define HNF_HNF_CFG__TSO_ARB_LIMIT_FIELD 21,22
#define HNF_HNF_CFG__TSO_ARB_LIMIT_VAL_1 0x0
#define HNF_HNF_CFG__TSO_ARB_LIMIT_VAL_2 0x1
#define HNF_HNF_CFG__TSO_ARB_LIMIT_VAL_4 0x2
#define HNF_HNF_CFG__TSO_ARB_LIMIT_VAL_8 0x3

#define HNF_HNF_CFG__TSO_NOARB_TO_SHIFT 23
#define HNF_HNF_CFG__TSO_NOARB_TO_WIDTH 3
#define HNF_HNF_CFG__TSO_NOARB_TO_RESET_VAL 1
#define HNF_HNF_CFG__TSO_NOARB_TO_RMASK 0x7
#define HNF_HNF_CFG__TSO_NOARB_TO_MASK  0x3800000
#define HNF_HNF_CFG__TSO_NOARB_TO_FIELD 23,25
#define HNF_HNF_CFG__TSO_NOARB_TO_VAL_500 0x0
#define HNF_HNF_CFG__TSO_NOARB_TO_VAL_1000 0x1
#define HNF_HNF_CFG__TSO_NOARB_TO_VAL_1500 0x2
#define HNF_HNF_CFG__TSO_NOARB_TO_VAL_2000 0x3
#define HNF_HNF_CFG__TSO_NOARB_TO_VAL_2500 0x4
#define HNF_HNF_CFG__TSO_NOARB_TO_VAL_3000 0x5
#define HNF_HNF_CFG__TSO_NOARB_TO_VAL_4000 0x6
#define HNF_HNF_CFG__TSO_NOARB_TO_VAL_10000 0x7

#define HNF_HNF_CFG__TSO_CL_WAIT_SHIFT 26
#define HNF_HNF_CFG__TSO_CL_WAIT_WIDTH 1
#define HNF_HNF_CFG__TSO_CL_WAIT_RESET_VAL 0
#define HNF_HNF_CFG__TSO_CL_WAIT_RMASK 0x1
#define HNF_HNF_CFG__TSO_CL_WAIT_MASK  0x4000000
#define HNF_HNF_CFG__TSO_CL_WAIT_FIELD 26,26

#define HNF_HNF_CFG__IO_WRITE_F_SHIFT 27
#define HNF_HNF_CFG__IO_WRITE_F_WIDTH 1
#define HNF_HNF_CFG__IO_WRITE_F_RESET_VAL 1
#define HNF_HNF_CFG__IO_WRITE_F_RMASK 0x1
#define HNF_HNF_CFG__IO_WRITE_F_MASK  0x8000000
#define HNF_HNF_CFG__IO_WRITE_F_FIELD 27,27


/*
 * Directory Error Status.
 * Logs information about errors. All of the error bits are write-1-to-clear.
 * The fields giving information about the errors are only
 *     valid if an error bit is set. All write-1-to-clear error bits will
 * assert an interrupt.
 */
#define HNF_HNF_ERR_STATUS 0x20030
#define HNF_HNF_ERR_STATUS__LENGTH 0x0001

#define HNF_HNF_ERR_STATUS__STATE_ECC_SHIFT 0
#define HNF_HNF_ERR_STATUS__STATE_ECC_WIDTH 1
#define HNF_HNF_ERR_STATUS__STATE_ECC_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__STATE_ECC_RMASK 0x1
#define HNF_HNF_ERR_STATUS__STATE_ECC_MASK  0x1
#define HNF_HNF_ERR_STATUS__STATE_ECC_FIELD 0,0

#define HNF_HNF_ERR_STATUS__SHARE_ECC_SHIFT 1
#define HNF_HNF_ERR_STATUS__SHARE_ECC_WIDTH 1
#define HNF_HNF_ERR_STATUS__SHARE_ECC_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__SHARE_ECC_RMASK 0x1
#define HNF_HNF_ERR_STATUS__SHARE_ECC_MASK  0x2
#define HNF_HNF_ERR_STATUS__SHARE_ECC_FIELD 1,1

#define HNF_HNF_ERR_STATUS__TAG_ECC_SHIFT 2
#define HNF_HNF_ERR_STATUS__TAG_ECC_WIDTH 1
#define HNF_HNF_ERR_STATUS__TAG_ECC_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__TAG_ECC_RMASK 0x1
#define HNF_HNF_ERR_STATUS__TAG_ECC_MASK  0x4
#define HNF_HNF_ERR_STATUS__TAG_ECC_FIELD 2,2

#define HNF_HNF_ERR_STATUS__ECC_MULTIPLE_SHIFT 3
#define HNF_HNF_ERR_STATUS__ECC_MULTIPLE_WIDTH 1
#define HNF_HNF_ERR_STATUS__ECC_MULTIPLE_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__ECC_MULTIPLE_RMASK 0x1
#define HNF_HNF_ERR_STATUS__ECC_MULTIPLE_MASK  0x8
#define HNF_HNF_ERR_STATUS__ECC_MULTIPLE_FIELD 3,3

#define HNF_HNF_ERR_STATUS__ECC_TYPE_SHIFT 4
#define HNF_HNF_ERR_STATUS__ECC_TYPE_WIDTH 1
#define HNF_HNF_ERR_STATUS__ECC_TYPE_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__ECC_TYPE_RMASK 0x1
#define HNF_HNF_ERR_STATUS__ECC_TYPE_MASK  0x10
#define HNF_HNF_ERR_STATUS__ECC_TYPE_FIELD 4,4

#define HNF_HNF_ERR_STATUS__ECC_INDEX_SHIFT 8
#define HNF_HNF_ERR_STATUS__ECC_INDEX_WIDTH 10
#define HNF_HNF_ERR_STATUS__ECC_INDEX_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__ECC_INDEX_RMASK 0x3ff
#define HNF_HNF_ERR_STATUS__ECC_INDEX_MASK  0x3ff00
#define HNF_HNF_ERR_STATUS__ECC_INDEX_FIELD 8,17

#define HNF_HNF_ERR_STATUS__RXDAT_DERR_SHIFT 20
#define HNF_HNF_ERR_STATUS__RXDAT_DERR_WIDTH 1
#define HNF_HNF_ERR_STATUS__RXDAT_DERR_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__RXDAT_DERR_RMASK 0x1
#define HNF_HNF_ERR_STATUS__RXDAT_DERR_MASK  0x100000
#define HNF_HNF_ERR_STATUS__RXDAT_DERR_FIELD 20,20

#define HNF_HNF_ERR_STATUS__RXDAT_NDERR_SHIFT 21
#define HNF_HNF_ERR_STATUS__RXDAT_NDERR_WIDTH 1
#define HNF_HNF_ERR_STATUS__RXDAT_NDERR_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__RXDAT_NDERR_RMASK 0x1
#define HNF_HNF_ERR_STATUS__RXDAT_NDERR_MASK  0x200000
#define HNF_HNF_ERR_STATUS__RXDAT_NDERR_FIELD 21,21

#define HNF_HNF_ERR_STATUS__RXRSP_DERR_SHIFT 22
#define HNF_HNF_ERR_STATUS__RXRSP_DERR_WIDTH 1
#define HNF_HNF_ERR_STATUS__RXRSP_DERR_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__RXRSP_DERR_RMASK 0x1
#define HNF_HNF_ERR_STATUS__RXRSP_DERR_MASK  0x400000
#define HNF_HNF_ERR_STATUS__RXRSP_DERR_FIELD 22,22

#define HNF_HNF_ERR_STATUS__RXRSP_NDERR_SHIFT 23
#define HNF_HNF_ERR_STATUS__RXRSP_NDERR_WIDTH 1
#define HNF_HNF_ERR_STATUS__RXRSP_NDERR_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__RXRSP_NDERR_RMASK 0x1
#define HNF_HNF_ERR_STATUS__RXRSP_NDERR_MASK  0x800000
#define HNF_HNF_ERR_STATUS__RXRSP_NDERR_FIELD 23,23

#define HNF_HNF_ERR_STATUS__RX_ERR_MULTIPLE_SHIFT 24
#define HNF_HNF_ERR_STATUS__RX_ERR_MULTIPLE_WIDTH 1
#define HNF_HNF_ERR_STATUS__RX_ERR_MULTIPLE_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__RX_ERR_MULTIPLE_RMASK 0x1
#define HNF_HNF_ERR_STATUS__RX_ERR_MULTIPLE_MASK  0x1000000
#define HNF_HNF_ERR_STATUS__RX_ERR_MULTIPLE_FIELD 24,24

#define HNF_HNF_ERR_STATUS__RESP_ERR_NODEID_SHIFT 32
#define HNF_HNF_ERR_STATUS__RESP_ERR_NODEID_WIDTH 7
#define HNF_HNF_ERR_STATUS__RESP_ERR_NODEID_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__RESP_ERR_NODEID_RMASK 0x7f
#define HNF_HNF_ERR_STATUS__RESP_ERR_NODEID_MASK  _64bit(0x7f00000000)
#define HNF_HNF_ERR_STATUS__RESP_ERR_NODEID_FIELD 32,38

#define HNF_HNF_ERR_STATUS__SW_INT_SHIFT 40
#define HNF_HNF_ERR_STATUS__SW_INT_WIDTH 1
#define HNF_HNF_ERR_STATUS__SW_INT_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__SW_INT_RMASK 0x1
#define HNF_HNF_ERR_STATUS__SW_INT_MASK  _64bit(0x10000000000)
#define HNF_HNF_ERR_STATUS__SW_INT_FIELD 40,40

#define HNF_HNF_ERR_STATUS__CMO_ERR_SHIFT 41
#define HNF_HNF_ERR_STATUS__CMO_ERR_WIDTH 1
#define HNF_HNF_ERR_STATUS__CMO_ERR_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__CMO_ERR_RMASK 0x1
#define HNF_HNF_ERR_STATUS__CMO_ERR_MASK  _64bit(0x20000000000)
#define HNF_HNF_ERR_STATUS__CMO_ERR_FIELD 41,41

#define HNF_HNF_ERR_STATUS__CMO_ERR_ID_SHIFT 42
#define HNF_HNF_ERR_STATUS__CMO_ERR_ID_WIDTH 7
#define HNF_HNF_ERR_STATUS__CMO_ERR_ID_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__CMO_ERR_ID_RMASK 0x7f
#define HNF_HNF_ERR_STATUS__CMO_ERR_ID_MASK  _64bit(0x1fc0000000000)
#define HNF_HNF_ERR_STATUS__CMO_ERR_ID_FIELD 42,48

#define HNF_HNF_ERR_STATUS__MMIO_RD_ERR_SHIFT 49
#define HNF_HNF_ERR_STATUS__MMIO_RD_ERR_WIDTH 1
#define HNF_HNF_ERR_STATUS__MMIO_RD_ERR_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__MMIO_RD_ERR_RMASK 0x1
#define HNF_HNF_ERR_STATUS__MMIO_RD_ERR_MASK  _64bit(0x2000000000000)
#define HNF_HNF_ERR_STATUS__MMIO_RD_ERR_FIELD 49,49

#define HNF_HNF_ERR_STATUS__MMIO_RD_ERR_ID_SHIFT 50
#define HNF_HNF_ERR_STATUS__MMIO_RD_ERR_ID_WIDTH 7
#define HNF_HNF_ERR_STATUS__MMIO_RD_ERR_ID_RESET_VAL 0
#define HNF_HNF_ERR_STATUS__MMIO_RD_ERR_ID_RMASK 0x7f
#define HNF_HNF_ERR_STATUS__MMIO_RD_ERR_ID_MASK  _64bit(0x1fc000000000000)
#define HNF_HNF_ERR_STATUS__MMIO_RD_ERR_ID_FIELD 50,56


/*
 * Directory Performance Monitor Control.
 * Controls use of perfromance monitoring in Directory.
 */
#define HNF_HNF_PERF_CTL 0x20040
#define HNF_HNF_PERF_CTL__LENGTH 0x0001

#define HNF_HNF_PERF_CTL__MAF_SEL_SHIFT 8
#define HNF_HNF_PERF_CTL__MAF_SEL_WIDTH 7
#define HNF_HNF_PERF_CTL__MAF_SEL_RESET_VAL 0
#define HNF_HNF_PERF_CTL__MAF_SEL_RMASK 0x7f
#define HNF_HNF_PERF_CTL__MAF_SEL_MASK  0x7f00
#define HNF_HNF_PERF_CTL__MAF_SEL_FIELD 8,14

#define HNF_HNF_PERF_CTL__RNF_SEL_SHIFT 16
#define HNF_HNF_PERF_CTL__RNF_SEL_WIDTH 7
#define HNF_HNF_PERF_CTL__RNF_SEL_RESET_VAL 0
#define HNF_HNF_PERF_CTL__RNF_SEL_RMASK 0x7f
#define HNF_HNF_PERF_CTL__RNF_SEL_MASK  0x7f0000
#define HNF_HNF_PERF_CTL__RNF_SEL_FIELD 16,22

#define HNF_HNF_PERF_CTL__OPCODE_SEL_SHIFT 24
#define HNF_HNF_PERF_CTL__OPCODE_SEL_WIDTH 5
#define HNF_HNF_PERF_CTL__OPCODE_SEL_RESET_VAL 0
#define HNF_HNF_PERF_CTL__OPCODE_SEL_RMASK 0x1f
#define HNF_HNF_PERF_CTL__OPCODE_SEL_MASK  0x1f000000
#define HNF_HNF_PERF_CTL__OPCODE_SEL_FIELD 24,28


/*
 * Memory Subsystem Node IDs.
 * Specifies the locations (e.g. the Node IDs) of the Memory Controllers.
 */
#define HNF_HNF_MSS_NODEID 0x20080
#define HNF_HNF_MSS_NODEID__LENGTH 0x0001

#define HNF_HNF_MSS_NODEID__MSS_0_SHIFT 0
#define HNF_HNF_MSS_NODEID__MSS_0_WIDTH 7
#define HNF_HNF_MSS_NODEID__MSS_0_RESET_VAL 112
#define HNF_HNF_MSS_NODEID__MSS_0_RMASK 0x7f
#define HNF_HNF_MSS_NODEID__MSS_0_MASK  0x7f
#define HNF_HNF_MSS_NODEID__MSS_0_FIELD 0,6

#define HNF_HNF_MSS_NODEID__MSS_1_SHIFT 8
#define HNF_HNF_MSS_NODEID__MSS_1_WIDTH 7
#define HNF_HNF_MSS_NODEID__MSS_1_RESET_VAL 112
#define HNF_HNF_MSS_NODEID__MSS_1_RMASK 0x7f
#define HNF_HNF_MSS_NODEID__MSS_1_MASK  0x7f00
#define HNF_HNF_MSS_NODEID__MSS_1_FIELD 8,14

#define HNF_HNF_MSS_NODEID__MSS_2_SHIFT 16
#define HNF_HNF_MSS_NODEID__MSS_2_WIDTH 7
#define HNF_HNF_MSS_NODEID__MSS_2_RESET_VAL 112
#define HNF_HNF_MSS_NODEID__MSS_2_RMASK 0x7f
#define HNF_HNF_MSS_NODEID__MSS_2_MASK  0x7f0000
#define HNF_HNF_MSS_NODEID__MSS_2_FIELD 16,22

#define HNF_HNF_MSS_NODEID__MSS_3_SHIFT 24
#define HNF_HNF_MSS_NODEID__MSS_3_WIDTH 7
#define HNF_HNF_MSS_NODEID__MSS_3_RESET_VAL 112
#define HNF_HNF_MSS_NODEID__MSS_3_RMASK 0x7f
#define HNF_HNF_MSS_NODEID__MSS_3_MASK  0x7f000000
#define HNF_HNF_MSS_NODEID__MSS_3_FIELD 24,30


/*
 * Memory Subsystem DIMM Type.
 * Specifies the type of DIMM for each of the Memory Controllers. 0 = not
 * NVDIMM, 1 = NVDIMM.
 */
#define HNF_HNF_PMR_TYPE 0x20220
#define HNF_HNF_PMR_TYPE__LENGTH 0x0001

#define HNF_HNF_PMR_TYPE__TYPE_SHIFT 0
#define HNF_HNF_PMR_TYPE__TYPE_WIDTH 8
#define HNF_HNF_PMR_TYPE__TYPE_RESET_VAL 0
#define HNF_HNF_PMR_TYPE__TYPE_RMASK 0xff
#define HNF_HNF_PMR_TYPE__TYPE_MASK  0xff
#define HNF_HNF_PMR_TYPE__TYPE_FIELD 0,7


/*
 * Physical Memory Region Thresholds.
 * Physical Address thresholds used to select 8 Physical Address Regions.
 * Region n is selected for a PA when PMR_THRESHOLD_n <= PA <
 * PMR_THRESHOLD_n+1. Note that if PMR_THRESHOLD_n == PMR_THRESHOLD_n+1 then
 * region n is not used. PMRs 0-3 are used for defining up to 4 different DDR
 * memory regions, and PMRs 4-7 are used for defining up to 4 different.
 */
#define HNF_HNF_PMR_THRESHOLD__FIRST_WORD 0x20090
#define HNF_HNF_PMR_THRESHOLD__LAST_WORD 0x200c8
#define HNF_HNF_PMR_THRESHOLD__LENGTH 0x0040
#define HNF_HNF_PMR_THRESHOLD__STRIDE 0x0008

#define HNF_HNF_PMR_THRESHOLD__PA_SHIFT 30
#define HNF_HNF_PMR_THRESHOLD__PA_WIDTH 10
#define HNF_HNF_PMR_THRESHOLD__PA_RESET_VAL 0
#define HNF_HNF_PMR_THRESHOLD__PA_RMASK 0x3ff
#define HNF_HNF_PMR_THRESHOLD__PA_MASK  _64bit(0xffc0000000)
#define HNF_HNF_PMR_THRESHOLD__PA_FIELD 30,39


/*
 * Physical Memory Region Thresholds.
 * Physical Address thresholds used to select 8 Physical Address Regions.
 * Region n is selected for a PA when PMR_THRESHOLD_n <= PA <
 * PMR_THRESHOLD_n+1. Note that if PMR_THRESHOLD_n == PMR_THRESHOLD_n+1 then
 * region n is not used. PMRs 0-3 are used for defining up to 4 different DDR
 * memory regions, and PMRs 4-7 are used for defining up to 4 different.
 */
#define HNF_HNF_PMR_THRESHOLD_1__FIRST_WORD 0x20098
#define HNF_HNF_PMR_THRESHOLD_1__LAST_WORD 0x200d0
#define HNF_HNF_PMR_THRESHOLD_1__LENGTH 0x0040
#define HNF_HNF_PMR_THRESHOLD_1__STRIDE 0x0008

#define HNF_HNF_PMR_THRESHOLD_1__PA_SHIFT 30
#define HNF_HNF_PMR_THRESHOLD_1__PA_WIDTH 10
#define HNF_HNF_PMR_THRESHOLD_1__PA_RESET_VAL 0
#define HNF_HNF_PMR_THRESHOLD_1__PA_RMASK 0x3ff
#define HNF_HNF_PMR_THRESHOLD_1__PA_MASK  _64bit(0xffc0000000)
#define HNF_HNF_PMR_THRESHOLD_1__PA_FIELD 30,39


/*
 * Physical Memory Region Thresholds.
 * Physical Address thresholds used to select 8 Physical Address Regions.
 * Region n is selected for a PA when PMR_THRESHOLD_n <= PA <
 * PMR_THRESHOLD_n+1. Note that if PMR_THRESHOLD_n == PMR_THRESHOLD_n+1 then
 * region n is not used. PMRs 0-3 are used for defining up to 4 different DDR
 * memory regions, and PMRs 4-7 are used for defining up to 4 different.
 */
#define HNF_HNF_PMR_THRESHOLD_2__FIRST_WORD 0x200a0
#define HNF_HNF_PMR_THRESHOLD_2__LAST_WORD 0x200d8
#define HNF_HNF_PMR_THRESHOLD_2__LENGTH 0x0040
#define HNF_HNF_PMR_THRESHOLD_2__STRIDE 0x0008

#define HNF_HNF_PMR_THRESHOLD_2__PA_SHIFT 30
#define HNF_HNF_PMR_THRESHOLD_2__PA_WIDTH 10
#define HNF_HNF_PMR_THRESHOLD_2__PA_RESET_VAL 0
#define HNF_HNF_PMR_THRESHOLD_2__PA_RMASK 0x3ff
#define HNF_HNF_PMR_THRESHOLD_2__PA_MASK  _64bit(0xffc0000000)
#define HNF_HNF_PMR_THRESHOLD_2__PA_FIELD 30,39


/*
 * Physical Memory Region Thresholds.
 * Physical Address thresholds used to select 8 Physical Address Regions.
 * Region n is selected for a PA when PMR_THRESHOLD_n <= PA <
 * PMR_THRESHOLD_n+1. Note that if PMR_THRESHOLD_n == PMR_THRESHOLD_n+1 then
 * region n is not used. PMRs 0-3 are used for defining up to 4 different DDR
 * memory regions, and PMRs 4-7 are used for defining up to 4 different.
 */
#define HNF_HNF_PMR_THRESHOLD_3__FIRST_WORD 0x200a8
#define HNF_HNF_PMR_THRESHOLD_3__LAST_WORD 0x200e0
#define HNF_HNF_PMR_THRESHOLD_3__LENGTH 0x0040
#define HNF_HNF_PMR_THRESHOLD_3__STRIDE 0x0008

#define HNF_HNF_PMR_THRESHOLD_3__PA_SHIFT 30
#define HNF_HNF_PMR_THRESHOLD_3__PA_WIDTH 10
#define HNF_HNF_PMR_THRESHOLD_3__PA_RESET_VAL 0
#define HNF_HNF_PMR_THRESHOLD_3__PA_RMASK 0x3ff
#define HNF_HNF_PMR_THRESHOLD_3__PA_MASK  _64bit(0xffc0000000)
#define HNF_HNF_PMR_THRESHOLD_3__PA_FIELD 30,39


/*
 * Physical Memory Region Thresholds.
 * Physical Address thresholds used to select 8 Physical Address Regions.
 * Region n is selected for a PA when PMR_THRESHOLD_n <= PA <
 * PMR_THRESHOLD_n+1. Note that if PMR_THRESHOLD_n == PMR_THRESHOLD_n+1 then
 * region n is not used. PMRs 0-3 are used for defining up to 4 different DDR
 * memory regions, and PMRs 4-7 are used for defining up to 4 different.
 */
#define HNF_HNF_PMR_THRESHOLD_4__FIRST_WORD 0x200b0
#define HNF_HNF_PMR_THRESHOLD_4__LAST_WORD 0x200e8
#define HNF_HNF_PMR_THRESHOLD_4__LENGTH 0x0040
#define HNF_HNF_PMR_THRESHOLD_4__STRIDE 0x0008

#define HNF_HNF_PMR_THRESHOLD_4__PA_SHIFT 30
#define HNF_HNF_PMR_THRESHOLD_4__PA_WIDTH 10
#define HNF_HNF_PMR_THRESHOLD_4__PA_RESET_VAL 0
#define HNF_HNF_PMR_THRESHOLD_4__PA_RMASK 0x3ff
#define HNF_HNF_PMR_THRESHOLD_4__PA_MASK  _64bit(0xffc0000000)
#define HNF_HNF_PMR_THRESHOLD_4__PA_FIELD 30,39


/*
 * Physical Memory Region Thresholds.
 * Physical Address thresholds used to select 8 Physical Address Regions.
 * Region n is selected for a PA when PMR_THRESHOLD_n <= PA <
 * PMR_THRESHOLD_n+1. Note that if PMR_THRESHOLD_n == PMR_THRESHOLD_n+1 then
 * region n is not used. PMRs 0-3 are used for defining up to 4 different DDR
 * memory regions, and PMRs 4-7 are used for defining up to 4 different.
 */
#define HNF_HNF_PMR_THRESHOLD_5__FIRST_WORD 0x200b8
#define HNF_HNF_PMR_THRESHOLD_5__LAST_WORD 0x200f0
#define HNF_HNF_PMR_THRESHOLD_5__LENGTH 0x0040
#define HNF_HNF_PMR_THRESHOLD_5__STRIDE 0x0008

#define HNF_HNF_PMR_THRESHOLD_5__PA_SHIFT 30
#define HNF_HNF_PMR_THRESHOLD_5__PA_WIDTH 10
#define HNF_HNF_PMR_THRESHOLD_5__PA_RESET_VAL 0
#define HNF_HNF_PMR_THRESHOLD_5__PA_RMASK 0x3ff
#define HNF_HNF_PMR_THRESHOLD_5__PA_MASK  _64bit(0xffc0000000)
#define HNF_HNF_PMR_THRESHOLD_5__PA_FIELD 30,39


/*
 * Physical Memory Region Thresholds.
 * Physical Address thresholds used to select 8 Physical Address Regions.
 * Region n is selected for a PA when PMR_THRESHOLD_n <= PA <
 * PMR_THRESHOLD_n+1. Note that if PMR_THRESHOLD_n == PMR_THRESHOLD_n+1 then
 * region n is not used. PMRs 0-3 are used for defining up to 4 different DDR
 * memory regions, and PMRs 4-7 are used for defining up to 4 different.
 */
#define HNF_HNF_PMR_THRESHOLD_6__FIRST_WORD 0x200c0
#define HNF_HNF_PMR_THRESHOLD_6__LAST_WORD 0x200f8
#define HNF_HNF_PMR_THRESHOLD_6__LENGTH 0x0040
#define HNF_HNF_PMR_THRESHOLD_6__STRIDE 0x0008

#define HNF_HNF_PMR_THRESHOLD_6__PA_SHIFT 30
#define HNF_HNF_PMR_THRESHOLD_6__PA_WIDTH 10
#define HNF_HNF_PMR_THRESHOLD_6__PA_RESET_VAL 0
#define HNF_HNF_PMR_THRESHOLD_6__PA_RMASK 0x3ff
#define HNF_HNF_PMR_THRESHOLD_6__PA_MASK  _64bit(0xffc0000000)
#define HNF_HNF_PMR_THRESHOLD_6__PA_FIELD 30,39


/*
 * Physical Memory Region Thresholds.
 * Physical Address thresholds used to select 8 Physical Address Regions.
 * Region n is selected for a PA when PMR_THRESHOLD_n <= PA <
 * PMR_THRESHOLD_n+1. Note that if PMR_THRESHOLD_n == PMR_THRESHOLD_n+1 then
 * region n is not used. PMRs 0-3 are used for defining up to 4 different DDR
 * memory regions, and PMRs 4-7 are used for defining up to 4 different.
 */
#define HNF_HNF_PMR_THRESHOLD_7__FIRST_WORD 0x200c8
#define HNF_HNF_PMR_THRESHOLD_7__LAST_WORD 0x20100
#define HNF_HNF_PMR_THRESHOLD_7__LENGTH 0x0040
#define HNF_HNF_PMR_THRESHOLD_7__STRIDE 0x0008

#define HNF_HNF_PMR_THRESHOLD_7__PA_SHIFT 30
#define HNF_HNF_PMR_THRESHOLD_7__PA_WIDTH 10
#define HNF_HNF_PMR_THRESHOLD_7__PA_RESET_VAL 0
#define HNF_HNF_PMR_THRESHOLD_7__PA_RMASK 0x3ff
#define HNF_HNF_PMR_THRESHOLD_7__PA_MASK  _64bit(0xffc0000000)
#define HNF_HNF_PMR_THRESHOLD_7__PA_FIELD 30,39


/*
 * Logical Memory Region to MSS ID.
 * Each Register is a table for one of the Physical Memory Regions (register
 * n for PMR n). The values stored in the table are the MSS ID for each
 * Logical Memory Region. The LMR is selected by the memory striping function.
 */
#define HNF_HNF_MSS_TABLE__FIRST_WORD 0x200d0
#define HNF_HNF_MSS_TABLE__LAST_WORD 0x20108
#define HNF_HNF_MSS_TABLE__LENGTH 0x0040
#define HNF_HNF_MSS_TABLE__STRIDE 0x0008

#define HNF_HNF_MSS_TABLE__MSS_0_SHIFT 0
#define HNF_HNF_MSS_TABLE__MSS_0_WIDTH 2
#define HNF_HNF_MSS_TABLE__MSS_0_RESET_VAL 0
#define HNF_HNF_MSS_TABLE__MSS_0_RMASK 0x3
#define HNF_HNF_MSS_TABLE__MSS_0_MASK  0x3
#define HNF_HNF_MSS_TABLE__MSS_0_FIELD 0,1

#define HNF_HNF_MSS_TABLE__MSS_1_SHIFT 4
#define HNF_HNF_MSS_TABLE__MSS_1_WIDTH 2
#define HNF_HNF_MSS_TABLE__MSS_1_RESET_VAL 0
#define HNF_HNF_MSS_TABLE__MSS_1_RMASK 0x3
#define HNF_HNF_MSS_TABLE__MSS_1_MASK  0x30
#define HNF_HNF_MSS_TABLE__MSS_1_FIELD 4,5

#define HNF_HNF_MSS_TABLE__MSS_2_SHIFT 8
#define HNF_HNF_MSS_TABLE__MSS_2_WIDTH 2
#define HNF_HNF_MSS_TABLE__MSS_2_RESET_VAL 0
#define HNF_HNF_MSS_TABLE__MSS_2_RMASK 0x3
#define HNF_HNF_MSS_TABLE__MSS_2_MASK  0x300
#define HNF_HNF_MSS_TABLE__MSS_2_FIELD 8,9

#define HNF_HNF_MSS_TABLE__MSS_3_SHIFT 12
#define HNF_HNF_MSS_TABLE__MSS_3_WIDTH 2
#define HNF_HNF_MSS_TABLE__MSS_3_RESET_VAL 0
#define HNF_HNF_MSS_TABLE__MSS_3_RMASK 0x3
#define HNF_HNF_MSS_TABLE__MSS_3_MASK  0x3000
#define HNF_HNF_MSS_TABLE__MSS_3_FIELD 12,13

#define HNF_HNF_MSS_TABLE__MSS_4_SHIFT 16
#define HNF_HNF_MSS_TABLE__MSS_4_WIDTH 2
#define HNF_HNF_MSS_TABLE__MSS_4_RESET_VAL 0
#define HNF_HNF_MSS_TABLE__MSS_4_RMASK 0x3
#define HNF_HNF_MSS_TABLE__MSS_4_MASK  0x30000
#define HNF_HNF_MSS_TABLE__MSS_4_FIELD 16,17

#define HNF_HNF_MSS_TABLE__MSS_5_SHIFT 20
#define HNF_HNF_MSS_TABLE__MSS_5_WIDTH 2
#define HNF_HNF_MSS_TABLE__MSS_5_RESET_VAL 0
#define HNF_HNF_MSS_TABLE__MSS_5_RMASK 0x3
#define HNF_HNF_MSS_TABLE__MSS_5_MASK  0x300000
#define HNF_HNF_MSS_TABLE__MSS_5_FIELD 20,21

#define HNF_HNF_MSS_TABLE__MSS_6_SHIFT 24
#define HNF_HNF_MSS_TABLE__MSS_6_WIDTH 2
#define HNF_HNF_MSS_TABLE__MSS_6_RESET_VAL 0
#define HNF_HNF_MSS_TABLE__MSS_6_RMASK 0x3
#define HNF_HNF_MSS_TABLE__MSS_6_MASK  0x3000000
#define HNF_HNF_MSS_TABLE__MSS_6_FIELD 24,25

#define HNF_HNF_MSS_TABLE__MSS_7_SHIFT 28
#define HNF_HNF_MSS_TABLE__MSS_7_WIDTH 2
#define HNF_HNF_MSS_TABLE__MSS_7_RESET_VAL 0
#define HNF_HNF_MSS_TABLE__MSS_7_RMASK 0x3
#define HNF_HNF_MSS_TABLE__MSS_7_MASK  0x30000000
#define HNF_HNF_MSS_TABLE__MSS_7_FIELD 28,29


/*
 * Logical Memory Region to MSS ID.
 * Each Register is a table for one of the Physical Memory Regions (register
 * n for PMR n). The values stored in the table are the MSS ID for each
 * Logical Memory Region. The LMR is selected by the memory striping function.
 */
#define HNF_HNF_MSS_TABLE_1__FIRST_WORD 0x200d8
#define HNF_HNF_MSS_TABLE_1__LAST_WORD 0x20110
#define HNF_HNF_MSS_TABLE_1__LENGTH 0x0040
#define HNF_HNF_MSS_TABLE_1__STRIDE 0x0008

#define HNF_HNF_MSS_TABLE_1__MSS_0_SHIFT 0
#define HNF_HNF_MSS_TABLE_1__MSS_0_WIDTH 2
#define HNF_HNF_MSS_TABLE_1__MSS_0_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_1__MSS_0_RMASK 0x3
#define HNF_HNF_MSS_TABLE_1__MSS_0_MASK  0x3
#define HNF_HNF_MSS_TABLE_1__MSS_0_FIELD 0,1

#define HNF_HNF_MSS_TABLE_1__MSS_1_SHIFT 4
#define HNF_HNF_MSS_TABLE_1__MSS_1_WIDTH 2
#define HNF_HNF_MSS_TABLE_1__MSS_1_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_1__MSS_1_RMASK 0x3
#define HNF_HNF_MSS_TABLE_1__MSS_1_MASK  0x30
#define HNF_HNF_MSS_TABLE_1__MSS_1_FIELD 4,5

#define HNF_HNF_MSS_TABLE_1__MSS_2_SHIFT 8
#define HNF_HNF_MSS_TABLE_1__MSS_2_WIDTH 2
#define HNF_HNF_MSS_TABLE_1__MSS_2_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_1__MSS_2_RMASK 0x3
#define HNF_HNF_MSS_TABLE_1__MSS_2_MASK  0x300
#define HNF_HNF_MSS_TABLE_1__MSS_2_FIELD 8,9

#define HNF_HNF_MSS_TABLE_1__MSS_3_SHIFT 12
#define HNF_HNF_MSS_TABLE_1__MSS_3_WIDTH 2
#define HNF_HNF_MSS_TABLE_1__MSS_3_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_1__MSS_3_RMASK 0x3
#define HNF_HNF_MSS_TABLE_1__MSS_3_MASK  0x3000
#define HNF_HNF_MSS_TABLE_1__MSS_3_FIELD 12,13

#define HNF_HNF_MSS_TABLE_1__MSS_4_SHIFT 16
#define HNF_HNF_MSS_TABLE_1__MSS_4_WIDTH 2
#define HNF_HNF_MSS_TABLE_1__MSS_4_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_1__MSS_4_RMASK 0x3
#define HNF_HNF_MSS_TABLE_1__MSS_4_MASK  0x30000
#define HNF_HNF_MSS_TABLE_1__MSS_4_FIELD 16,17

#define HNF_HNF_MSS_TABLE_1__MSS_5_SHIFT 20
#define HNF_HNF_MSS_TABLE_1__MSS_5_WIDTH 2
#define HNF_HNF_MSS_TABLE_1__MSS_5_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_1__MSS_5_RMASK 0x3
#define HNF_HNF_MSS_TABLE_1__MSS_5_MASK  0x300000
#define HNF_HNF_MSS_TABLE_1__MSS_5_FIELD 20,21

#define HNF_HNF_MSS_TABLE_1__MSS_6_SHIFT 24
#define HNF_HNF_MSS_TABLE_1__MSS_6_WIDTH 2
#define HNF_HNF_MSS_TABLE_1__MSS_6_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_1__MSS_6_RMASK 0x3
#define HNF_HNF_MSS_TABLE_1__MSS_6_MASK  0x3000000
#define HNF_HNF_MSS_TABLE_1__MSS_6_FIELD 24,25

#define HNF_HNF_MSS_TABLE_1__MSS_7_SHIFT 28
#define HNF_HNF_MSS_TABLE_1__MSS_7_WIDTH 2
#define HNF_HNF_MSS_TABLE_1__MSS_7_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_1__MSS_7_RMASK 0x3
#define HNF_HNF_MSS_TABLE_1__MSS_7_MASK  0x30000000
#define HNF_HNF_MSS_TABLE_1__MSS_7_FIELD 28,29


/*
 * Logical Memory Region to MSS ID.
 * Each Register is a table for one of the Physical Memory Regions (register
 * n for PMR n). The values stored in the table are the MSS ID for each
 * Logical Memory Region. The LMR is selected by the memory striping function.
 */
#define HNF_HNF_MSS_TABLE_2__FIRST_WORD 0x200e0
#define HNF_HNF_MSS_TABLE_2__LAST_WORD 0x20118
#define HNF_HNF_MSS_TABLE_2__LENGTH 0x0040
#define HNF_HNF_MSS_TABLE_2__STRIDE 0x0008

#define HNF_HNF_MSS_TABLE_2__MSS_0_SHIFT 0
#define HNF_HNF_MSS_TABLE_2__MSS_0_WIDTH 2
#define HNF_HNF_MSS_TABLE_2__MSS_0_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_2__MSS_0_RMASK 0x3
#define HNF_HNF_MSS_TABLE_2__MSS_0_MASK  0x3
#define HNF_HNF_MSS_TABLE_2__MSS_0_FIELD 0,1

#define HNF_HNF_MSS_TABLE_2__MSS_1_SHIFT 4
#define HNF_HNF_MSS_TABLE_2__MSS_1_WIDTH 2
#define HNF_HNF_MSS_TABLE_2__MSS_1_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_2__MSS_1_RMASK 0x3
#define HNF_HNF_MSS_TABLE_2__MSS_1_MASK  0x30
#define HNF_HNF_MSS_TABLE_2__MSS_1_FIELD 4,5

#define HNF_HNF_MSS_TABLE_2__MSS_2_SHIFT 8
#define HNF_HNF_MSS_TABLE_2__MSS_2_WIDTH 2
#define HNF_HNF_MSS_TABLE_2__MSS_2_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_2__MSS_2_RMASK 0x3
#define HNF_HNF_MSS_TABLE_2__MSS_2_MASK  0x300
#define HNF_HNF_MSS_TABLE_2__MSS_2_FIELD 8,9

#define HNF_HNF_MSS_TABLE_2__MSS_3_SHIFT 12
#define HNF_HNF_MSS_TABLE_2__MSS_3_WIDTH 2
#define HNF_HNF_MSS_TABLE_2__MSS_3_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_2__MSS_3_RMASK 0x3
#define HNF_HNF_MSS_TABLE_2__MSS_3_MASK  0x3000
#define HNF_HNF_MSS_TABLE_2__MSS_3_FIELD 12,13

#define HNF_HNF_MSS_TABLE_2__MSS_4_SHIFT 16
#define HNF_HNF_MSS_TABLE_2__MSS_4_WIDTH 2
#define HNF_HNF_MSS_TABLE_2__MSS_4_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_2__MSS_4_RMASK 0x3
#define HNF_HNF_MSS_TABLE_2__MSS_4_MASK  0x30000
#define HNF_HNF_MSS_TABLE_2__MSS_4_FIELD 16,17

#define HNF_HNF_MSS_TABLE_2__MSS_5_SHIFT 20
#define HNF_HNF_MSS_TABLE_2__MSS_5_WIDTH 2
#define HNF_HNF_MSS_TABLE_2__MSS_5_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_2__MSS_5_RMASK 0x3
#define HNF_HNF_MSS_TABLE_2__MSS_5_MASK  0x300000
#define HNF_HNF_MSS_TABLE_2__MSS_5_FIELD 20,21

#define HNF_HNF_MSS_TABLE_2__MSS_6_SHIFT 24
#define HNF_HNF_MSS_TABLE_2__MSS_6_WIDTH 2
#define HNF_HNF_MSS_TABLE_2__MSS_6_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_2__MSS_6_RMASK 0x3
#define HNF_HNF_MSS_TABLE_2__MSS_6_MASK  0x3000000
#define HNF_HNF_MSS_TABLE_2__MSS_6_FIELD 24,25

#define HNF_HNF_MSS_TABLE_2__MSS_7_SHIFT 28
#define HNF_HNF_MSS_TABLE_2__MSS_7_WIDTH 2
#define HNF_HNF_MSS_TABLE_2__MSS_7_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_2__MSS_7_RMASK 0x3
#define HNF_HNF_MSS_TABLE_2__MSS_7_MASK  0x30000000
#define HNF_HNF_MSS_TABLE_2__MSS_7_FIELD 28,29


/*
 * Logical Memory Region to MSS ID.
 * Each Register is a table for one of the Physical Memory Regions (register
 * n for PMR n). The values stored in the table are the MSS ID for each
 * Logical Memory Region. The LMR is selected by the memory striping function.
 */
#define HNF_HNF_MSS_TABLE_3__FIRST_WORD 0x200e8
#define HNF_HNF_MSS_TABLE_3__LAST_WORD 0x20120
#define HNF_HNF_MSS_TABLE_3__LENGTH 0x0040
#define HNF_HNF_MSS_TABLE_3__STRIDE 0x0008

#define HNF_HNF_MSS_TABLE_3__MSS_0_SHIFT 0
#define HNF_HNF_MSS_TABLE_3__MSS_0_WIDTH 2
#define HNF_HNF_MSS_TABLE_3__MSS_0_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_3__MSS_0_RMASK 0x3
#define HNF_HNF_MSS_TABLE_3__MSS_0_MASK  0x3
#define HNF_HNF_MSS_TABLE_3__MSS_0_FIELD 0,1

#define HNF_HNF_MSS_TABLE_3__MSS_1_SHIFT 4
#define HNF_HNF_MSS_TABLE_3__MSS_1_WIDTH 2
#define HNF_HNF_MSS_TABLE_3__MSS_1_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_3__MSS_1_RMASK 0x3
#define HNF_HNF_MSS_TABLE_3__MSS_1_MASK  0x30
#define HNF_HNF_MSS_TABLE_3__MSS_1_FIELD 4,5

#define HNF_HNF_MSS_TABLE_3__MSS_2_SHIFT 8
#define HNF_HNF_MSS_TABLE_3__MSS_2_WIDTH 2
#define HNF_HNF_MSS_TABLE_3__MSS_2_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_3__MSS_2_RMASK 0x3
#define HNF_HNF_MSS_TABLE_3__MSS_2_MASK  0x300
#define HNF_HNF_MSS_TABLE_3__MSS_2_FIELD 8,9

#define HNF_HNF_MSS_TABLE_3__MSS_3_SHIFT 12
#define HNF_HNF_MSS_TABLE_3__MSS_3_WIDTH 2
#define HNF_HNF_MSS_TABLE_3__MSS_3_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_3__MSS_3_RMASK 0x3
#define HNF_HNF_MSS_TABLE_3__MSS_3_MASK  0x3000
#define HNF_HNF_MSS_TABLE_3__MSS_3_FIELD 12,13

#define HNF_HNF_MSS_TABLE_3__MSS_4_SHIFT 16
#define HNF_HNF_MSS_TABLE_3__MSS_4_WIDTH 2
#define HNF_HNF_MSS_TABLE_3__MSS_4_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_3__MSS_4_RMASK 0x3
#define HNF_HNF_MSS_TABLE_3__MSS_4_MASK  0x30000
#define HNF_HNF_MSS_TABLE_3__MSS_4_FIELD 16,17

#define HNF_HNF_MSS_TABLE_3__MSS_5_SHIFT 20
#define HNF_HNF_MSS_TABLE_3__MSS_5_WIDTH 2
#define HNF_HNF_MSS_TABLE_3__MSS_5_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_3__MSS_5_RMASK 0x3
#define HNF_HNF_MSS_TABLE_3__MSS_5_MASK  0x300000
#define HNF_HNF_MSS_TABLE_3__MSS_5_FIELD 20,21

#define HNF_HNF_MSS_TABLE_3__MSS_6_SHIFT 24
#define HNF_HNF_MSS_TABLE_3__MSS_6_WIDTH 2
#define HNF_HNF_MSS_TABLE_3__MSS_6_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_3__MSS_6_RMASK 0x3
#define HNF_HNF_MSS_TABLE_3__MSS_6_MASK  0x3000000
#define HNF_HNF_MSS_TABLE_3__MSS_6_FIELD 24,25

#define HNF_HNF_MSS_TABLE_3__MSS_7_SHIFT 28
#define HNF_HNF_MSS_TABLE_3__MSS_7_WIDTH 2
#define HNF_HNF_MSS_TABLE_3__MSS_7_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_3__MSS_7_RMASK 0x3
#define HNF_HNF_MSS_TABLE_3__MSS_7_MASK  0x30000000
#define HNF_HNF_MSS_TABLE_3__MSS_7_FIELD 28,29


/*
 * Logical Memory Region to MSS ID.
 * Each Register is a table for one of the Physical Memory Regions (register
 * n for PMR n). The values stored in the table are the MSS ID for each
 * Logical Memory Region. The LMR is selected by the memory striping function.
 */
#define HNF_HNF_MSS_TABLE_4__FIRST_WORD 0x200f0
#define HNF_HNF_MSS_TABLE_4__LAST_WORD 0x20128
#define HNF_HNF_MSS_TABLE_4__LENGTH 0x0040
#define HNF_HNF_MSS_TABLE_4__STRIDE 0x0008

#define HNF_HNF_MSS_TABLE_4__MSS_0_SHIFT 0
#define HNF_HNF_MSS_TABLE_4__MSS_0_WIDTH 2
#define HNF_HNF_MSS_TABLE_4__MSS_0_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_4__MSS_0_RMASK 0x3
#define HNF_HNF_MSS_TABLE_4__MSS_0_MASK  0x3
#define HNF_HNF_MSS_TABLE_4__MSS_0_FIELD 0,1

#define HNF_HNF_MSS_TABLE_4__MSS_1_SHIFT 4
#define HNF_HNF_MSS_TABLE_4__MSS_1_WIDTH 2
#define HNF_HNF_MSS_TABLE_4__MSS_1_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_4__MSS_1_RMASK 0x3
#define HNF_HNF_MSS_TABLE_4__MSS_1_MASK  0x30
#define HNF_HNF_MSS_TABLE_4__MSS_1_FIELD 4,5

#define HNF_HNF_MSS_TABLE_4__MSS_2_SHIFT 8
#define HNF_HNF_MSS_TABLE_4__MSS_2_WIDTH 2
#define HNF_HNF_MSS_TABLE_4__MSS_2_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_4__MSS_2_RMASK 0x3
#define HNF_HNF_MSS_TABLE_4__MSS_2_MASK  0x300
#define HNF_HNF_MSS_TABLE_4__MSS_2_FIELD 8,9

#define HNF_HNF_MSS_TABLE_4__MSS_3_SHIFT 12
#define HNF_HNF_MSS_TABLE_4__MSS_3_WIDTH 2
#define HNF_HNF_MSS_TABLE_4__MSS_3_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_4__MSS_3_RMASK 0x3
#define HNF_HNF_MSS_TABLE_4__MSS_3_MASK  0x3000
#define HNF_HNF_MSS_TABLE_4__MSS_3_FIELD 12,13

#define HNF_HNF_MSS_TABLE_4__MSS_4_SHIFT 16
#define HNF_HNF_MSS_TABLE_4__MSS_4_WIDTH 2
#define HNF_HNF_MSS_TABLE_4__MSS_4_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_4__MSS_4_RMASK 0x3
#define HNF_HNF_MSS_TABLE_4__MSS_4_MASK  0x30000
#define HNF_HNF_MSS_TABLE_4__MSS_4_FIELD 16,17

#define HNF_HNF_MSS_TABLE_4__MSS_5_SHIFT 20
#define HNF_HNF_MSS_TABLE_4__MSS_5_WIDTH 2
#define HNF_HNF_MSS_TABLE_4__MSS_5_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_4__MSS_5_RMASK 0x3
#define HNF_HNF_MSS_TABLE_4__MSS_5_MASK  0x300000
#define HNF_HNF_MSS_TABLE_4__MSS_5_FIELD 20,21

#define HNF_HNF_MSS_TABLE_4__MSS_6_SHIFT 24
#define HNF_HNF_MSS_TABLE_4__MSS_6_WIDTH 2
#define HNF_HNF_MSS_TABLE_4__MSS_6_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_4__MSS_6_RMASK 0x3
#define HNF_HNF_MSS_TABLE_4__MSS_6_MASK  0x3000000
#define HNF_HNF_MSS_TABLE_4__MSS_6_FIELD 24,25

#define HNF_HNF_MSS_TABLE_4__MSS_7_SHIFT 28
#define HNF_HNF_MSS_TABLE_4__MSS_7_WIDTH 2
#define HNF_HNF_MSS_TABLE_4__MSS_7_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_4__MSS_7_RMASK 0x3
#define HNF_HNF_MSS_TABLE_4__MSS_7_MASK  0x30000000
#define HNF_HNF_MSS_TABLE_4__MSS_7_FIELD 28,29


/*
 * Logical Memory Region to MSS ID.
 * Each Register is a table for one of the Physical Memory Regions (register
 * n for PMR n). The values stored in the table are the MSS ID for each
 * Logical Memory Region. The LMR is selected by the memory striping function.
 */
#define HNF_HNF_MSS_TABLE_5__FIRST_WORD 0x200f8
#define HNF_HNF_MSS_TABLE_5__LAST_WORD 0x20130
#define HNF_HNF_MSS_TABLE_5__LENGTH 0x0040
#define HNF_HNF_MSS_TABLE_5__STRIDE 0x0008

#define HNF_HNF_MSS_TABLE_5__MSS_0_SHIFT 0
#define HNF_HNF_MSS_TABLE_5__MSS_0_WIDTH 2
#define HNF_HNF_MSS_TABLE_5__MSS_0_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_5__MSS_0_RMASK 0x3
#define HNF_HNF_MSS_TABLE_5__MSS_0_MASK  0x3
#define HNF_HNF_MSS_TABLE_5__MSS_0_FIELD 0,1

#define HNF_HNF_MSS_TABLE_5__MSS_1_SHIFT 4
#define HNF_HNF_MSS_TABLE_5__MSS_1_WIDTH 2
#define HNF_HNF_MSS_TABLE_5__MSS_1_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_5__MSS_1_RMASK 0x3
#define HNF_HNF_MSS_TABLE_5__MSS_1_MASK  0x30
#define HNF_HNF_MSS_TABLE_5__MSS_1_FIELD 4,5

#define HNF_HNF_MSS_TABLE_5__MSS_2_SHIFT 8
#define HNF_HNF_MSS_TABLE_5__MSS_2_WIDTH 2
#define HNF_HNF_MSS_TABLE_5__MSS_2_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_5__MSS_2_RMASK 0x3
#define HNF_HNF_MSS_TABLE_5__MSS_2_MASK  0x300
#define HNF_HNF_MSS_TABLE_5__MSS_2_FIELD 8,9

#define HNF_HNF_MSS_TABLE_5__MSS_3_SHIFT 12
#define HNF_HNF_MSS_TABLE_5__MSS_3_WIDTH 2
#define HNF_HNF_MSS_TABLE_5__MSS_3_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_5__MSS_3_RMASK 0x3
#define HNF_HNF_MSS_TABLE_5__MSS_3_MASK  0x3000
#define HNF_HNF_MSS_TABLE_5__MSS_3_FIELD 12,13

#define HNF_HNF_MSS_TABLE_5__MSS_4_SHIFT 16
#define HNF_HNF_MSS_TABLE_5__MSS_4_WIDTH 2
#define HNF_HNF_MSS_TABLE_5__MSS_4_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_5__MSS_4_RMASK 0x3
#define HNF_HNF_MSS_TABLE_5__MSS_4_MASK  0x30000
#define HNF_HNF_MSS_TABLE_5__MSS_4_FIELD 16,17

#define HNF_HNF_MSS_TABLE_5__MSS_5_SHIFT 20
#define HNF_HNF_MSS_TABLE_5__MSS_5_WIDTH 2
#define HNF_HNF_MSS_TABLE_5__MSS_5_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_5__MSS_5_RMASK 0x3
#define HNF_HNF_MSS_TABLE_5__MSS_5_MASK  0x300000
#define HNF_HNF_MSS_TABLE_5__MSS_5_FIELD 20,21

#define HNF_HNF_MSS_TABLE_5__MSS_6_SHIFT 24
#define HNF_HNF_MSS_TABLE_5__MSS_6_WIDTH 2
#define HNF_HNF_MSS_TABLE_5__MSS_6_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_5__MSS_6_RMASK 0x3
#define HNF_HNF_MSS_TABLE_5__MSS_6_MASK  0x3000000
#define HNF_HNF_MSS_TABLE_5__MSS_6_FIELD 24,25

#define HNF_HNF_MSS_TABLE_5__MSS_7_SHIFT 28
#define HNF_HNF_MSS_TABLE_5__MSS_7_WIDTH 2
#define HNF_HNF_MSS_TABLE_5__MSS_7_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_5__MSS_7_RMASK 0x3
#define HNF_HNF_MSS_TABLE_5__MSS_7_MASK  0x30000000
#define HNF_HNF_MSS_TABLE_5__MSS_7_FIELD 28,29


/*
 * Logical Memory Region to MSS ID.
 * Each Register is a table for one of the Physical Memory Regions (register
 * n for PMR n). The values stored in the table are the MSS ID for each
 * Logical Memory Region. The LMR is selected by the memory striping function.
 */
#define HNF_HNF_MSS_TABLE_6__FIRST_WORD 0x20100
#define HNF_HNF_MSS_TABLE_6__LAST_WORD 0x20138
#define HNF_HNF_MSS_TABLE_6__LENGTH 0x0040
#define HNF_HNF_MSS_TABLE_6__STRIDE 0x0008

#define HNF_HNF_MSS_TABLE_6__MSS_0_SHIFT 0
#define HNF_HNF_MSS_TABLE_6__MSS_0_WIDTH 2
#define HNF_HNF_MSS_TABLE_6__MSS_0_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_6__MSS_0_RMASK 0x3
#define HNF_HNF_MSS_TABLE_6__MSS_0_MASK  0x3
#define HNF_HNF_MSS_TABLE_6__MSS_0_FIELD 0,1

#define HNF_HNF_MSS_TABLE_6__MSS_1_SHIFT 4
#define HNF_HNF_MSS_TABLE_6__MSS_1_WIDTH 2
#define HNF_HNF_MSS_TABLE_6__MSS_1_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_6__MSS_1_RMASK 0x3
#define HNF_HNF_MSS_TABLE_6__MSS_1_MASK  0x30
#define HNF_HNF_MSS_TABLE_6__MSS_1_FIELD 4,5

#define HNF_HNF_MSS_TABLE_6__MSS_2_SHIFT 8
#define HNF_HNF_MSS_TABLE_6__MSS_2_WIDTH 2
#define HNF_HNF_MSS_TABLE_6__MSS_2_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_6__MSS_2_RMASK 0x3
#define HNF_HNF_MSS_TABLE_6__MSS_2_MASK  0x300
#define HNF_HNF_MSS_TABLE_6__MSS_2_FIELD 8,9

#define HNF_HNF_MSS_TABLE_6__MSS_3_SHIFT 12
#define HNF_HNF_MSS_TABLE_6__MSS_3_WIDTH 2
#define HNF_HNF_MSS_TABLE_6__MSS_3_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_6__MSS_3_RMASK 0x3
#define HNF_HNF_MSS_TABLE_6__MSS_3_MASK  0x3000
#define HNF_HNF_MSS_TABLE_6__MSS_3_FIELD 12,13

#define HNF_HNF_MSS_TABLE_6__MSS_4_SHIFT 16
#define HNF_HNF_MSS_TABLE_6__MSS_4_WIDTH 2
#define HNF_HNF_MSS_TABLE_6__MSS_4_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_6__MSS_4_RMASK 0x3
#define HNF_HNF_MSS_TABLE_6__MSS_4_MASK  0x30000
#define HNF_HNF_MSS_TABLE_6__MSS_4_FIELD 16,17

#define HNF_HNF_MSS_TABLE_6__MSS_5_SHIFT 20
#define HNF_HNF_MSS_TABLE_6__MSS_5_WIDTH 2
#define HNF_HNF_MSS_TABLE_6__MSS_5_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_6__MSS_5_RMASK 0x3
#define HNF_HNF_MSS_TABLE_6__MSS_5_MASK  0x300000
#define HNF_HNF_MSS_TABLE_6__MSS_5_FIELD 20,21

#define HNF_HNF_MSS_TABLE_6__MSS_6_SHIFT 24
#define HNF_HNF_MSS_TABLE_6__MSS_6_WIDTH 2
#define HNF_HNF_MSS_TABLE_6__MSS_6_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_6__MSS_6_RMASK 0x3
#define HNF_HNF_MSS_TABLE_6__MSS_6_MASK  0x3000000
#define HNF_HNF_MSS_TABLE_6__MSS_6_FIELD 24,25

#define HNF_HNF_MSS_TABLE_6__MSS_7_SHIFT 28
#define HNF_HNF_MSS_TABLE_6__MSS_7_WIDTH 2
#define HNF_HNF_MSS_TABLE_6__MSS_7_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_6__MSS_7_RMASK 0x3
#define HNF_HNF_MSS_TABLE_6__MSS_7_MASK  0x30000000
#define HNF_HNF_MSS_TABLE_6__MSS_7_FIELD 28,29


/*
 * Logical Memory Region to MSS ID.
 * Each Register is a table for one of the Physical Memory Regions (register
 * n for PMR n). The values stored in the table are the MSS ID for each
 * Logical Memory Region. The LMR is selected by the memory striping function.
 */
#define HNF_HNF_MSS_TABLE_7__FIRST_WORD 0x20108
#define HNF_HNF_MSS_TABLE_7__LAST_WORD 0x20140
#define HNF_HNF_MSS_TABLE_7__LENGTH 0x0040
#define HNF_HNF_MSS_TABLE_7__STRIDE 0x0008

#define HNF_HNF_MSS_TABLE_7__MSS_0_SHIFT 0
#define HNF_HNF_MSS_TABLE_7__MSS_0_WIDTH 2
#define HNF_HNF_MSS_TABLE_7__MSS_0_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_7__MSS_0_RMASK 0x3
#define HNF_HNF_MSS_TABLE_7__MSS_0_MASK  0x3
#define HNF_HNF_MSS_TABLE_7__MSS_0_FIELD 0,1

#define HNF_HNF_MSS_TABLE_7__MSS_1_SHIFT 4
#define HNF_HNF_MSS_TABLE_7__MSS_1_WIDTH 2
#define HNF_HNF_MSS_TABLE_7__MSS_1_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_7__MSS_1_RMASK 0x3
#define HNF_HNF_MSS_TABLE_7__MSS_1_MASK  0x30
#define HNF_HNF_MSS_TABLE_7__MSS_1_FIELD 4,5

#define HNF_HNF_MSS_TABLE_7__MSS_2_SHIFT 8
#define HNF_HNF_MSS_TABLE_7__MSS_2_WIDTH 2
#define HNF_HNF_MSS_TABLE_7__MSS_2_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_7__MSS_2_RMASK 0x3
#define HNF_HNF_MSS_TABLE_7__MSS_2_MASK  0x300
#define HNF_HNF_MSS_TABLE_7__MSS_2_FIELD 8,9

#define HNF_HNF_MSS_TABLE_7__MSS_3_SHIFT 12
#define HNF_HNF_MSS_TABLE_7__MSS_3_WIDTH 2
#define HNF_HNF_MSS_TABLE_7__MSS_3_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_7__MSS_3_RMASK 0x3
#define HNF_HNF_MSS_TABLE_7__MSS_3_MASK  0x3000
#define HNF_HNF_MSS_TABLE_7__MSS_3_FIELD 12,13

#define HNF_HNF_MSS_TABLE_7__MSS_4_SHIFT 16
#define HNF_HNF_MSS_TABLE_7__MSS_4_WIDTH 2
#define HNF_HNF_MSS_TABLE_7__MSS_4_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_7__MSS_4_RMASK 0x3
#define HNF_HNF_MSS_TABLE_7__MSS_4_MASK  0x30000
#define HNF_HNF_MSS_TABLE_7__MSS_4_FIELD 16,17

#define HNF_HNF_MSS_TABLE_7__MSS_5_SHIFT 20
#define HNF_HNF_MSS_TABLE_7__MSS_5_WIDTH 2
#define HNF_HNF_MSS_TABLE_7__MSS_5_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_7__MSS_5_RMASK 0x3
#define HNF_HNF_MSS_TABLE_7__MSS_5_MASK  0x300000
#define HNF_HNF_MSS_TABLE_7__MSS_5_FIELD 20,21

#define HNF_HNF_MSS_TABLE_7__MSS_6_SHIFT 24
#define HNF_HNF_MSS_TABLE_7__MSS_6_WIDTH 2
#define HNF_HNF_MSS_TABLE_7__MSS_6_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_7__MSS_6_RMASK 0x3
#define HNF_HNF_MSS_TABLE_7__MSS_6_MASK  0x3000000
#define HNF_HNF_MSS_TABLE_7__MSS_6_FIELD 24,25

#define HNF_HNF_MSS_TABLE_7__MSS_7_SHIFT 28
#define HNF_HNF_MSS_TABLE_7__MSS_7_WIDTH 2
#define HNF_HNF_MSS_TABLE_7__MSS_7_RESET_VAL 0
#define HNF_HNF_MSS_TABLE_7__MSS_7_RMASK 0x3
#define HNF_HNF_MSS_TABLE_7__MSS_7_MASK  0x30000000
#define HNF_HNF_MSS_TABLE_7__MSS_7_FIELD 28,29


/*
 * Credit Control.
 * Provides access to the request-credit counters that control end-to-end
 * flow control between the
 *       device and other nodes in the system.
 */
#define HNF_HNF_CRED_CTL 0x20070
#define HNF_HNF_CRED_CTL__LENGTH 0x0001

#define HNF_HNF_CRED_CTL__UPDATE_SHIFT 0
#define HNF_HNF_CRED_CTL__UPDATE_WIDTH 1
#define HNF_HNF_CRED_CTL__UPDATE_RESET_VAL 0
#define HNF_HNF_CRED_CTL__UPDATE_RMASK 0x1
#define HNF_HNF_CRED_CTL__UPDATE_MASK  0x1
#define HNF_HNF_CRED_CTL__UPDATE_FIELD 0,0

#define HNF_HNF_CRED_CTL__NODEID_SEL_SHIFT 1
#define HNF_HNF_CRED_CTL__NODEID_SEL_WIDTH 11
#define HNF_HNF_CRED_CTL__NODEID_SEL_RESET_VAL 0
#define HNF_HNF_CRED_CTL__NODEID_SEL_RMASK 0x7ff
#define HNF_HNF_CRED_CTL__NODEID_SEL_MASK  0xffe
#define HNF_HNF_CRED_CTL__NODEID_SEL_FIELD 1,11

#define HNF_HNF_CRED_CTL__TGT_SEL_SHIFT 12
#define HNF_HNF_CRED_CTL__TGT_SEL_WIDTH 2
#define HNF_HNF_CRED_CTL__TGT_SEL_RESET_VAL 0
#define HNF_HNF_CRED_CTL__TGT_SEL_RMASK 0x3
#define HNF_HNF_CRED_CTL__TGT_SEL_MASK  0x3000
#define HNF_HNF_CRED_CTL__TGT_SEL_FIELD 12,13
#define HNF_HNF_CRED_CTL__TGT_SEL_VAL_TX_REQ 0x0
#define HNF_HNF_CRED_CTL__TGT_SEL_VAL_RETRYQ 0x1
#define HNF_HNF_CRED_CTL__TGT_SEL_VAL_RING 0x2

#define HNF_HNF_CRED_CTL__CLIENT_SEL_SHIFT 14
#define HNF_HNF_CRED_CTL__CLIENT_SEL_WIDTH 2
#define HNF_HNF_CRED_CTL__CLIENT_SEL_RESET_VAL 0
#define HNF_HNF_CRED_CTL__CLIENT_SEL_RMASK 0x3
#define HNF_HNF_CRED_CTL__CLIENT_SEL_MASK  0xc000
#define HNF_HNF_CRED_CTL__CLIENT_SEL_FIELD 14,15

#define HNF_HNF_CRED_CTL__VAL_SHIFT 16
#define HNF_HNF_CRED_CTL__VAL_WIDTH 16
#define HNF_HNF_CRED_CTL__VAL_RESET_VAL 0
#define HNF_HNF_CRED_CTL__VAL_RMASK 0xffff
#define HNF_HNF_CRED_CTL__VAL_MASK  0xffff0000
#define HNF_HNF_CRED_CTL__VAL_FIELD 16,31


/*
 * L3 Cache Read Profile.
 * Select the L3 cache profile for A72 reads. The profile used is selected by
 *       the concatenation the following information. 1) PMR region: NVDIMM
 * (1) or not NVDIMM (0),
 *       2) Read type: Istream (1) or Dstream (0). The contatenation selects
 * one of four policies.
 */
#define HNF_HNF_L3_READ_PROFILE 0x20200
#define HNF_HNF_L3_READ_PROFILE__LENGTH 0x0001

#define HNF_HNF_L3_READ_PROFILE__P0_SHIFT 0
#define HNF_HNF_L3_READ_PROFILE__P0_WIDTH 4
#define HNF_HNF_L3_READ_PROFILE__P0_RESET_VAL 0
#define HNF_HNF_L3_READ_PROFILE__P0_RMASK 0xf
#define HNF_HNF_L3_READ_PROFILE__P0_MASK  0xf
#define HNF_HNF_L3_READ_PROFILE__P0_FIELD 0,3

#define HNF_HNF_L3_READ_PROFILE__P1_SHIFT 4
#define HNF_HNF_L3_READ_PROFILE__P1_WIDTH 4
#define HNF_HNF_L3_READ_PROFILE__P1_RESET_VAL 0
#define HNF_HNF_L3_READ_PROFILE__P1_RMASK 0xf
#define HNF_HNF_L3_READ_PROFILE__P1_MASK  0xf0
#define HNF_HNF_L3_READ_PROFILE__P1_FIELD 4,7

#define HNF_HNF_L3_READ_PROFILE__P2_SHIFT 8
#define HNF_HNF_L3_READ_PROFILE__P2_WIDTH 4
#define HNF_HNF_L3_READ_PROFILE__P2_RESET_VAL 0
#define HNF_HNF_L3_READ_PROFILE__P2_RMASK 0xf
#define HNF_HNF_L3_READ_PROFILE__P2_MASK  0xf00
#define HNF_HNF_L3_READ_PROFILE__P2_FIELD 8,11

#define HNF_HNF_L3_READ_PROFILE__P3_SHIFT 12
#define HNF_HNF_L3_READ_PROFILE__P3_WIDTH 4
#define HNF_HNF_L3_READ_PROFILE__P3_RESET_VAL 0
#define HNF_HNF_L3_READ_PROFILE__P3_RMASK 0xf
#define HNF_HNF_L3_READ_PROFILE__P3_MASK  0xf000
#define HNF_HNF_L3_READ_PROFILE__P3_FIELD 12,15


/*
 * L3 Cache Write Profile.
 * Select the L3 cache profile for A72 writes to regular DRAM (not NVDIMM.
 * NVDIMM write profile is configured in HNF_L3_WRITE_PROFILE_B).
 *       The profile used is selected by the concatenation the following
 * information. 1) Write type CopyBack (00), WriteUnique (01), CMO (10),
 * Directory_Victim (11),
 *       2) Number of Tiles sharing the data: None (00), One (01), Two (10),
 * More than Two (11).
 */
#define HNF_HNF_L3_WRITE_PROFILE_A 0x20210
#define HNF_HNF_L3_WRITE_PROFILE_A__LENGTH 0x0001

#define HNF_HNF_L3_WRITE_PROFILE_A__P0_SHIFT 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P0_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P0_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P0_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P0_MASK  0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P0_FIELD 0,3

#define HNF_HNF_L3_WRITE_PROFILE_A__P1_SHIFT 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P1_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P1_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P1_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P1_MASK  0xf0
#define HNF_HNF_L3_WRITE_PROFILE_A__P1_FIELD 4,7

#define HNF_HNF_L3_WRITE_PROFILE_A__P2_SHIFT 8
#define HNF_HNF_L3_WRITE_PROFILE_A__P2_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P2_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P2_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P2_MASK  0xf00
#define HNF_HNF_L3_WRITE_PROFILE_A__P2_FIELD 8,11

#define HNF_HNF_L3_WRITE_PROFILE_A__P3_SHIFT 12
#define HNF_HNF_L3_WRITE_PROFILE_A__P3_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P3_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P3_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P3_MASK  0xf000
#define HNF_HNF_L3_WRITE_PROFILE_A__P3_FIELD 12,15

#define HNF_HNF_L3_WRITE_PROFILE_A__P4_SHIFT 16
#define HNF_HNF_L3_WRITE_PROFILE_A__P4_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P4_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P4_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P4_MASK  0xf0000
#define HNF_HNF_L3_WRITE_PROFILE_A__P4_FIELD 16,19

#define HNF_HNF_L3_WRITE_PROFILE_A__P5_SHIFT 20
#define HNF_HNF_L3_WRITE_PROFILE_A__P5_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P5_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P5_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P5_MASK  0xf00000
#define HNF_HNF_L3_WRITE_PROFILE_A__P5_FIELD 20,23

#define HNF_HNF_L3_WRITE_PROFILE_A__P6_SHIFT 24
#define HNF_HNF_L3_WRITE_PROFILE_A__P6_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P6_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P6_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P6_MASK  0xf000000
#define HNF_HNF_L3_WRITE_PROFILE_A__P6_FIELD 24,27

#define HNF_HNF_L3_WRITE_PROFILE_A__P7_SHIFT 28
#define HNF_HNF_L3_WRITE_PROFILE_A__P7_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P7_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P7_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P7_MASK  0xf0000000
#define HNF_HNF_L3_WRITE_PROFILE_A__P7_FIELD 28,31

#define HNF_HNF_L3_WRITE_PROFILE_A__P8_SHIFT 32
#define HNF_HNF_L3_WRITE_PROFILE_A__P8_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P8_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P8_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P8_MASK  _64bit(0xf00000000)
#define HNF_HNF_L3_WRITE_PROFILE_A__P8_FIELD 32,35

#define HNF_HNF_L3_WRITE_PROFILE_A__P9_SHIFT 36
#define HNF_HNF_L3_WRITE_PROFILE_A__P9_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P9_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P9_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P9_MASK  _64bit(0xf000000000)
#define HNF_HNF_L3_WRITE_PROFILE_A__P9_FIELD 36,39

#define HNF_HNF_L3_WRITE_PROFILE_A__P10_SHIFT 40
#define HNF_HNF_L3_WRITE_PROFILE_A__P10_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P10_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P10_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P10_MASK  _64bit(0xf0000000000)
#define HNF_HNF_L3_WRITE_PROFILE_A__P10_FIELD 40,43

#define HNF_HNF_L3_WRITE_PROFILE_A__P11_SHIFT 44
#define HNF_HNF_L3_WRITE_PROFILE_A__P11_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P11_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P11_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P11_MASK  _64bit(0xf00000000000)
#define HNF_HNF_L3_WRITE_PROFILE_A__P11_FIELD 44,47

#define HNF_HNF_L3_WRITE_PROFILE_A__P12_SHIFT 48
#define HNF_HNF_L3_WRITE_PROFILE_A__P12_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P12_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P12_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P12_MASK  _64bit(0xf000000000000)
#define HNF_HNF_L3_WRITE_PROFILE_A__P12_FIELD 48,51

#define HNF_HNF_L3_WRITE_PROFILE_A__P13_SHIFT 52
#define HNF_HNF_L3_WRITE_PROFILE_A__P13_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P13_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P13_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P13_MASK  _64bit(0xf0000000000000)
#define HNF_HNF_L3_WRITE_PROFILE_A__P13_FIELD 52,55

#define HNF_HNF_L3_WRITE_PROFILE_A__P14_SHIFT 56
#define HNF_HNF_L3_WRITE_PROFILE_A__P14_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P14_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P14_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P14_MASK  _64bit(0xf00000000000000)
#define HNF_HNF_L3_WRITE_PROFILE_A__P14_FIELD 56,59

#define HNF_HNF_L3_WRITE_PROFILE_A__P15_SHIFT 60
#define HNF_HNF_L3_WRITE_PROFILE_A__P15_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_A__P15_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_A__P15_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_A__P15_MASK  _64bit(0xf000000000000000)
#define HNF_HNF_L3_WRITE_PROFILE_A__P15_FIELD 60,63


/*
 * L3 Cache Write Profile.
 * Select the L3 cache profile for A72 writes to NVDIMM DRAM (regular DRAM
 * write profile is configured in HNF_L3_WRITE_PROFILE_A).
 *       The profile used is selected by the concatenation of the same
 * information used for HNF_L3_WRITE_PROFILE_A.
 */
#define HNF_HNF_L3_WRITE_PROFILE_B 0x20218
#define HNF_HNF_L3_WRITE_PROFILE_B__LENGTH 0x0001

#define HNF_HNF_L3_WRITE_PROFILE_B__P0_SHIFT 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P0_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P0_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P0_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P0_MASK  0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P0_FIELD 0,3

#define HNF_HNF_L3_WRITE_PROFILE_B__P1_SHIFT 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P1_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P1_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P1_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P1_MASK  0xf0
#define HNF_HNF_L3_WRITE_PROFILE_B__P1_FIELD 4,7

#define HNF_HNF_L3_WRITE_PROFILE_B__P2_SHIFT 8
#define HNF_HNF_L3_WRITE_PROFILE_B__P2_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P2_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P2_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P2_MASK  0xf00
#define HNF_HNF_L3_WRITE_PROFILE_B__P2_FIELD 8,11

#define HNF_HNF_L3_WRITE_PROFILE_B__P3_SHIFT 12
#define HNF_HNF_L3_WRITE_PROFILE_B__P3_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P3_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P3_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P3_MASK  0xf000
#define HNF_HNF_L3_WRITE_PROFILE_B__P3_FIELD 12,15

#define HNF_HNF_L3_WRITE_PROFILE_B__P4_SHIFT 16
#define HNF_HNF_L3_WRITE_PROFILE_B__P4_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P4_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P4_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P4_MASK  0xf0000
#define HNF_HNF_L3_WRITE_PROFILE_B__P4_FIELD 16,19

#define HNF_HNF_L3_WRITE_PROFILE_B__P5_SHIFT 20
#define HNF_HNF_L3_WRITE_PROFILE_B__P5_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P5_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P5_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P5_MASK  0xf00000
#define HNF_HNF_L3_WRITE_PROFILE_B__P5_FIELD 20,23

#define HNF_HNF_L3_WRITE_PROFILE_B__P6_SHIFT 24
#define HNF_HNF_L3_WRITE_PROFILE_B__P6_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P6_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P6_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P6_MASK  0xf000000
#define HNF_HNF_L3_WRITE_PROFILE_B__P6_FIELD 24,27

#define HNF_HNF_L3_WRITE_PROFILE_B__P7_SHIFT 28
#define HNF_HNF_L3_WRITE_PROFILE_B__P7_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P7_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P7_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P7_MASK  0xf0000000
#define HNF_HNF_L3_WRITE_PROFILE_B__P7_FIELD 28,31

#define HNF_HNF_L3_WRITE_PROFILE_B__P8_SHIFT 32
#define HNF_HNF_L3_WRITE_PROFILE_B__P8_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P8_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P8_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P8_MASK  _64bit(0xf00000000)
#define HNF_HNF_L3_WRITE_PROFILE_B__P8_FIELD 32,35

#define HNF_HNF_L3_WRITE_PROFILE_B__P9_SHIFT 36
#define HNF_HNF_L3_WRITE_PROFILE_B__P9_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P9_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P9_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P9_MASK  _64bit(0xf000000000)
#define HNF_HNF_L3_WRITE_PROFILE_B__P9_FIELD 36,39

#define HNF_HNF_L3_WRITE_PROFILE_B__P10_SHIFT 40
#define HNF_HNF_L3_WRITE_PROFILE_B__P10_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P10_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P10_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P10_MASK  _64bit(0xf0000000000)
#define HNF_HNF_L3_WRITE_PROFILE_B__P10_FIELD 40,43

#define HNF_HNF_L3_WRITE_PROFILE_B__P11_SHIFT 44
#define HNF_HNF_L3_WRITE_PROFILE_B__P11_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P11_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P11_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P11_MASK  _64bit(0xf00000000000)
#define HNF_HNF_L3_WRITE_PROFILE_B__P11_FIELD 44,47

#define HNF_HNF_L3_WRITE_PROFILE_B__P12_SHIFT 48
#define HNF_HNF_L3_WRITE_PROFILE_B__P12_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P12_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P12_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P12_MASK  _64bit(0xf000000000000)
#define HNF_HNF_L3_WRITE_PROFILE_B__P12_FIELD 48,51

#define HNF_HNF_L3_WRITE_PROFILE_B__P13_SHIFT 52
#define HNF_HNF_L3_WRITE_PROFILE_B__P13_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P13_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P13_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P13_MASK  _64bit(0xf0000000000000)
#define HNF_HNF_L3_WRITE_PROFILE_B__P13_FIELD 52,55

#define HNF_HNF_L3_WRITE_PROFILE_B__P14_SHIFT 56
#define HNF_HNF_L3_WRITE_PROFILE_B__P14_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P14_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P14_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P14_MASK  _64bit(0xf00000000000000)
#define HNF_HNF_L3_WRITE_PROFILE_B__P14_FIELD 56,59

#define HNF_HNF_L3_WRITE_PROFILE_B__P15_SHIFT 60
#define HNF_HNF_L3_WRITE_PROFILE_B__P15_WIDTH 4
#define HNF_HNF_L3_WRITE_PROFILE_B__P15_RESET_VAL 0
#define HNF_HNF_L3_WRITE_PROFILE_B__P15_RMASK 0xf
#define HNF_HNF_L3_WRITE_PROFILE_B__P15_MASK  _64bit(0xf000000000000000)
#define HNF_HNF_L3_WRITE_PROFILE_B__P15_FIELD 60,63


/*
 * Directory Debug Control.
 * Control for MAF Debug
 */
#define HNF_HNF_DBG_CTL 0x20f00
#define HNF_HNF_DBG_CTL__LENGTH 0x0001

#define HNF_HNF_DBG_CTL__MAF_SHIFT 0
#define HNF_HNF_DBG_CTL__MAF_WIDTH 7
#define HNF_HNF_DBG_CTL__MAF_RESET_VAL 0
#define HNF_HNF_DBG_CTL__MAF_RMASK 0x7f
#define HNF_HNF_DBG_CTL__MAF_MASK  0x7f
#define HNF_HNF_DBG_CTL__MAF_FIELD 0,6

#define HNF_HNF_DBG_CTL__SEL_SHIFT 7
#define HNF_HNF_DBG_CTL__SEL_WIDTH 2
#define HNF_HNF_DBG_CTL__SEL_RESET_VAL 0
#define HNF_HNF_DBG_CTL__SEL_RMASK 0x3
#define HNF_HNF_DBG_CTL__SEL_MASK  0x180
#define HNF_HNF_DBG_CTL__SEL_FIELD 7,8

#define HNF_HNF_DBG_CTL__ENABLE_SHIFT 9
#define HNF_HNF_DBG_CTL__ENABLE_WIDTH 1
#define HNF_HNF_DBG_CTL__ENABLE_RESET_VAL 0
#define HNF_HNF_DBG_CTL__ENABLE_RMASK 0x1
#define HNF_HNF_DBG_CTL__ENABLE_MASK  0x200
#define HNF_HNF_DBG_CTL__ENABLE_FIELD 9,9


/*
 * Debug Information, Part 1.
 * Debug Information
 */
#define HNF_HNF_DBG_1 0x20f08
#define HNF_HNF_DBG_1__LENGTH 0x0001

#define HNF_HNF_DBG_1__DATA_SHIFT 0
#define HNF_HNF_DBG_1__DATA_WIDTH 58
#define HNF_HNF_DBG_1__DATA_RESET_VAL 0
#define HNF_HNF_DBG_1__DATA_RMASK _64bit(0x3ffffffffffffff)
#define HNF_HNF_DBG_1__DATA_MASK  _64bit(0x3ffffffffffffff)
#define HNF_HNF_DBG_1__DATA_FIELD 0,57


/*
 * Debug Information, Part 2.
 * Debug Information
 */
#define HNF_HNF_DBG_2 0x20f10
#define HNF_HNF_DBG_2__LENGTH 0x0001

#define HNF_HNF_DBG_2__DATA_SHIFT 0
#define HNF_HNF_DBG_2__DATA_WIDTH 52
#define HNF_HNF_DBG_2__DATA_RESET_VAL 0
#define HNF_HNF_DBG_2__DATA_RMASK _64bit(0xfffffffffffff)
#define HNF_HNF_DBG_2__DATA_MASK  _64bit(0xfffffffffffff)
#define HNF_HNF_DBG_2__DATA_FIELD 0,51


/*
 * Debug Information, Part 3.
 * Debug Information, selected by SEL field
 */
#define HNF_HNF_DBG_3 0x20f18
#define HNF_HNF_DBG_3__LENGTH 0x0001

#define HNF_HNF_DBG_3__DATA_SHIFT 0
#define HNF_HNF_DBG_3__DATA_WIDTH 64
#define HNF_HNF_DBG_3__DATA_RESET_VAL 0
#define HNF_HNF_DBG_3__DATA_RMASK _64bit(0xffffffffffffffff)
#define HNF_HNF_DBG_3__DATA_MASK  _64bit(0xffffffffffffffff)
#define HNF_HNF_DBG_3__DATA_FIELD 0,63


/*
 * Debug Information, Part 4.
 * Debug Information
 */
#define HNF_HNF_DBG_4 0x20f20
#define HNF_HNF_DBG_4__LENGTH 0x0001

#define HNF_HNF_DBG_4__DATA_SHIFT 0
#define HNF_HNF_DBG_4__DATA_WIDTH 64
#define HNF_HNF_DBG_4__DATA_RESET_VAL 0
#define HNF_HNF_DBG_4__DATA_RMASK _64bit(0xffffffffffffffff)
#define HNF_HNF_DBG_4__DATA_MASK  _64bit(0xffffffffffffffff)
#define HNF_HNF_DBG_4__DATA_FIELD 0,63


/*
 * Debug Information, Part 5.
 * Debug Information
 */
#define HNF_HNF_DBG_5 0x20f28
#define HNF_HNF_DBG_5__LENGTH 0x0001

#define HNF_HNF_DBG_5__DATA_SHIFT 0
#define HNF_HNF_DBG_5__DATA_WIDTH 64
#define HNF_HNF_DBG_5__DATA_RESET_VAL 0
#define HNF_HNF_DBG_5__DATA_RMASK _64bit(0xffffffffffffffff)
#define HNF_HNF_DBG_5__DATA_MASK  _64bit(0xffffffffffffffff)
#define HNF_HNF_DBG_5__DATA_FIELD 0,63


/*
 * Debug Information, Part 6.
 * Debug Information
 */
#define HNF_HNF_DBG_6 0x20f30
#define HNF_HNF_DBG_6__LENGTH 0x0001

#define HNF_HNF_DBG_6__DATA_SHIFT 0
#define HNF_HNF_DBG_6__DATA_WIDTH 64
#define HNF_HNF_DBG_6__DATA_RESET_VAL 0
#define HNF_HNF_DBG_6__DATA_RMASK _64bit(0xffffffffffffffff)
#define HNF_HNF_DBG_6__DATA_MASK  _64bit(0xffffffffffffffff)
#define HNF_HNF_DBG_6__DATA_FIELD 0,63

#endif /* !defined(__DOXYGEN__) */

#endif /* !defined(__REGS_HNF_DEF_H__) */
