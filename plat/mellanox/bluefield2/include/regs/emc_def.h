#ifndef __REGS_EMC_DEF_H__
#define __REGS_EMC_DEF_H__

#ifdef __ASSEMBLER__
#define _64bit(x) x
#else /* __ASSEMBLER__ */
#ifdef __tile__
#define _64bit(x) x ## UL
#else /* __tile__ */
#define _64bit(x) x ## ULL
#endif /* __tile__ */
#endif /* __ASSEMBLER */



#ifndef __DOXYGEN__

/*
 * Device Info.
 * This register provides general information about the device attached to
 * this port and channel.
 */
#define EMC_DEV_INFO 0x0000
#define EMC_DEV_INFO__LENGTH 0x0001

#define EMC_DEV_INFO__TYPE_SHIFT 0
#define EMC_DEV_INFO__TYPE_WIDTH 12
#define EMC_DEV_INFO__TYPE_RESET_VAL 0
#define EMC_DEV_INFO__TYPE_RMASK 0xfff
#define EMC_DEV_INFO__TYPE_MASK  0xfff
#define EMC_DEV_INFO__TYPE_FIELD 0,11
#define EMC_DEV_INFO__TYPE_VAL_PCIE 0x1
#define EMC_DEV_INFO__TYPE_VAL_TRIO 0x14
#define EMC_DEV_INFO__TYPE_VAL_CRYPTO 0x16
#define EMC_DEV_INFO__TYPE_VAL_RSHIM 0x21
#define EMC_DEV_INFO__TYPE_VAL_GGA_COMP 0x28
#define EMC_DEV_INFO__TYPE_VAL_GGA_CRYPT 0x29
#define EMC_DEV_INFO__TYPE_VAL_GGA_REGEX 0x2a
#define EMC_DEV_INFO__TYPE_VAL_MMC 0x2b
#define EMC_DEV_INFO__TYPE_VAL_MSS 0x46
#define EMC_DEV_INFO__TYPE_VAL_TILE 0x82
#define EMC_DEV_INFO__TYPE_VAL_SMMU 0x85
#define EMC_DEV_INFO__TYPE_VAL_GIC 0x86

#define EMC_DEV_INFO__DEVICE_REV_SHIFT 16
#define EMC_DEV_INFO__DEVICE_REV_WIDTH 8
#define EMC_DEV_INFO__DEVICE_REV_RMASK 0xff
#define EMC_DEV_INFO__DEVICE_REV_MASK  0xff0000
#define EMC_DEV_INFO__DEVICE_REV_FIELD 16,23

#define EMC_DEV_INFO__REGISTER_REV_SHIFT 24
#define EMC_DEV_INFO__REGISTER_REV_WIDTH 4
#define EMC_DEV_INFO__REGISTER_REV_RESET_VAL 0
#define EMC_DEV_INFO__REGISTER_REV_RMASK 0xf
#define EMC_DEV_INFO__REGISTER_REV_MASK  0xf000000
#define EMC_DEV_INFO__REGISTER_REV_FIELD 24,27

#define EMC_DEV_INFO__INSTANCE_SHIFT 32
#define EMC_DEV_INFO__INSTANCE_WIDTH 4
#define EMC_DEV_INFO__INSTANCE_RMASK 0xf
#define EMC_DEV_INFO__INSTANCE_MASK  _64bit(0xf00000000)
#define EMC_DEV_INFO__INSTANCE_FIELD 32,35


/*
 * Device Control.
 * This register provides general device control.
 */
#define EMC_DEV_CTL 0x0008
#define EMC_DEV_CTL__LENGTH 0x0001

#define EMC_DEV_CTL__NDN_ROUTE_ORDER_SHIFT 0
#define EMC_DEV_CTL__NDN_ROUTE_ORDER_WIDTH 1
#define EMC_DEV_CTL__NDN_ROUTE_ORDER_RESET_VAL 0
#define EMC_DEV_CTL__NDN_ROUTE_ORDER_RMASK 0x1
#define EMC_DEV_CTL__NDN_ROUTE_ORDER_MASK  0x1
#define EMC_DEV_CTL__NDN_ROUTE_ORDER_FIELD 0,0

#define EMC_DEV_CTL__CDN_ROUTE_ORDER_SHIFT 1
#define EMC_DEV_CTL__CDN_ROUTE_ORDER_WIDTH 1
#define EMC_DEV_CTL__CDN_ROUTE_ORDER_RESET_VAL 1
#define EMC_DEV_CTL__CDN_ROUTE_ORDER_RMASK 0x1
#define EMC_DEV_CTL__CDN_ROUTE_ORDER_MASK  0x2
#define EMC_DEV_CTL__CDN_ROUTE_ORDER_FIELD 1,1

#define EMC_DEV_CTL__DDN_ROUTE_ORDER_SHIFT 2
#define EMC_DEV_CTL__DDN_ROUTE_ORDER_WIDTH 1
#define EMC_DEV_CTL__DDN_ROUTE_ORDER_RESET_VAL 1
#define EMC_DEV_CTL__DDN_ROUTE_ORDER_RMASK 0x1
#define EMC_DEV_CTL__DDN_ROUTE_ORDER_MASK  0x4
#define EMC_DEV_CTL__DDN_ROUTE_ORDER_FIELD 2,2

#define EMC_DEV_CTL__DMA_RD_CA_ENA_SHIFT 3
#define EMC_DEV_CTL__DMA_RD_CA_ENA_WIDTH 1
#define EMC_DEV_CTL__DMA_RD_CA_ENA_RESET_VAL 1
#define EMC_DEV_CTL__DMA_RD_CA_ENA_RMASK 0x1
#define EMC_DEV_CTL__DMA_RD_CA_ENA_MASK  0x8
#define EMC_DEV_CTL__DMA_RD_CA_ENA_FIELD 3,3

#define EMC_DEV_CTL__L3_PROFILE_OVD_SHIFT 4
#define EMC_DEV_CTL__L3_PROFILE_OVD_WIDTH 1
#define EMC_DEV_CTL__L3_PROFILE_OVD_RESET_VAL 0
#define EMC_DEV_CTL__L3_PROFILE_OVD_RMASK 0x1
#define EMC_DEV_CTL__L3_PROFILE_OVD_MASK  0x10
#define EMC_DEV_CTL__L3_PROFILE_OVD_FIELD 4,4

#define EMC_DEV_CTL__L3_PROFILE_VAL_SHIFT 5
#define EMC_DEV_CTL__L3_PROFILE_VAL_WIDTH 4
#define EMC_DEV_CTL__L3_PROFILE_VAL_RESET_VAL 0
#define EMC_DEV_CTL__L3_PROFILE_VAL_RMASK 0xf
#define EMC_DEV_CTL__L3_PROFILE_VAL_MASK  0x1e0
#define EMC_DEV_CTL__L3_PROFILE_VAL_FIELD 5,8

#define EMC_DEV_CTL__WR_SLVERR_MAP_SHIFT 9
#define EMC_DEV_CTL__WR_SLVERR_MAP_WIDTH 2
#define EMC_DEV_CTL__WR_SLVERR_MAP_RESET_VAL 2
#define EMC_DEV_CTL__WR_SLVERR_MAP_RMASK 0x3
#define EMC_DEV_CTL__WR_SLVERR_MAP_MASK  0x600
#define EMC_DEV_CTL__WR_SLVERR_MAP_FIELD 9,10
#define EMC_DEV_CTL__WR_SLVERR_MAP_VAL_OKAY 0x0
#define EMC_DEV_CTL__WR_SLVERR_MAP_VAL_DATAERROR 0x2
#define EMC_DEV_CTL__WR_SLVERR_MAP_VAL_NONDATAERROR 0x3

#define EMC_DEV_CTL__WR_DECERR_MAP_SHIFT 11
#define EMC_DEV_CTL__WR_DECERR_MAP_WIDTH 2
#define EMC_DEV_CTL__WR_DECERR_MAP_RESET_VAL 3
#define EMC_DEV_CTL__WR_DECERR_MAP_RMASK 0x3
#define EMC_DEV_CTL__WR_DECERR_MAP_MASK  0x1800
#define EMC_DEV_CTL__WR_DECERR_MAP_FIELD 11,12
#define EMC_DEV_CTL__WR_DECERR_MAP_VAL_OKAY 0x0
#define EMC_DEV_CTL__WR_DECERR_MAP_VAL_DATAERROR 0x2
#define EMC_DEV_CTL__WR_DECERR_MAP_VAL_NONDATAERROR 0x3

#define EMC_DEV_CTL__RD_SLVERR_MAP_SHIFT 13
#define EMC_DEV_CTL__RD_SLVERR_MAP_WIDTH 2
#define EMC_DEV_CTL__RD_SLVERR_MAP_RESET_VAL 2
#define EMC_DEV_CTL__RD_SLVERR_MAP_RMASK 0x3
#define EMC_DEV_CTL__RD_SLVERR_MAP_MASK  0x6000
#define EMC_DEV_CTL__RD_SLVERR_MAP_FIELD 13,14
#define EMC_DEV_CTL__RD_SLVERR_MAP_VAL_OKAY 0x0
#define EMC_DEV_CTL__RD_SLVERR_MAP_VAL_DATAERROR 0x2
#define EMC_DEV_CTL__RD_SLVERR_MAP_VAL_NONDATAERROR 0x3

#define EMC_DEV_CTL__RD_DECERR_MAP_SHIFT 15
#define EMC_DEV_CTL__RD_DECERR_MAP_WIDTH 2
#define EMC_DEV_CTL__RD_DECERR_MAP_RESET_VAL 3
#define EMC_DEV_CTL__RD_DECERR_MAP_RMASK 0x3
#define EMC_DEV_CTL__RD_DECERR_MAP_MASK  0x18000
#define EMC_DEV_CTL__RD_DECERR_MAP_FIELD 15,16
#define EMC_DEV_CTL__RD_DECERR_MAP_VAL_OKAY 0x0
#define EMC_DEV_CTL__RD_DECERR_MAP_VAL_DATAERROR 0x2
#define EMC_DEV_CTL__RD_DECERR_MAP_VAL_NONDATAERROR 0x3

#define EMC_DEV_CTL__CDN_REQ_BUF_ENA_SHIFT 17
#define EMC_DEV_CTL__CDN_REQ_BUF_ENA_WIDTH 1
#define EMC_DEV_CTL__CDN_REQ_BUF_ENA_RESET_VAL 1
#define EMC_DEV_CTL__CDN_REQ_BUF_ENA_RMASK 0x1
#define EMC_DEV_CTL__CDN_REQ_BUF_ENA_MASK  0x20000
#define EMC_DEV_CTL__CDN_REQ_BUF_ENA_FIELD 17,17

#define EMC_DEV_CTL__DMA_WRQ_HWM_SHIFT 20
#define EMC_DEV_CTL__DMA_WRQ_HWM_WIDTH 8
#define EMC_DEV_CTL__DMA_WRQ_HWM_RESET_VAL 255
#define EMC_DEV_CTL__DMA_WRQ_HWM_RMASK 0xff
#define EMC_DEV_CTL__DMA_WRQ_HWM_MASK  0xff00000
#define EMC_DEV_CTL__DMA_WRQ_HWM_FIELD 20,27

#define EMC_DEV_CTL__GTHR_DELAY_ADJ_SHIFT 28
#define EMC_DEV_CTL__GTHR_DELAY_ADJ_WIDTH 4
#define EMC_DEV_CTL__GTHR_DELAY_ADJ_RESET_VAL 0
#define EMC_DEV_CTL__GTHR_DELAY_ADJ_RMASK 0xf
#define EMC_DEV_CTL__GTHR_DELAY_ADJ_MASK  0xf0000000
#define EMC_DEV_CTL__GTHR_DELAY_ADJ_FIELD 28,31


/*
 * Common Spare Register.
 * Common Spare Register. Mellanox tradition: leave one spare register as a
 * backup if there is something wrong of some registers
 */
#define EMC_COMMON_SPARE 0x0010
#define EMC_COMMON_SPARE__LENGTH 0x0001

#define EMC_COMMON_SPARE__VAL_SHIFT 0
#define EMC_COMMON_SPARE__VAL_WIDTH 64
#define EMC_COMMON_SPARE__VAL_RESET_VAL 18446744073709551615
#define EMC_COMMON_SPARE__VAL_RMASK _64bit(0xffffffffffffffff)
#define EMC_COMMON_SPARE__VAL_MASK  _64bit(0xffffffffffffffff)
#define EMC_COMMON_SPARE__VAL_FIELD 0,63


/* Scratchpad. */
#define EMC_SCRATCHPAD 0x0020
#define EMC_SCRATCHPAD__LENGTH 0x0001

#define EMC_SCRATCHPAD__SCRATCHPAD_SHIFT 0
#define EMC_SCRATCHPAD__SCRATCHPAD_WIDTH 64
#define EMC_SCRATCHPAD__SCRATCHPAD_RESET_VAL 0
#define EMC_SCRATCHPAD__SCRATCHPAD_RMASK _64bit(0xffffffffffffffff)
#define EMC_SCRATCHPAD__SCRATCHPAD_MASK  _64bit(0xffffffffffffffff)
#define EMC_SCRATCHPAD__SCRATCHPAD_FIELD 0,63


/*
 * Semaphore0.
 * Semaphore, this register is intentionally unused in the viper project
 */
#define EMC_SEMAPHORE0 0x0028
#define EMC_SEMAPHORE0__LENGTH 0x0001

#define EMC_SEMAPHORE0__VAL_SHIFT 0
#define EMC_SEMAPHORE0__VAL_WIDTH 1
#define EMC_SEMAPHORE0__VAL_RESET_VAL 0
#define EMC_SEMAPHORE0__VAL_RMASK 0x1
#define EMC_SEMAPHORE0__VAL_MASK  0x1
#define EMC_SEMAPHORE0__VAL_FIELD 0,0


/*
 * DMA Status.
 * DMA status information for debug. Unused for devices that do not have DMA.
 * This register does not exist in the PKA or Tile or MSS.
 */
#define EMC_DMA_STATUS 0x0030
#define EMC_DMA_STATUS__LENGTH 0x0001

#define EMC_DMA_STATUS__RDQ_INFL_COUNT_SHIFT 0
#define EMC_DMA_STATUS__RDQ_INFL_COUNT_WIDTH 9
#define EMC_DMA_STATUS__RDQ_INFL_COUNT_RESET_VAL 0
#define EMC_DMA_STATUS__RDQ_INFL_COUNT_RMASK 0x1ff
#define EMC_DMA_STATUS__RDQ_INFL_COUNT_MASK  0x1ff
#define EMC_DMA_STATUS__RDQ_INFL_COUNT_FIELD 0,8

#define EMC_DMA_STATUS__WRQ_INFL_COUNT_SHIFT 9
#define EMC_DMA_STATUS__WRQ_INFL_COUNT_WIDTH 9
#define EMC_DMA_STATUS__WRQ_INFL_COUNT_RESET_VAL 0
#define EMC_DMA_STATUS__WRQ_INFL_COUNT_RMASK 0x1ff
#define EMC_DMA_STATUS__WRQ_INFL_COUNT_MASK  0x3fe00
#define EMC_DMA_STATUS__WRQ_INFL_COUNT_FIELD 9,17

#define EMC_DMA_STATUS__WRQ_DIAG_VEC_SHIFT 25
#define EMC_DMA_STATUS__WRQ_DIAG_VEC_WIDTH 39
#define EMC_DMA_STATUS__WRQ_DIAG_VEC_RESET_VAL 0
#define EMC_DMA_STATUS__WRQ_DIAG_VEC_RMASK _64bit(0x7fffffffff)
#define EMC_DMA_STATUS__WRQ_DIAG_VEC_MASK  _64bit(0xfffffffffe000000)
#define EMC_DMA_STATUS__WRQ_DIAG_VEC_FIELD 25,63


/* Clock Count. */
#define EMC_CLOCK_COUNT 0x0038
#define EMC_CLOCK_COUNT__LENGTH 0x0001

#define EMC_CLOCK_COUNT__RUN_SHIFT 0
#define EMC_CLOCK_COUNT__RUN_WIDTH 1
#define EMC_CLOCK_COUNT__RUN_RESET_VAL 0
#define EMC_CLOCK_COUNT__RUN_RMASK 0x1
#define EMC_CLOCK_COUNT__RUN_MASK  0x1
#define EMC_CLOCK_COUNT__RUN_FIELD 0,0

#define EMC_CLOCK_COUNT__COUNT_SHIFT 1
#define EMC_CLOCK_COUNT__COUNT_WIDTH 15
#define EMC_CLOCK_COUNT__COUNT_RMASK 0x7fff
#define EMC_CLOCK_COUNT__COUNT_MASK  0xfffe
#define EMC_CLOCK_COUNT__COUNT_FIELD 1,15


/*
 * Interrupt Setup.
 * Configuration for device interrupts.
 */
#define EMC_INT_SETUP 0x0040
#define EMC_INT_SETUP__LENGTH 0x0001

#define EMC_INT_SETUP__GBL_ENA_SHIFT 0
#define EMC_INT_SETUP__GBL_ENA_WIDTH 1
#define EMC_INT_SETUP__GBL_ENA_RESET_VAL 0
#define EMC_INT_SETUP__GBL_ENA_RMASK 0x1
#define EMC_INT_SETUP__GBL_ENA_MASK  0x1
#define EMC_INT_SETUP__GBL_ENA_FIELD 0,0

#define EMC_INT_SETUP__BASE_INT_NUM_SHIFT 48
#define EMC_INT_SETUP__BASE_INT_NUM_WIDTH 16
#define EMC_INT_SETUP__BASE_INT_NUM_RMASK 0xffff
#define EMC_INT_SETUP__BASE_INT_NUM_MASK  _64bit(0xffff000000000000)
#define EMC_INT_SETUP__BASE_INT_NUM_FIELD 48,63


/*
 * Credit Control.
 * Provides access to the request-credit counters that control end-to-end
 * flow control between the device and other nodes in the system.
 */
#define EMC_CRED_CTL 0x0050
#define EMC_CRED_CTL__LENGTH 0x0001

#define EMC_CRED_CTL__UPDATE_SHIFT 0
#define EMC_CRED_CTL__UPDATE_WIDTH 1
#define EMC_CRED_CTL__UPDATE_RESET_VAL 0
#define EMC_CRED_CTL__UPDATE_RMASK 0x1
#define EMC_CRED_CTL__UPDATE_MASK  0x1
#define EMC_CRED_CTL__UPDATE_FIELD 0,0

#define EMC_CRED_CTL__NODEID_SEL_SHIFT 1
#define EMC_CRED_CTL__NODEID_SEL_WIDTH 11
#define EMC_CRED_CTL__NODEID_SEL_RESET_VAL 0
#define EMC_CRED_CTL__NODEID_SEL_RMASK 0x7ff
#define EMC_CRED_CTL__NODEID_SEL_MASK  0xffe
#define EMC_CRED_CTL__NODEID_SEL_FIELD 1,11

#define EMC_CRED_CTL__TGT_SEL_SHIFT 12
#define EMC_CRED_CTL__TGT_SEL_WIDTH 2
#define EMC_CRED_CTL__TGT_SEL_RESET_VAL 0
#define EMC_CRED_CTL__TGT_SEL_RMASK 0x3
#define EMC_CRED_CTL__TGT_SEL_MASK  0x3000
#define EMC_CRED_CTL__TGT_SEL_FIELD 12,13
#define EMC_CRED_CTL__TGT_SEL_VAL_TX_REQ 0x0
#define EMC_CRED_CTL__TGT_SEL_VAL_RETRYQ 0x1
#define EMC_CRED_CTL__TGT_SEL_VAL_RING 0x2

#define EMC_CRED_CTL__CLIENT_SEL_SHIFT 14
#define EMC_CRED_CTL__CLIENT_SEL_WIDTH 2
#define EMC_CRED_CTL__CLIENT_SEL_RESET_VAL 0
#define EMC_CRED_CTL__CLIENT_SEL_RMASK 0x3
#define EMC_CRED_CTL__CLIENT_SEL_MASK  0xc000
#define EMC_CRED_CTL__CLIENT_SEL_FIELD 14,15

#define EMC_CRED_CTL__VAL_SHIFT 16
#define EMC_CRED_CTL__VAL_WIDTH 16
#define EMC_CRED_CTL__VAL_RESET_VAL 0
#define EMC_CRED_CTL__VAL_RMASK 0xffff
#define EMC_CRED_CTL__VAL_MASK  0xffff0000
#define EMC_CRED_CTL__VAL_FIELD 16,31


/*
 * SAM Control.
 * Provides access to SAM initialization.
 */
#define EMC_SAM_CTL 0x0058
#define EMC_SAM_CTL__LENGTH 0x0001

#define EMC_SAM_CTL__UPDATE_SHIFT 0
#define EMC_SAM_CTL__UPDATE_WIDTH 1
#define EMC_SAM_CTL__UPDATE_RESET_VAL 0
#define EMC_SAM_CTL__UPDATE_RMASK 0x1
#define EMC_SAM_CTL__UPDATE_MASK  0x1
#define EMC_SAM_CTL__UPDATE_FIELD 0,0

#define EMC_SAM_CTL__IDX_SHIFT 1
#define EMC_SAM_CTL__IDX_WIDTH 12
#define EMC_SAM_CTL__IDX_RESET_VAL 0
#define EMC_SAM_CTL__IDX_RMASK 0xfff
#define EMC_SAM_CTL__IDX_MASK  0x1ffe
#define EMC_SAM_CTL__IDX_FIELD 1,12
#define EMC_SAM_CTL__IDX_VAL_HNF_SIZE 0x7f7
#define EMC_SAM_CTL__IDX_VAL_LDR_SIZE 0x20

#define EMC_SAM_CTL__TBL_SEL_SHIFT 13
#define EMC_SAM_CTL__TBL_SEL_WIDTH 3
#define EMC_SAM_CTL__TBL_SEL_RESET_VAL 0
#define EMC_SAM_CTL__TBL_SEL_RMASK 0x7
#define EMC_SAM_CTL__TBL_SEL_MASK  0xe000
#define EMC_SAM_CTL__TBL_SEL_FIELD 13,15
#define EMC_SAM_CTL__TBL_SEL_VAL_LDR 0x0
#define EMC_SAM_CTL__TBL_SEL_VAL_HNF 0x1
#define EMC_SAM_CTL__TBL_SEL_VAL_PCI_NPF 0x2
#define EMC_SAM_CTL__TBL_SEL_VAL_PCI_PF 0x3
#define EMC_SAM_CTL__TBL_SEL_VAL_PCI_CFG 0x4

#define EMC_SAM_CTL__CLIENT_SEL_SHIFT 16
#define EMC_SAM_CTL__CLIENT_SEL_WIDTH 1
#define EMC_SAM_CTL__CLIENT_SEL_RESET_VAL 0
#define EMC_SAM_CTL__CLIENT_SEL_RMASK 0x1
#define EMC_SAM_CTL__CLIENT_SEL_MASK  0x10000
#define EMC_SAM_CTL__CLIENT_SEL_FIELD 16,16

#define EMC_SAM_CTL__READ_SHIFT 17
#define EMC_SAM_CTL__READ_WIDTH 1
#define EMC_SAM_CTL__READ_RESET_VAL 0
#define EMC_SAM_CTL__READ_RMASK 0x1
#define EMC_SAM_CTL__READ_MASK  0x20000
#define EMC_SAM_CTL__READ_FIELD 17,17

#define EMC_SAM_CTL__VAL_SHIFT 18
#define EMC_SAM_CTL__VAL_WIDTH 34
#define EMC_SAM_CTL__VAL_RESET_VAL 0
#define EMC_SAM_CTL__VAL_RMASK _64bit(0x3ffffffff)
#define EMC_SAM_CTL__VAL_MASK  _64bit(0xffffffffc0000)
#define EMC_SAM_CTL__VAL_FIELD 18,51


/*
 * Device Security Level.
 * Allows Secure and/or NonSecure accesses. When not allowed reads will
 * return a value of 0 and writes
 *   will be dropped. Accesses to this register are not controlled by these
 * bits; only Secure accesses are allowed.
 *
 * The NUM_SEC_DOMAIN PUBLIC on a unit's sm_dev instantiation describes the
 * number of address spaces within the unit that are separately protected.
 * Each domain has a corresponding set of ALLOW_S/ALLOW_NS bits.
 * The most common case is for the entire address space of the unit to be
 * treated the same. In this case NUM_SEC_DOMAIN is set to 1, Domain0's
 * ALLOW_S/ALLOW_NS bits are valid, and all other Domains' ALLOW_S/ALLOW_NS
 * are reserved/unused by hardware.
 * If NUM_SEC_DOMAIN is set to 2, Domain0 and Domain1 are valid and
 * Domains2-5 are reserved/unused by hardware.
 */
#define EMC_COMMON_DEVICE_SECURITY_LEVEL 0x0018
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__LENGTH 0x0001

#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN0_SHIFT 0
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN0_WIDTH 1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN0_RMASK 0x1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN0_MASK  0x1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN0_FIELD 0,0

#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN0_SHIFT 1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN0_WIDTH 1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN0_RMASK 0x1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN0_MASK  0x2
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN0_FIELD 1,1

#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN1_SHIFT 2
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN1_WIDTH 1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN1_RMASK 0x1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN1_MASK  0x4
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN1_FIELD 2,2

#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN1_SHIFT 3
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN1_WIDTH 1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN1_RMASK 0x1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN1_MASK  0x8
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN1_FIELD 3,3

#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN2_SHIFT 4
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN2_WIDTH 1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN2_RMASK 0x1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN2_MASK  0x10
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN2_FIELD 4,4

#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN2_SHIFT 5
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN2_WIDTH 1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN2_RMASK 0x1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN2_MASK  0x20
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN2_FIELD 5,5

#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN3_SHIFT 6
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN3_WIDTH 1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN3_RMASK 0x1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN3_MASK  0x40
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN3_FIELD 6,6

#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN3_SHIFT 7
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN3_WIDTH 1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN3_RMASK 0x1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN3_MASK  0x80
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN3_FIELD 7,7

#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN4_SHIFT 8
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN4_WIDTH 1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN4_RMASK 0x1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN4_MASK  0x100
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN4_FIELD 8,8

#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN4_SHIFT 9
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN4_WIDTH 1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN4_RMASK 0x1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN4_MASK  0x200
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN4_FIELD 9,9

#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN5_SHIFT 10
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN5_WIDTH 1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN5_RMASK 0x1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN5_MASK  0x400
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_S_DOMAIN5_FIELD 10,10

#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN5_SHIFT 11
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN5_WIDTH 1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN5_RMASK 0x1
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN5_MASK  0x800
#define EMC_COMMON_DEVICE_SECURITY_LEVEL__ALLOW_NS_DOMAIN5_FIELD 11,11


/*
 * IND_DATA.
 * Indirect data registers
 */
#define EMC_IND_DATA__FIRST_WORD 0x0000
#define EMC_IND_DATA__LAST_WORD 0x0008
#define EMC_IND_DATA__LENGTH 0x0009
#define EMC_IND_DATA__STRIDE 0x0001

#define EMC_IND_DATA__VAL_SHIFT 0
#define EMC_IND_DATA__VAL_WIDTH 32
#define EMC_IND_DATA__VAL_RESET_VAL 0
#define EMC_IND_DATA__VAL_RMASK 0xffffffff
#define EMC_IND_DATA__VAL_MASK  0xffffffff
#define EMC_IND_DATA__VAL_FIELD 0,31


/*
 * IND_CMD.
 * Indirect command registers
 */
#define EMC_IND_CMD 0x0010
#define EMC_IND_CMD__LENGTH 0x0001

#define EMC_IND_CMD__OP_SHIFT 0
#define EMC_IND_CMD__OP_WIDTH 1
#define EMC_IND_CMD__OP_RESET_VAL 0
#define EMC_IND_CMD__OP_RMASK 0x1
#define EMC_IND_CMD__OP_MASK  0x1
#define EMC_IND_CMD__OP_FIELD 0,0

#define EMC_IND_CMD__MEM_ID_SHIFT 8
#define EMC_IND_CMD__MEM_ID_WIDTH 3
#define EMC_IND_CMD__MEM_ID_RESET_VAL 0
#define EMC_IND_CMD__MEM_ID_RMASK 0x7
#define EMC_IND_CMD__MEM_ID_MASK  0x700
#define EMC_IND_CMD__MEM_ID_FIELD 8,10


/*
 * IND_ADDR.
 * Address for host operation
 */
#define EMC_IND_ADDR 0x0014
#define EMC_IND_ADDR__LENGTH 0x0001

#define EMC_IND_ADDR__VAL_SHIFT 0
#define EMC_IND_ADDR__VAL_WIDTH 32
#define EMC_IND_ADDR__VAL_RESET_VAL 0
#define EMC_IND_ADDR__VAL_RMASK 0xffffffff
#define EMC_IND_ADDR__VAL_MASK  0xffffffff
#define EMC_IND_ADDR__VAL_FIELD 0,31


/*
 * IND_STS.
 * Holds statuses on various processes in the memory controller
 */
#define EMC_IND_STS 0x0015
#define EMC_IND_STS__LENGTH 0x0001

#define EMC_IND_STS__RDY_SHIFT 0
#define EMC_IND_STS__RDY_WIDTH 1
#define EMC_IND_STS__RDY_RESET_VAL 1
#define EMC_IND_STS__RDY_RMASK 0x1
#define EMC_IND_STS__RDY_MASK  0x1
#define EMC_IND_STS__RDY_FIELD 0,0

#define EMC_IND_STS__SUCCESS_SHIFT 1
#define EMC_IND_STS__SUCCESS_WIDTH 1
#define EMC_IND_STS__SUCCESS_RESET_VAL 1
#define EMC_IND_STS__SUCCESS_RMASK 0x1
#define EMC_IND_STS__SUCCESS_MASK  0x2
#define EMC_IND_STS__SUCCESS_FIELD 1,1

#define EMC_IND_STS__ARB_DIS_SHIFT 8
#define EMC_IND_STS__ARB_DIS_WIDTH 1
#define EMC_IND_STS__ARB_DIS_RESET_VAL 0
#define EMC_IND_STS__ARB_DIS_RMASK 0x1
#define EMC_IND_STS__ARB_DIS_MASK  0x100
#define EMC_IND_STS__ARB_DIS_FIELD 8,8

#define EMC_IND_STS__APB_IFC_STAT_SHIFT 16
#define EMC_IND_STS__APB_IFC_STAT_WIDTH 1
#define EMC_IND_STS__APB_IFC_STAT_RESET_VAL 0
#define EMC_IND_STS__APB_IFC_STAT_RMASK 0x1
#define EMC_IND_STS__APB_IFC_STAT_MASK  0x10000
#define EMC_IND_STS__APB_IFC_STAT_FIELD 16,16

#define EMC_IND_STS__PHY_CFG_RDY_SHIFT 17
#define EMC_IND_STS__PHY_CFG_RDY_WIDTH 1
#define EMC_IND_STS__PHY_CFG_RDY_RESET_VAL 0
#define EMC_IND_STS__PHY_CFG_RDY_RMASK 0x1
#define EMC_IND_STS__PHY_CFG_RDY_MASK  0x20000
#define EMC_IND_STS__PHY_CFG_RDY_FIELD 17,17

#define EMC_IND_STS__MNG_CMD_DONE_SHIFT 24
#define EMC_IND_STS__MNG_CMD_DONE_WIDTH 1
#define EMC_IND_STS__MNG_CMD_DONE_RESET_VAL 0
#define EMC_IND_STS__MNG_CMD_DONE_RMASK 0x1
#define EMC_IND_STS__MNG_CMD_DONE_MASK  0x1000000
#define EMC_IND_STS__MNG_CMD_DONE_FIELD 24,24


/*
 * SPARE.
 * Spare Configuration Register
 */
#define EMC_SPARE 0x00ff
#define EMC_SPARE__LENGTH 0x0001

#define EMC_SPARE__VAL_SHIFT 0
#define EMC_SPARE__VAL_WIDTH 32
#define EMC_SPARE__VAL_RESET_VAL 0
#define EMC_SPARE__VAL_RMASK 0xffffffff
#define EMC_SPARE__VAL_MASK  0xffffffff
#define EMC_SPARE__VAL_FIELD 0,31


/*
 * TIMING1.
 * Holds time delay parameter of the DDR
 */
#define EMC_TIMING1 0x0100
#define EMC_TIMING1__LENGTH 0x0001

#define EMC_TIMING1__WRA_TRP_GAP_SHIFT 0
#define EMC_TIMING1__WRA_TRP_GAP_WIDTH 8
#define EMC_TIMING1__WRA_TRP_GAP_RESET_VAL 0
#define EMC_TIMING1__WRA_TRP_GAP_RMASK 0xff
#define EMC_TIMING1__WRA_TRP_GAP_MASK  0xff
#define EMC_TIMING1__WRA_TRP_GAP_FIELD 0,7

#define EMC_TIMING1__RDA_TRP_GAP_SHIFT 8
#define EMC_TIMING1__RDA_TRP_GAP_WIDTH 8
#define EMC_TIMING1__RDA_TRP_GAP_RESET_VAL 0
#define EMC_TIMING1__RDA_TRP_GAP_RMASK 0xff
#define EMC_TIMING1__RDA_TRP_GAP_MASK  0xff00
#define EMC_TIMING1__RDA_TRP_GAP_FIELD 8,15

#define EMC_TIMING1__RD_AL_SHIFT 16
#define EMC_TIMING1__RD_AL_WIDTH 8
#define EMC_TIMING1__RD_AL_RESET_VAL 0
#define EMC_TIMING1__RD_AL_RMASK 0xff
#define EMC_TIMING1__RD_AL_MASK  0xff0000
#define EMC_TIMING1__RD_AL_FIELD 16,23

#define EMC_TIMING1__WR_AL_SHIFT 24
#define EMC_TIMING1__WR_AL_WIDTH 8
#define EMC_TIMING1__WR_AL_RESET_VAL 0
#define EMC_TIMING1__WR_AL_RMASK 0xff
#define EMC_TIMING1__WR_AL_MASK  0xff000000
#define EMC_TIMING1__WR_AL_FIELD 24,31


/*
 * TIMING2.
 * Holds time delay parameter of a Same Package Rank DDR
 */
#define EMC_TIMING2 0x0101
#define EMC_TIMING2__LENGTH 0x0001

#define EMC_TIMING2__WR_RD_GAP_SH_SHIFT 0
#define EMC_TIMING2__WR_RD_GAP_SH_WIDTH 8
#define EMC_TIMING2__WR_RD_GAP_SH_RESET_VAL 0
#define EMC_TIMING2__WR_RD_GAP_SH_RMASK 0xff
#define EMC_TIMING2__WR_RD_GAP_SH_MASK  0xff
#define EMC_TIMING2__WR_RD_GAP_SH_FIELD 0,7

#define EMC_TIMING2__WR_RD_GAP_LO_SHIFT 8
#define EMC_TIMING2__WR_RD_GAP_LO_WIDTH 8
#define EMC_TIMING2__WR_RD_GAP_LO_RESET_VAL 0
#define EMC_TIMING2__WR_RD_GAP_LO_RMASK 0xff
#define EMC_TIMING2__WR_RD_GAP_LO_MASK  0xff00
#define EMC_TIMING2__WR_RD_GAP_LO_FIELD 8,15

#define EMC_TIMING2__RD_WR_GAP_SHIFT 16
#define EMC_TIMING2__RD_WR_GAP_WIDTH 8
#define EMC_TIMING2__RD_WR_GAP_RESET_VAL 0
#define EMC_TIMING2__RD_WR_GAP_RMASK 0xff
#define EMC_TIMING2__RD_WR_GAP_MASK  0xff0000
#define EMC_TIMING2__RD_WR_GAP_FIELD 16,23


/*
 * TIMING3.
 * Holds time delay parameter of the DDR
 */
#define EMC_TIMING3 0x0102
#define EMC_TIMING3__LENGTH 0x0001

#define EMC_TIMING3__TRC_SHIFT 8
#define EMC_TIMING3__TRC_WIDTH 8
#define EMC_TIMING3__TRC_RESET_VAL 0
#define EMC_TIMING3__TRC_RMASK 0xff
#define EMC_TIMING3__TRC_MASK  0xff00
#define EMC_TIMING3__TRC_FIELD 8,15

#define EMC_TIMING3__DQS_RD_EN_SHIFT 16
#define EMC_TIMING3__DQS_RD_EN_WIDTH 8
#define EMC_TIMING3__DQS_RD_EN_RESET_VAL 0
#define EMC_TIMING3__DQS_RD_EN_RMASK 0xff
#define EMC_TIMING3__DQS_RD_EN_MASK  0xff0000
#define EMC_TIMING3__DQS_RD_EN_FIELD 16,23

#define EMC_TIMING3__DQS_WR_EN_SHIFT 24
#define EMC_TIMING3__DQS_WR_EN_WIDTH 8
#define EMC_TIMING3__DQS_WR_EN_RESET_VAL 0
#define EMC_TIMING3__DQS_WR_EN_RMASK 0xff
#define EMC_TIMING3__DQS_WR_EN_MASK  0xff000000
#define EMC_TIMING3__DQS_WR_EN_FIELD 24,31


/*
 * TIMING4.
 * Holds time delay parameter of the DDR
 */
#define EMC_TIMING4 0x0103
#define EMC_TIMING4__LENGTH 0x0001

#define EMC_TIMING4__ACT2ACT_GAP_DLR_SHIFT 0
#define EMC_TIMING4__ACT2ACT_GAP_DLR_WIDTH 4
#define EMC_TIMING4__ACT2ACT_GAP_DLR_RESET_VAL 4
#define EMC_TIMING4__ACT2ACT_GAP_DLR_RMASK 0xf
#define EMC_TIMING4__ACT2ACT_GAP_DLR_MASK  0xf
#define EMC_TIMING4__ACT2ACT_GAP_DLR_FIELD 0,3

#define EMC_TIMING4__ACT2ACT_GAP_S_SLR_SHIFT 4
#define EMC_TIMING4__ACT2ACT_GAP_S_SLR_WIDTH 3
#define EMC_TIMING4__ACT2ACT_GAP_S_SLR_RESET_VAL 2
#define EMC_TIMING4__ACT2ACT_GAP_S_SLR_RMASK 0x7
#define EMC_TIMING4__ACT2ACT_GAP_S_SLR_MASK  0x70
#define EMC_TIMING4__ACT2ACT_GAP_S_SLR_FIELD 4,6

#define EMC_TIMING4__ACT2ACT_GAP_L_SLR_SHIFT 7
#define EMC_TIMING4__ACT2ACT_GAP_L_SLR_WIDTH 3
#define EMC_TIMING4__ACT2ACT_GAP_L_SLR_RESET_VAL 3
#define EMC_TIMING4__ACT2ACT_GAP_L_SLR_RMASK 0x7
#define EMC_TIMING4__ACT2ACT_GAP_L_SLR_MASK  0x380
#define EMC_TIMING4__ACT2ACT_GAP_L_SLR_FIELD 7,9

#define EMC_TIMING4__TFAW_DLR_SHIFT 12
#define EMC_TIMING4__TFAW_DLR_WIDTH 5
#define EMC_TIMING4__TFAW_DLR_RESET_VAL 8
#define EMC_TIMING4__TFAW_DLR_RMASK 0x1f
#define EMC_TIMING4__TFAW_DLR_MASK  0x1f000
#define EMC_TIMING4__TFAW_DLR_FIELD 12,16

#define EMC_TIMING4__TFAW_SLR_SHIFT 17
#define EMC_TIMING4__TFAW_SLR_WIDTH 5
#define EMC_TIMING4__TFAW_SLR_RESET_VAL 8
#define EMC_TIMING4__TFAW_SLR_RMASK 0x1f
#define EMC_TIMING4__TFAW_SLR_MASK  0x3e0000
#define EMC_TIMING4__TFAW_SLR_FIELD 17,21

#define EMC_TIMING4__TFAW_KEEP_PHASE_SHIFT 22
#define EMC_TIMING4__TFAW_KEEP_PHASE_WIDTH 5
#define EMC_TIMING4__TFAW_KEEP_PHASE_RESET_VAL 2
#define EMC_TIMING4__TFAW_KEEP_PHASE_RMASK 0x1f
#define EMC_TIMING4__TFAW_KEEP_PHASE_MASK  0x7c00000
#define EMC_TIMING4__TFAW_KEEP_PHASE_FIELD 22,26

#define EMC_TIMING4__KEEP_PHASE_DURATION_SHIFT 27
#define EMC_TIMING4__KEEP_PHASE_DURATION_WIDTH 5
#define EMC_TIMING4__KEEP_PHASE_DURATION_RESET_VAL 3
#define EMC_TIMING4__KEEP_PHASE_DURATION_RMASK 0x1f
#define EMC_TIMING4__KEEP_PHASE_DURATION_MASK  0xf8000000
#define EMC_TIMING4__KEEP_PHASE_DURATION_FIELD 27,31


/*
 * TIMING5.
 * Holds time delay parameter of the Multiple Package Ranks Gaps
 */
#define EMC_TIMING5 0x0104
#define EMC_TIMING5__LENGTH 0x0001

#define EMC_TIMING5__PRANK_SWITCH_GAP_RD_SHIFT 0
#define EMC_TIMING5__PRANK_SWITCH_GAP_RD_WIDTH 5
#define EMC_TIMING5__PRANK_SWITCH_GAP_RD_RESET_VAL 0
#define EMC_TIMING5__PRANK_SWITCH_GAP_RD_RMASK 0x1f
#define EMC_TIMING5__PRANK_SWITCH_GAP_RD_MASK  0x1f
#define EMC_TIMING5__PRANK_SWITCH_GAP_RD_FIELD 0,4

#define EMC_TIMING5__PRANK_WR_RD_GAP_SHIFT 8
#define EMC_TIMING5__PRANK_WR_RD_GAP_WIDTH 4
#define EMC_TIMING5__PRANK_WR_RD_GAP_RESET_VAL 0
#define EMC_TIMING5__PRANK_WR_RD_GAP_RMASK 0xf
#define EMC_TIMING5__PRANK_WR_RD_GAP_MASK  0xf00
#define EMC_TIMING5__PRANK_WR_RD_GAP_FIELD 8,11

#define EMC_TIMING5__PRANK_RD_WR_GAP_SHIFT 16
#define EMC_TIMING5__PRANK_RD_WR_GAP_WIDTH 4
#define EMC_TIMING5__PRANK_RD_WR_GAP_RESET_VAL 0
#define EMC_TIMING5__PRANK_RD_WR_GAP_RMASK 0xf
#define EMC_TIMING5__PRANK_RD_WR_GAP_MASK  0xf0000
#define EMC_TIMING5__PRANK_RD_WR_GAP_FIELD 16,19

#define EMC_TIMING5__PRANK_SWITCH_GAP_WR_SHIFT 24
#define EMC_TIMING5__PRANK_SWITCH_GAP_WR_WIDTH 5
#define EMC_TIMING5__PRANK_SWITCH_GAP_WR_RESET_VAL 0
#define EMC_TIMING5__PRANK_SWITCH_GAP_WR_RMASK 0x1f
#define EMC_TIMING5__PRANK_SWITCH_GAP_WR_MASK  0x1f000000
#define EMC_TIMING5__PRANK_SWITCH_GAP_WR_FIELD 24,28


/*
 * TIMING6.
 * Holds timeing parameters of the DDR4 Component
 */
#define EMC_TIMING6 0x0105
#define EMC_TIMING6__LENGTH 0x0001

#define EMC_TIMING6__TCCD_L_SHIFT 0
#define EMC_TIMING6__TCCD_L_WIDTH 4
#define EMC_TIMING6__TCCD_L_RESET_VAL 6
#define EMC_TIMING6__TCCD_L_RMASK 0xf
#define EMC_TIMING6__TCCD_L_MASK  0xf
#define EMC_TIMING6__TCCD_L_FIELD 0,3


/*
 * RFRSH_PARAMS_1X.
 * Holds parameters refers to the refresh process
 */
#define EMC_RFRSH_PARAMS_1X 0x0106
#define EMC_RFRSH_PARAMS_1X__LENGTH 0x0001

#define EMC_RFRSH_PARAMS_1X__TREFI_SHIFT 0
#define EMC_RFRSH_PARAMS_1X__TREFI_WIDTH 15
#define EMC_RFRSH_PARAMS_1X__TREFI_RESET_VAL 3120
#define EMC_RFRSH_PARAMS_1X__TREFI_RMASK 0x7fff
#define EMC_RFRSH_PARAMS_1X__TREFI_MASK  0x7fff
#define EMC_RFRSH_PARAMS_1X__TREFI_FIELD 0,14

#define EMC_RFRSH_PARAMS_1X__TRFC_SHIFT 15
#define EMC_RFRSH_PARAMS_1X__TRFC_WIDTH 9
#define EMC_RFRSH_PARAMS_1X__TRFC_RESET_VAL 64
#define EMC_RFRSH_PARAMS_1X__TRFC_RMASK 0x1ff
#define EMC_RFRSH_PARAMS_1X__TRFC_MASK  0xff8000
#define EMC_RFRSH_PARAMS_1X__TRFC_FIELD 15,23

#define EMC_RFRSH_PARAMS_1X__RFRSH_BURST_SHIFT 24
#define EMC_RFRSH_PARAMS_1X__RFRSH_BURST_WIDTH 4
#define EMC_RFRSH_PARAMS_1X__RFRSH_BURST_RESET_VAL 1
#define EMC_RFRSH_PARAMS_1X__RFRSH_BURST_RMASK 0xf
#define EMC_RFRSH_PARAMS_1X__RFRSH_BURST_MASK  0xf000000
#define EMC_RFRSH_PARAMS_1X__RFRSH_BURST_FIELD 24,27

#define EMC_RFRSH_PARAMS_1X__MODE_SHIFT 28
#define EMC_RFRSH_PARAMS_1X__MODE_WIDTH 3
#define EMC_RFRSH_PARAMS_1X__MODE_RESET_VAL 0
#define EMC_RFRSH_PARAMS_1X__MODE_RMASK 0x7
#define EMC_RFRSH_PARAMS_1X__MODE_MASK  0x70000000
#define EMC_RFRSH_PARAMS_1X__MODE_FIELD 28,30


/*
 * RFRSH_PARAMS_2X.
 * Holds parameters refers to the refresh process
 */
#define EMC_RFRSH_PARAMS_2X 0x0107
#define EMC_RFRSH_PARAMS_2X__LENGTH 0x0001

#define EMC_RFRSH_PARAMS_2X__TREFI_SHIFT 0
#define EMC_RFRSH_PARAMS_2X__TREFI_WIDTH 15
#define EMC_RFRSH_PARAMS_2X__TREFI_RESET_VAL 3120
#define EMC_RFRSH_PARAMS_2X__TREFI_RMASK 0x7fff
#define EMC_RFRSH_PARAMS_2X__TREFI_MASK  0x7fff
#define EMC_RFRSH_PARAMS_2X__TREFI_FIELD 0,14

#define EMC_RFRSH_PARAMS_2X__TRFC_SHIFT 15
#define EMC_RFRSH_PARAMS_2X__TRFC_WIDTH 9
#define EMC_RFRSH_PARAMS_2X__TRFC_RESET_VAL 64
#define EMC_RFRSH_PARAMS_2X__TRFC_RMASK 0x1ff
#define EMC_RFRSH_PARAMS_2X__TRFC_MASK  0xff8000
#define EMC_RFRSH_PARAMS_2X__TRFC_FIELD 15,23

#define EMC_RFRSH_PARAMS_2X__RFRSH_BURST_SHIFT 24
#define EMC_RFRSH_PARAMS_2X__RFRSH_BURST_WIDTH 5
#define EMC_RFRSH_PARAMS_2X__RFRSH_BURST_RESET_VAL 1
#define EMC_RFRSH_PARAMS_2X__RFRSH_BURST_RMASK 0x1f
#define EMC_RFRSH_PARAMS_2X__RFRSH_BURST_MASK  0x1f000000
#define EMC_RFRSH_PARAMS_2X__RFRSH_BURST_FIELD 24,28


/*
 * RFRSH_PARAMS_4X.
 * Holds parameters refers to the refresh process
 */
#define EMC_RFRSH_PARAMS_4X 0x0108
#define EMC_RFRSH_PARAMS_4X__LENGTH 0x0001

#define EMC_RFRSH_PARAMS_4X__TREFI_SHIFT 0
#define EMC_RFRSH_PARAMS_4X__TREFI_WIDTH 15
#define EMC_RFRSH_PARAMS_4X__TREFI_RESET_VAL 3120
#define EMC_RFRSH_PARAMS_4X__TREFI_RMASK 0x7fff
#define EMC_RFRSH_PARAMS_4X__TREFI_MASK  0x7fff
#define EMC_RFRSH_PARAMS_4X__TREFI_FIELD 0,14

#define EMC_RFRSH_PARAMS_4X__TRFC_SHIFT 15
#define EMC_RFRSH_PARAMS_4X__TRFC_WIDTH 9
#define EMC_RFRSH_PARAMS_4X__TRFC_RESET_VAL 64
#define EMC_RFRSH_PARAMS_4X__TRFC_RMASK 0x1ff
#define EMC_RFRSH_PARAMS_4X__TRFC_MASK  0xff8000
#define EMC_RFRSH_PARAMS_4X__TRFC_FIELD 15,23

#define EMC_RFRSH_PARAMS_4X__RFRSH_BURST_SHIFT 24
#define EMC_RFRSH_PARAMS_4X__RFRSH_BURST_WIDTH 6
#define EMC_RFRSH_PARAMS_4X__RFRSH_BURST_RESET_VAL 1
#define EMC_RFRSH_PARAMS_4X__RFRSH_BURST_RMASK 0x3f
#define EMC_RFRSH_PARAMS_4X__RFRSH_BURST_MASK  0x3f000000
#define EMC_RFRSH_PARAMS_4X__RFRSH_BURST_FIELD 24,29


/*
 * RFRSH_PARAMS_DLR.
 * Holds refresh parameters to different logical ranks
 */
#define EMC_RFRSH_PARAMS_DLR 0x0109
#define EMC_RFRSH_PARAMS_DLR__LENGTH 0x0001

#define EMC_RFRSH_PARAMS_DLR__TRFC_1X_SHIFT 0
#define EMC_RFRSH_PARAMS_DLR__TRFC_1X_WIDTH 9
#define EMC_RFRSH_PARAMS_DLR__TRFC_1X_RESET_VAL 21
#define EMC_RFRSH_PARAMS_DLR__TRFC_1X_RMASK 0x1ff
#define EMC_RFRSH_PARAMS_DLR__TRFC_1X_MASK  0x1ff
#define EMC_RFRSH_PARAMS_DLR__TRFC_1X_FIELD 0,8

#define EMC_RFRSH_PARAMS_DLR__TRFC_2X_SHIFT 9
#define EMC_RFRSH_PARAMS_DLR__TRFC_2X_WIDTH 9
#define EMC_RFRSH_PARAMS_DLR__TRFC_2X_RESET_VAL 21
#define EMC_RFRSH_PARAMS_DLR__TRFC_2X_RMASK 0x1ff
#define EMC_RFRSH_PARAMS_DLR__TRFC_2X_MASK  0x3fe00
#define EMC_RFRSH_PARAMS_DLR__TRFC_2X_FIELD 9,17

#define EMC_RFRSH_PARAMS_DLR__TRFC_4X_SHIFT 18
#define EMC_RFRSH_PARAMS_DLR__TRFC_4X_WIDTH 9
#define EMC_RFRSH_PARAMS_DLR__TRFC_4X_RESET_VAL 21
#define EMC_RFRSH_PARAMS_DLR__TRFC_4X_RMASK 0x1ff
#define EMC_RFRSH_PARAMS_DLR__TRFC_4X_MASK  0x7fc0000
#define EMC_RFRSH_PARAMS_DLR__TRFC_4X_FIELD 18,26


/*
 * CALIB_PARAMS.
 * short calibration parameters
 */
#define EMC_CALIB_PARAMS 0x010a
#define EMC_CALIB_PARAMS__LENGTH 0x0001

#define EMC_CALIB_PARAMS__TH_SHIFT 0
#define EMC_CALIB_PARAMS__TH_WIDTH 10
#define EMC_CALIB_PARAMS__TH_RESET_VAL 0
#define EMC_CALIB_PARAMS__TH_RMASK 0x3ff
#define EMC_CALIB_PARAMS__TH_MASK  0x3ff
#define EMC_CALIB_PARAMS__TH_FIELD 0,9

#define EMC_CALIB_PARAMS__TZQCS_SHIFT 16
#define EMC_CALIB_PARAMS__TZQCS_WIDTH 10
#define EMC_CALIB_PARAMS__TZQCS_RESET_VAL 64
#define EMC_CALIB_PARAMS__TZQCS_RMASK 0x3ff
#define EMC_CALIB_PARAMS__TZQCS_MASK  0x3ff0000
#define EMC_CALIB_PARAMS__TZQCS_FIELD 16,25

#define EMC_CALIB_PARAMS__RANK_OVERLAP_EN_SHIFT 30
#define EMC_CALIB_PARAMS__RANK_OVERLAP_EN_WIDTH 1
#define EMC_CALIB_PARAMS__RANK_OVERLAP_EN_RESET_VAL 0
#define EMC_CALIB_PARAMS__RANK_OVERLAP_EN_RMASK 0x1
#define EMC_CALIB_PARAMS__RANK_OVERLAP_EN_MASK  0x40000000
#define EMC_CALIB_PARAMS__RANK_OVERLAP_EN_FIELD 30,30

#define EMC_CALIB_PARAMS__DEBUG_MODE_SHIFT 31
#define EMC_CALIB_PARAMS__DEBUG_MODE_WIDTH 1
#define EMC_CALIB_PARAMS__DEBUG_MODE_RESET_VAL 0
#define EMC_CALIB_PARAMS__DEBUG_MODE_RMASK 0x1
#define EMC_CALIB_PARAMS__DEBUG_MODE_MASK  0x80000000
#define EMC_CALIB_PARAMS__DEBUG_MODE_FIELD 31,31


/*
 * DDR_PROPERTIES.
 * SDRAM device and DIMM phisical parameters
 */
#define EMC_DDR_PROPERTIES 0x010b
#define EMC_DDR_PROPERTIES__LENGTH 0x0001

#define EMC_DDR_PROPERTIES__PACKAGE_RANK_NUM_SHIFT 0
#define EMC_DDR_PROPERTIES__PACKAGE_RANK_NUM_WIDTH 2
#define EMC_DDR_PROPERTIES__PACKAGE_RANK_NUM_RESET_VAL 0
#define EMC_DDR_PROPERTIES__PACKAGE_RANK_NUM_RMASK 0x3
#define EMC_DDR_PROPERTIES__PACKAGE_RANK_NUM_MASK  0x3
#define EMC_DDR_PROPERTIES__PACKAGE_RANK_NUM_FIELD 0,1

#define EMC_DDR_PROPERTIES__LOGIC_RANK_NUM_SHIFT 4
#define EMC_DDR_PROPERTIES__LOGIC_RANK_NUM_WIDTH 2
#define EMC_DDR_PROPERTIES__LOGIC_RANK_NUM_RESET_VAL 0
#define EMC_DDR_PROPERTIES__LOGIC_RANK_NUM_RMASK 0x3
#define EMC_DDR_PROPERTIES__LOGIC_RANK_NUM_MASK  0x30
#define EMC_DDR_PROPERTIES__LOGIC_RANK_NUM_FIELD 4,5

#define EMC_DDR_PROPERTIES__DQ_PINS_SHIFT 8
#define EMC_DDR_PROPERTIES__DQ_PINS_WIDTH 2
#define EMC_DDR_PROPERTIES__DQ_PINS_RESET_VAL 0
#define EMC_DDR_PROPERTIES__DQ_PINS_RMASK 0x3
#define EMC_DDR_PROPERTIES__DQ_PINS_MASK  0x300
#define EMC_DDR_PROPERTIES__DQ_PINS_FIELD 8,9

#define EMC_DDR_PROPERTIES__TWO_SINGLE_RANK_SHIFT 12
#define EMC_DDR_PROPERTIES__TWO_SINGLE_RANK_WIDTH 1
#define EMC_DDR_PROPERTIES__TWO_SINGLE_RANK_RESET_VAL 0
#define EMC_DDR_PROPERTIES__TWO_SINGLE_RANK_RMASK 0x1
#define EMC_DDR_PROPERTIES__TWO_SINGLE_RANK_MASK  0x1000
#define EMC_DDR_PROPERTIES__TWO_SINGLE_RANK_FIELD 12,12

#define EMC_DDR_PROPERTIES__SINGLE_SDRAM_SHIFT 16
#define EMC_DDR_PROPERTIES__SINGLE_SDRAM_WIDTH 1
#define EMC_DDR_PROPERTIES__SINGLE_SDRAM_RESET_VAL 0
#define EMC_DDR_PROPERTIES__SINGLE_SDRAM_RMASK 0x1
#define EMC_DDR_PROPERTIES__SINGLE_SDRAM_MASK  0x10000
#define EMC_DDR_PROPERTIES__SINGLE_SDRAM_FIELD 16,16

#define EMC_DDR_PROPERTIES__SINGLE_CAS_SHIFT 17
#define EMC_DDR_PROPERTIES__SINGLE_CAS_WIDTH 1
#define EMC_DDR_PROPERTIES__SINGLE_CAS_RESET_VAL 0
#define EMC_DDR_PROPERTIES__SINGLE_CAS_RMASK 0x1
#define EMC_DDR_PROPERTIES__SINGLE_CAS_MASK  0x20000
#define EMC_DDR_PROPERTIES__SINGLE_CAS_FIELD 17,17

#define EMC_DDR_PROPERTIES__AL_3DS_MODE_SHIFT 20
#define EMC_DDR_PROPERTIES__AL_3DS_MODE_WIDTH 1
#define EMC_DDR_PROPERTIES__AL_3DS_MODE_RESET_VAL 0
#define EMC_DDR_PROPERTIES__AL_3DS_MODE_RMASK 0x1
#define EMC_DDR_PROPERTIES__AL_3DS_MODE_MASK  0x100000
#define EMC_DDR_PROPERTIES__AL_3DS_MODE_FIELD 20,20

#define EMC_DDR_PROPERTIES__WR_DBI_EN_SHIFT 24
#define EMC_DDR_PROPERTIES__WR_DBI_EN_WIDTH 1
#define EMC_DDR_PROPERTIES__WR_DBI_EN_RESET_VAL 0
#define EMC_DDR_PROPERTIES__WR_DBI_EN_RMASK 0x1
#define EMC_DDR_PROPERTIES__WR_DBI_EN_MASK  0x1000000
#define EMC_DDR_PROPERTIES__WR_DBI_EN_FIELD 24,24

#define EMC_DDR_PROPERTIES__RD_DBI_EN_SHIFT 25
#define EMC_DDR_PROPERTIES__RD_DBI_EN_WIDTH 1
#define EMC_DDR_PROPERTIES__RD_DBI_EN_RESET_VAL 0
#define EMC_DDR_PROPERTIES__RD_DBI_EN_RMASK 0x1
#define EMC_DDR_PROPERTIES__RD_DBI_EN_MASK  0x2000000
#define EMC_DDR_PROPERTIES__RD_DBI_EN_FIELD 25,25


/*
 * DDR_DEBUG.
 * SDRAM device and DIMM Debug Modes Control
 */
#define EMC_DDR_DEBUG 0x010c
#define EMC_DDR_DEBUG__LENGTH 0x0001

#define EMC_DDR_DEBUG__PARITY_EN_SHIFT 0
#define EMC_DDR_DEBUG__PARITY_EN_WIDTH 1
#define EMC_DDR_DEBUG__PARITY_EN_RESET_VAL 0
#define EMC_DDR_DEBUG__PARITY_EN_RMASK 0x1
#define EMC_DDR_DEBUG__PARITY_EN_MASK  0x1
#define EMC_DDR_DEBUG__PARITY_EN_FIELD 0,0

#define EMC_DDR_DEBUG__CRC_EN_SHIFT 1
#define EMC_DDR_DEBUG__CRC_EN_WIDTH 1
#define EMC_DDR_DEBUG__CRC_EN_RESET_VAL 0
#define EMC_DDR_DEBUG__CRC_EN_RMASK 0x1
#define EMC_DDR_DEBUG__CRC_EN_MASK  0x2
#define EMC_DDR_DEBUG__CRC_EN_FIELD 1,1

#define EMC_DDR_DEBUG__PARITY_DELAY_SHIFT 8
#define EMC_DDR_DEBUG__PARITY_DELAY_WIDTH 1
#define EMC_DDR_DEBUG__PARITY_DELAY_RESET_VAL 0
#define EMC_DDR_DEBUG__PARITY_DELAY_RMASK 0x1
#define EMC_DDR_DEBUG__PARITY_DELAY_MASK  0x100
#define EMC_DDR_DEBUG__PARITY_DELAY_FIELD 8,8

#define EMC_DDR_DEBUG__ALERT_CLEAR_SHIFT 16
#define EMC_DDR_DEBUG__ALERT_CLEAR_WIDTH 1
#define EMC_DDR_DEBUG__ALERT_CLEAR_RESET_VAL 0
#define EMC_DDR_DEBUG__ALERT_CLEAR_RMASK 0x1
#define EMC_DDR_DEBUG__ALERT_CLEAR_MASK  0x10000
#define EMC_DDR_DEBUG__ALERT_CLEAR_FIELD 16,16


/*
 * ACTIVE_RANKS.
 * Physical and Logical Rank active bitmaps
 */
#define EMC_ACTIVE_RANKS 0x010d
#define EMC_ACTIVE_RANKS__LENGTH 0x0001

#define EMC_ACTIVE_RANKS__PR_BM_0_SHIFT 0
#define EMC_ACTIVE_RANKS__PR_BM_0_WIDTH 8
#define EMC_ACTIVE_RANKS__PR_BM_0_RESET_VAL 1
#define EMC_ACTIVE_RANKS__PR_BM_0_RMASK 0xff
#define EMC_ACTIVE_RANKS__PR_BM_0_MASK  0xff
#define EMC_ACTIVE_RANKS__PR_BM_0_FIELD 0,7

#define EMC_ACTIVE_RANKS__PR_BM_1_SHIFT 8
#define EMC_ACTIVE_RANKS__PR_BM_1_WIDTH 8
#define EMC_ACTIVE_RANKS__PR_BM_1_RESET_VAL 0
#define EMC_ACTIVE_RANKS__PR_BM_1_RMASK 0xff
#define EMC_ACTIVE_RANKS__PR_BM_1_MASK  0xff00
#define EMC_ACTIVE_RANKS__PR_BM_1_FIELD 8,15

#define EMC_ACTIVE_RANKS__PR_BM_2_SHIFT 16
#define EMC_ACTIVE_RANKS__PR_BM_2_WIDTH 8
#define EMC_ACTIVE_RANKS__PR_BM_2_RESET_VAL 0
#define EMC_ACTIVE_RANKS__PR_BM_2_RMASK 0xff
#define EMC_ACTIVE_RANKS__PR_BM_2_MASK  0xff0000
#define EMC_ACTIVE_RANKS__PR_BM_2_FIELD 16,23

#define EMC_ACTIVE_RANKS__PR_BM_3_SHIFT 24
#define EMC_ACTIVE_RANKS__PR_BM_3_WIDTH 8
#define EMC_ACTIVE_RANKS__PR_BM_3_RESET_VAL 0
#define EMC_ACTIVE_RANKS__PR_BM_3_RMASK 0xff
#define EMC_ACTIVE_RANKS__PR_BM_3_MASK  0xff000000
#define EMC_ACTIVE_RANKS__PR_BM_3_FIELD 24,31


/*
 * ALERT_COUNT.
 * Alert Signal width Indication
 */
#define EMC_ALERT_COUNT 0x010f
#define EMC_ALERT_COUNT__LENGTH 0x0001

#define EMC_ALERT_COUNT__VAL_SHIFT 0
#define EMC_ALERT_COUNT__VAL_WIDTH 32
#define EMC_ALERT_COUNT__VAL_RESET_VAL 0
#define EMC_ALERT_COUNT__VAL_RMASK 0xffffffff
#define EMC_ALERT_COUNT__VAL_MASK  0xffffffff
#define EMC_ALERT_COUNT__VAL_FIELD 0,31


/*
 * APB_IFC.
 * APB Interface control and configuration
 */
#define EMC_APB_IFC 0x0110
#define EMC_APB_IFC__LENGTH 0x0001

#define EMC_APB_IFC__CONT_CLK_EN_SHIFT 0
#define EMC_APB_IFC__CONT_CLK_EN_WIDTH 1
#define EMC_APB_IFC__CONT_CLK_EN_RESET_VAL 0
#define EMC_APB_IFC__CONT_CLK_EN_RMASK 0x1
#define EMC_APB_IFC__CONT_CLK_EN_MASK  0x1
#define EMC_APB_IFC__CONT_CLK_EN_FIELD 0,0

#define EMC_APB_IFC__CONT_RST_SHIFT 1
#define EMC_APB_IFC__CONT_RST_WIDTH 1
#define EMC_APB_IFC__CONT_RST_RESET_VAL 1
#define EMC_APB_IFC__CONT_RST_RMASK 0x1
#define EMC_APB_IFC__CONT_RST_MASK  0x2
#define EMC_APB_IFC__CONT_RST_FIELD 1,1

#define EMC_APB_IFC__CONT_READY_EN_SHIFT 4
#define EMC_APB_IFC__CONT_READY_EN_WIDTH 1
#define EMC_APB_IFC__CONT_READY_EN_RESET_VAL 0
#define EMC_APB_IFC__CONT_READY_EN_RMASK 0x1
#define EMC_APB_IFC__CONT_READY_EN_MASK  0x10
#define EMC_APB_IFC__CONT_READY_EN_FIELD 4,4

#define EMC_APB_IFC__CONT_RL_CFG_SHIFT 24
#define EMC_APB_IFC__CONT_RL_CFG_WIDTH 4
#define EMC_APB_IFC__CONT_RL_CFG_RESET_VAL 0
#define EMC_APB_IFC__CONT_RL_CFG_RMASK 0xf
#define EMC_APB_IFC__CONT_RL_CFG_MASK  0xf000000
#define EMC_APB_IFC__CONT_RL_CFG_FIELD 24,27

#define EMC_APB_IFC__CFG_CLK_DIV_SHIFT 28
#define EMC_APB_IFC__CFG_CLK_DIV_WIDTH 3
#define EMC_APB_IFC__CFG_CLK_DIV_RESET_VAL 0
#define EMC_APB_IFC__CFG_CLK_DIV_RMASK 0x7
#define EMC_APB_IFC__CFG_CLK_DIV_MASK  0x70000000
#define EMC_APB_IFC__CFG_CLK_DIV_FIELD 28,30

#define EMC_APB_IFC__CONT_CLK_DIV_EN_SHIFT 31
#define EMC_APB_IFC__CONT_CLK_DIV_EN_WIDTH 1
#define EMC_APB_IFC__CONT_CLK_DIV_EN_RESET_VAL 0
#define EMC_APB_IFC__CONT_CLK_DIV_EN_RMASK 0x1
#define EMC_APB_IFC__CONT_CLK_DIV_EN_MASK  0x80000000
#define EMC_APB_IFC__CONT_CLK_DIV_EN_FIELD 31,31


/*
 * MC_QUAD_MODE.
 * Control of Internal CS Routing to CS/CID and ODT device outputs for Quad
 * Physical Rank Support in a Single RDIMM/LRDIMM
 */
#define EMC_MC_QUAD_MODE 0x0112
#define EMC_MC_QUAD_MODE__LENGTH 0x0001

#define EMC_MC_QUAD_MODE__RCD_MODE_SHIFT 0
#define EMC_MC_QUAD_MODE__RCD_MODE_WIDTH 2
#define EMC_MC_QUAD_MODE__RCD_MODE_RESET_VAL 0
#define EMC_MC_QUAD_MODE__RCD_MODE_RMASK 0x3
#define EMC_MC_QUAD_MODE__RCD_MODE_MASK  0x3
#define EMC_MC_QUAD_MODE__RCD_MODE_FIELD 0,1

#define EMC_MC_QUAD_MODE__C0_OVER_C2_SHIFT 4
#define EMC_MC_QUAD_MODE__C0_OVER_C2_WIDTH 1
#define EMC_MC_QUAD_MODE__C0_OVER_C2_RESET_VAL 0
#define EMC_MC_QUAD_MODE__C0_OVER_C2_RMASK 0x1
#define EMC_MC_QUAD_MODE__C0_OVER_C2_MASK  0x10
#define EMC_MC_QUAD_MODE__C0_OVER_C2_FIELD 4,4

#define EMC_MC_QUAD_MODE__ODT_QUAD_MODE_SHIFT 8
#define EMC_MC_QUAD_MODE__ODT_QUAD_MODE_WIDTH 1
#define EMC_MC_QUAD_MODE__ODT_QUAD_MODE_RESET_VAL 0
#define EMC_MC_QUAD_MODE__ODT_QUAD_MODE_RMASK 0x1
#define EMC_MC_QUAD_MODE__ODT_QUAD_MODE_MASK  0x100
#define EMC_MC_QUAD_MODE__ODT_QUAD_MODE_FIELD 8,8


/*
 * MC_DDR_IF.
 * Holds parameters refers to the interface between the MC and the physical
 * interface
 */
#define EMC_MC_DDR_IF 0x0116
#define EMC_MC_DDR_IF__LENGTH 0x0001

#define EMC_MC_DDR_IF__MC_EN_SHIFT 0
#define EMC_MC_DDR_IF__MC_EN_WIDTH 1
#define EMC_MC_DDR_IF__MC_EN_RESET_VAL 0
#define EMC_MC_DDR_IF__MC_EN_RMASK 0x1
#define EMC_MC_DDR_IF__MC_EN_MASK  0x1
#define EMC_MC_DDR_IF__MC_EN_FIELD 0,0

#define EMC_MC_DDR_IF__PPR_EN_SHIFT 4
#define EMC_MC_DDR_IF__PPR_EN_WIDTH 1
#define EMC_MC_DDR_IF__PPR_EN_RESET_VAL 0
#define EMC_MC_DDR_IF__PPR_EN_RMASK 0x1
#define EMC_MC_DDR_IF__PPR_EN_MASK  0x10
#define EMC_MC_DDR_IF__PPR_EN_FIELD 4,4

#define EMC_MC_DDR_IF__CALIB_EN_SHIFT 8
#define EMC_MC_DDR_IF__CALIB_EN_WIDTH 1
#define EMC_MC_DDR_IF__CALIB_EN_RESET_VAL 0
#define EMC_MC_DDR_IF__CALIB_EN_RMASK 0x1
#define EMC_MC_DDR_IF__CALIB_EN_MASK  0x100
#define EMC_MC_DDR_IF__CALIB_EN_FIELD 8,8

#define EMC_MC_DDR_IF__REF_EN_SHIFT 16
#define EMC_MC_DDR_IF__REF_EN_WIDTH 1
#define EMC_MC_DDR_IF__REF_EN_RESET_VAL 0
#define EMC_MC_DDR_IF__REF_EN_RMASK 0x1
#define EMC_MC_DDR_IF__REF_EN_MASK  0x10000
#define EMC_MC_DDR_IF__REF_EN_FIELD 16,16

#define EMC_MC_DDR_IF__REF_SWITCH_SHIFT 18
#define EMC_MC_DDR_IF__REF_SWITCH_WIDTH 1
#define EMC_MC_DDR_IF__REF_SWITCH_RESET_VAL 0
#define EMC_MC_DDR_IF__REF_SWITCH_RMASK 0x1
#define EMC_MC_DDR_IF__REF_SWITCH_MASK  0x40000
#define EMC_MC_DDR_IF__REF_SWITCH_FIELD 18,18

#define EMC_MC_DDR_IF__REF_EXPED_SHIFT 24
#define EMC_MC_DDR_IF__REF_EXPED_WIDTH 1
#define EMC_MC_DDR_IF__REF_EXPED_RESET_VAL 0
#define EMC_MC_DDR_IF__REF_EXPED_RMASK 0x1
#define EMC_MC_DDR_IF__REF_EXPED_MASK  0x1000000
#define EMC_MC_DDR_IF__REF_EXPED_FIELD 24,24

#define EMC_MC_DDR_IF__STAT_CNTR_EN_SHIFT 30
#define EMC_MC_DDR_IF__STAT_CNTR_EN_WIDTH 1
#define EMC_MC_DDR_IF__STAT_CNTR_EN_RESET_VAL 0
#define EMC_MC_DDR_IF__STAT_CNTR_EN_RMASK 0x1
#define EMC_MC_DDR_IF__STAT_CNTR_EN_MASK  0x40000000
#define EMC_MC_DDR_IF__STAT_CNTR_EN_FIELD 30,30

#define EMC_MC_DDR_IF__REF_HOT_UPDATE_SHIFT 31
#define EMC_MC_DDR_IF__REF_HOT_UPDATE_WIDTH 1
#define EMC_MC_DDR_IF__REF_HOT_UPDATE_RESET_VAL 0
#define EMC_MC_DDR_IF__REF_HOT_UPDATE_RMASK 0x1
#define EMC_MC_DDR_IF__REF_HOT_UPDATE_MASK  0x80000000
#define EMC_MC_DDR_IF__REF_HOT_UPDATE_FIELD 31,31


/*
 * MC_MI_IF.
 * Holds parameters refers to the mc mi interface
 */
#define EMC_MC_MI_IF 0x0117
#define EMC_MC_MI_IF__LENGTH 0x0001

#define EMC_MC_MI_IF__ACK_ADDR_GAP_SHIFT 0
#define EMC_MC_MI_IF__ACK_ADDR_GAP_WIDTH 3
#define EMC_MC_MI_IF__ACK_ADDR_GAP_RESET_VAL 4
#define EMC_MC_MI_IF__ACK_ADDR_GAP_RMASK 0x7
#define EMC_MC_MI_IF__ACK_ADDR_GAP_MASK  0x7
#define EMC_MC_MI_IF__ACK_ADDR_GAP_FIELD 0,2

#define EMC_MC_MI_IF__ACK_DATA_GAP_SHIFT 4
#define EMC_MC_MI_IF__ACK_DATA_GAP_WIDTH 3
#define EMC_MC_MI_IF__ACK_DATA_GAP_RESET_VAL 3
#define EMC_MC_MI_IF__ACK_DATA_GAP_RMASK 0x7
#define EMC_MC_MI_IF__ACK_DATA_GAP_MASK  0x70
#define EMC_MC_MI_IF__ACK_DATA_GAP_FIELD 4,6

#define EMC_MC_MI_IF__RET_DATA_GAP_SHIFT 8
#define EMC_MC_MI_IF__RET_DATA_GAP_WIDTH 4
#define EMC_MC_MI_IF__RET_DATA_GAP_RESET_VAL 3
#define EMC_MC_MI_IF__RET_DATA_GAP_RMASK 0xf
#define EMC_MC_MI_IF__RET_DATA_GAP_MASK  0xf00
#define EMC_MC_MI_IF__RET_DATA_GAP_FIELD 8,11

#define EMC_MC_MI_IF__BANK_RDY_PRE_SHIFT 12
#define EMC_MC_MI_IF__BANK_RDY_PRE_WIDTH 4
#define EMC_MC_MI_IF__BANK_RDY_PRE_RESET_VAL 10
#define EMC_MC_MI_IF__BANK_RDY_PRE_RMASK 0xf
#define EMC_MC_MI_IF__BANK_RDY_PRE_MASK  0xf000
#define EMC_MC_MI_IF__BANK_RDY_PRE_FIELD 12,15

#define EMC_MC_MI_IF__MC_HIGHEST_BANK_SHIFT 28
#define EMC_MC_MI_IF__MC_HIGHEST_BANK_WIDTH 4
#define EMC_MC_MI_IF__MC_HIGHEST_BANK_RESET_VAL 7
#define EMC_MC_MI_IF__MC_HIGHEST_BANK_RMASK 0xf
#define EMC_MC_MI_IF__MC_HIGHEST_BANK_MASK  0xf0000000
#define EMC_MC_MI_IF__MC_HIGHEST_BANK_FIELD 28,31


/*
 * ARB_ALGORITHM.
 * Arbiter Algorithm Mode Register
 */
#define EMC_ARB_ALGORITHM 0x0118
#define EMC_ARB_ALGORITHM__LENGTH 0x0001

#define EMC_ARB_ALGORITHM__MODE_SHIFT 0
#define EMC_ARB_ALGORITHM__MODE_WIDTH 1
#define EMC_ARB_ALGORITHM__MODE_RESET_VAL 1
#define EMC_ARB_ALGORITHM__MODE_RMASK 0x1
#define EMC_ARB_ALGORITHM__MODE_MASK  0x1
#define EMC_ARB_ALGORITHM__MODE_FIELD 0,0


/*
 * ODT_WR.
 * ODT Write Configuration
 */
#define EMC_ODT_WR 0x0119
#define EMC_ODT_WR__LENGTH 0x0001

#define EMC_ODT_WR__BM_PR_0_SHIFT 0
#define EMC_ODT_WR__BM_PR_0_WIDTH 4
#define EMC_ODT_WR__BM_PR_0_RESET_VAL 1
#define EMC_ODT_WR__BM_PR_0_RMASK 0xf
#define EMC_ODT_WR__BM_PR_0_MASK  0xf
#define EMC_ODT_WR__BM_PR_0_FIELD 0,3

#define EMC_ODT_WR__BM_PR_1_SHIFT 4
#define EMC_ODT_WR__BM_PR_1_WIDTH 4
#define EMC_ODT_WR__BM_PR_1_RESET_VAL 2
#define EMC_ODT_WR__BM_PR_1_RMASK 0xf
#define EMC_ODT_WR__BM_PR_1_MASK  0xf0
#define EMC_ODT_WR__BM_PR_1_FIELD 4,7

#define EMC_ODT_WR__BM_PR_2_SHIFT 8
#define EMC_ODT_WR__BM_PR_2_WIDTH 4
#define EMC_ODT_WR__BM_PR_2_RESET_VAL 4
#define EMC_ODT_WR__BM_PR_2_RMASK 0xf
#define EMC_ODT_WR__BM_PR_2_MASK  0xf00
#define EMC_ODT_WR__BM_PR_2_FIELD 8,11

#define EMC_ODT_WR__BM_PR_3_SHIFT 12
#define EMC_ODT_WR__BM_PR_3_WIDTH 4
#define EMC_ODT_WR__BM_PR_3_RESET_VAL 8
#define EMC_ODT_WR__BM_PR_3_RMASK 0xf
#define EMC_ODT_WR__BM_PR_3_MASK  0xf000
#define EMC_ODT_WR__BM_PR_3_FIELD 12,15

#define EMC_ODT_WR__DURATION_SHIFT 16
#define EMC_ODT_WR__DURATION_WIDTH 4
#define EMC_ODT_WR__DURATION_RESET_VAL 6
#define EMC_ODT_WR__DURATION_RMASK 0xf
#define EMC_ODT_WR__DURATION_MASK  0xf0000
#define EMC_ODT_WR__DURATION_FIELD 16,19


/*
 * ODT_RD.
 * ODT Read Configuration
 */
#define EMC_ODT_RD 0x011a
#define EMC_ODT_RD__LENGTH 0x0001

#define EMC_ODT_RD__BM_PR_0_SHIFT 0
#define EMC_ODT_RD__BM_PR_0_WIDTH 4
#define EMC_ODT_RD__BM_PR_0_RESET_VAL 0
#define EMC_ODT_RD__BM_PR_0_RMASK 0xf
#define EMC_ODT_RD__BM_PR_0_MASK  0xf
#define EMC_ODT_RD__BM_PR_0_FIELD 0,3

#define EMC_ODT_RD__BM_PR_1_SHIFT 4
#define EMC_ODT_RD__BM_PR_1_WIDTH 4
#define EMC_ODT_RD__BM_PR_1_RESET_VAL 0
#define EMC_ODT_RD__BM_PR_1_RMASK 0xf
#define EMC_ODT_RD__BM_PR_1_MASK  0xf0
#define EMC_ODT_RD__BM_PR_1_FIELD 4,7

#define EMC_ODT_RD__BM_PR_2_SHIFT 8
#define EMC_ODT_RD__BM_PR_2_WIDTH 4
#define EMC_ODT_RD__BM_PR_2_RESET_VAL 0
#define EMC_ODT_RD__BM_PR_2_RMASK 0xf
#define EMC_ODT_RD__BM_PR_2_MASK  0xf00
#define EMC_ODT_RD__BM_PR_2_FIELD 8,11

#define EMC_ODT_RD__BM_PR_3_SHIFT 12
#define EMC_ODT_RD__BM_PR_3_WIDTH 4
#define EMC_ODT_RD__BM_PR_3_RESET_VAL 0
#define EMC_ODT_RD__BM_PR_3_RMASK 0xf
#define EMC_ODT_RD__BM_PR_3_MASK  0xf000
#define EMC_ODT_RD__BM_PR_3_FIELD 12,15

#define EMC_ODT_RD__DURATION_SHIFT 16
#define EMC_ODT_RD__DURATION_WIDTH 4
#define EMC_ODT_RD__DURATION_RESET_VAL 6
#define EMC_ODT_RD__DURATION_RMASK 0xf
#define EMC_ODT_RD__DURATION_MASK  0xf0000
#define EMC_ODT_RD__DURATION_FIELD 16,19

#define EMC_ODT_RD__DELAY_SHIFT 20
#define EMC_ODT_RD__DELAY_WIDTH 5
#define EMC_ODT_RD__DELAY_RESET_VAL 4
#define EMC_ODT_RD__DELAY_RMASK 0x1f
#define EMC_ODT_RD__DELAY_MASK  0x1f00000
#define EMC_ODT_RD__DELAY_FIELD 20,24


/*
 * EXT_MC_LATENCY.
 * Describe the external latency (phy and board delay)
 */
#define EMC_EXT_MC_LATENCY 0x011b
#define EMC_EXT_MC_LATENCY__LENGTH 0x0001

#define EMC_EXT_MC_LATENCY__EXT_MC_RL_SHIFT 0
#define EMC_EXT_MC_LATENCY__EXT_MC_RL_WIDTH 8
#define EMC_EXT_MC_LATENCY__EXT_MC_RL_RESET_VAL 0
#define EMC_EXT_MC_LATENCY__EXT_MC_RL_RMASK 0xff
#define EMC_EXT_MC_LATENCY__EXT_MC_RL_MASK  0xff
#define EMC_EXT_MC_LATENCY__EXT_MC_RL_FIELD 0,7


/*
 * MC_ADDR_MIRROR.
 * enable/disable the address mirroring feature
 */
#define EMC_MC_ADDR_MIRROR 0x011d
#define EMC_MC_ADDR_MIRROR__LENGTH 0x0001

#define EMC_MC_ADDR_MIRROR__ENABLE_SHIFT 0
#define EMC_MC_ADDR_MIRROR__ENABLE_WIDTH 4
#define EMC_MC_ADDR_MIRROR__ENABLE_RESET_VAL 0
#define EMC_MC_ADDR_MIRROR__ENABLE_RMASK 0xf
#define EMC_MC_ADDR_MIRROR__ENABLE_MASK  0xf
#define EMC_MC_ADDR_MIRROR__ENABLE_FIELD 0,3


/*
 * PHY_CTRL.
 * Holds parameters refers to the interface between the MC and the physical
 * interface
 */
#define EMC_PHY_CTRL 0x0120
#define EMC_PHY_CTRL__LENGTH 0x0001

#define EMC_PHY_CTRL__CK_EN_SHIFT 0
#define EMC_PHY_CTRL__CK_EN_WIDTH 4
#define EMC_PHY_CTRL__CK_EN_RESET_VAL 0
#define EMC_PHY_CTRL__CK_EN_RMASK 0xf
#define EMC_PHY_CTRL__CK_EN_MASK  0xf
#define EMC_PHY_CTRL__CK_EN_FIELD 0,3

#define EMC_PHY_CTRL__DDR_SELF_REFRESH_SHIFT 4
#define EMC_PHY_CTRL__DDR_SELF_REFRESH_WIDTH 4
#define EMC_PHY_CTRL__DDR_SELF_REFRESH_RESET_VAL 0
#define EMC_PHY_CTRL__DDR_SELF_REFRESH_RMASK 0xf
#define EMC_PHY_CTRL__DDR_SELF_REFRESH_MASK  0xf0
#define EMC_PHY_CTRL__DDR_SELF_REFRESH_FIELD 4,7

#define EMC_PHY_CTRL__SRAM_ACCESS_SEL_SHIFT 12
#define EMC_PHY_CTRL__SRAM_ACCESS_SEL_WIDTH 1
#define EMC_PHY_CTRL__SRAM_ACCESS_SEL_RESET_VAL 0
#define EMC_PHY_CTRL__SRAM_ACCESS_SEL_RMASK 0x1
#define EMC_PHY_CTRL__SRAM_ACCESS_SEL_MASK  0x1000
#define EMC_PHY_CTRL__SRAM_ACCESS_SEL_FIELD 12,12


/*
 * PHY_UPDATE.
 * phy calibration parameters
 */
#define EMC_PHY_UPDATE 0x0121
#define EMC_PHY_UPDATE__LENGTH 0x0001

#define EMC_PHY_UPDATE__MC_EN_SHIFT 0
#define EMC_PHY_UPDATE__MC_EN_WIDTH 1
#define EMC_PHY_UPDATE__MC_EN_RESET_VAL 1
#define EMC_PHY_UPDATE__MC_EN_RMASK 0x1
#define EMC_PHY_UPDATE__MC_EN_MASK  0x1
#define EMC_PHY_UPDATE__MC_EN_FIELD 0,0

#define EMC_PHY_UPDATE__PHY_EN_SHIFT 1
#define EMC_PHY_UPDATE__PHY_EN_WIDTH 1
#define EMC_PHY_UPDATE__PHY_EN_RESET_VAL 0
#define EMC_PHY_UPDATE__PHY_EN_RMASK 0x1
#define EMC_PHY_UPDATE__PHY_EN_MASK  0x2
#define EMC_PHY_UPDATE__PHY_EN_FIELD 1,1

#define EMC_PHY_UPDATE__MC_TYPE_SHIFT 4
#define EMC_PHY_UPDATE__MC_TYPE_WIDTH 1
#define EMC_PHY_UPDATE__MC_TYPE_RESET_VAL 0
#define EMC_PHY_UPDATE__MC_TYPE_RMASK 0x1
#define EMC_PHY_UPDATE__MC_TYPE_MASK  0x10
#define EMC_PHY_UPDATE__MC_TYPE_FIELD 4,4

#define EMC_PHY_UPDATE__MC_DELAY_SHIFT 8
#define EMC_PHY_UPDATE__MC_DELAY_WIDTH 4
#define EMC_PHY_UPDATE__MC_DELAY_RESET_VAL 8
#define EMC_PHY_UPDATE__MC_DELAY_RMASK 0xf
#define EMC_PHY_UPDATE__MC_DELAY_MASK  0xf00
#define EMC_PHY_UPDATE__MC_DELAY_FIELD 8,11

#define EMC_PHY_UPDATE__MC_MAXPW_SHIFT 12
#define EMC_PHY_UPDATE__MC_MAXPW_WIDTH 7
#define EMC_PHY_UPDATE__MC_MAXPW_RESET_VAL 47
#define EMC_PHY_UPDATE__MC_MAXPW_RMASK 0x7f
#define EMC_PHY_UPDATE__MC_MAXPW_MASK  0x7f000
#define EMC_PHY_UPDATE__MC_MAXPW_FIELD 12,18

#define EMC_PHY_UPDATE__PHY_ACK_DELAY_SHIFT 20
#define EMC_PHY_UPDATE__PHY_ACK_DELAY_WIDTH 4
#define EMC_PHY_UPDATE__PHY_ACK_DELAY_RESET_VAL 8
#define EMC_PHY_UPDATE__PHY_ACK_DELAY_RMASK 0xf
#define EMC_PHY_UPDATE__PHY_ACK_DELAY_MASK  0xf00000
#define EMC_PHY_UPDATE__PHY_ACK_DELAY_FIELD 20,23


/*
 * PHYUPD_CNTR.
 * This register holds two counters. One for PHY_UPD requests and the other
 * for PHY_UPD acknowledges. The counter is enabled only if PHY_EN is enabled
 * (Reg ID: 0x121 bit 1). The counters are reset on read.
 */
#define EMC_PHYUPD_CNTR 0x0122
#define EMC_PHYUPD_CNTR__LENGTH 0x0001

#define EMC_PHYUPD_CNTR__REQ_SHIFT 0
#define EMC_PHYUPD_CNTR__REQ_WIDTH 16
#define EMC_PHYUPD_CNTR__REQ_RESET_VAL 0
#define EMC_PHYUPD_CNTR__REQ_RMASK 0xffff
#define EMC_PHYUPD_CNTR__REQ_MASK  0xffff
#define EMC_PHYUPD_CNTR__REQ_FIELD 0,15

#define EMC_PHYUPD_CNTR__ACK_SHIFT 16
#define EMC_PHYUPD_CNTR__ACK_WIDTH 16
#define EMC_PHYUPD_CNTR__ACK_RESET_VAL 0
#define EMC_PHYUPD_CNTR__ACK_RMASK 0xffff
#define EMC_PHYUPD_CNTR__ACK_MASK  0xffff0000
#define EMC_PHYUPD_CNTR__ACK_FIELD 16,31


/*
 * WRD_LVL_MODES.
 * Write and Read Leveling operational modes
 */
#define EMC_WRD_LVL_MODES 0x0124
#define EMC_WRD_LVL_MODES__LENGTH 0x0001

#define EMC_WRD_LVL_MODES__WLM_ODT_EN_SHIFT 0
#define EMC_WRD_LVL_MODES__WLM_ODT_EN_WIDTH 4
#define EMC_WRD_LVL_MODES__WLM_ODT_EN_RESET_VAL 0
#define EMC_WRD_LVL_MODES__WLM_ODT_EN_RMASK 0xf
#define EMC_WRD_LVL_MODES__WLM_ODT_EN_MASK  0xf
#define EMC_WRD_LVL_MODES__WLM_ODT_EN_FIELD 0,3

#define EMC_WRD_LVL_MODES__MPR_MODE_SHIFT 8
#define EMC_WRD_LVL_MODES__MPR_MODE_WIDTH 4
#define EMC_WRD_LVL_MODES__MPR_MODE_RESET_VAL 0
#define EMC_WRD_LVL_MODES__MPR_MODE_RMASK 0xf
#define EMC_WRD_LVL_MODES__MPR_MODE_MASK  0xf00
#define EMC_WRD_LVL_MODES__MPR_MODE_FIELD 8,11

#define EMC_WRD_LVL_MODES__AP_DIS_SHIFT 16
#define EMC_WRD_LVL_MODES__AP_DIS_WIDTH 1
#define EMC_WRD_LVL_MODES__AP_DIS_RESET_VAL 0
#define EMC_WRD_LVL_MODES__AP_DIS_RMASK 0x1
#define EMC_WRD_LVL_MODES__AP_DIS_MASK  0x10000
#define EMC_WRD_LVL_MODES__AP_DIS_FIELD 16,16


/*
 * WR_LVL_BL_DELAY.
 * Write Leveling Per Byte lane Delay control
 */
#define EMC_WR_LVL_BL_DELAY 0x0125
#define EMC_WR_LVL_BL_DELAY__LENGTH 0x0001

#define EMC_WR_LVL_BL_DELAY__BL_WLD_CFG_SHIFT 0
#define EMC_WR_LVL_BL_DELAY__BL_WLD_CFG_WIDTH 18
#define EMC_WR_LVL_BL_DELAY__BL_WLD_CFG_RESET_VAL 0
#define EMC_WR_LVL_BL_DELAY__BL_WLD_CFG_RMASK 0x3ffff
#define EMC_WR_LVL_BL_DELAY__BL_WLD_CFG_MASK  0x3ffff
#define EMC_WR_LVL_BL_DELAY__BL_WLD_CFG_FIELD 0,17


/*
 * RD_LVL_BL_DELAY.
 * Read Leveling Per Byte lane Delay control
 */
#define EMC_RD_LVL_BL_DELAY 0x0126
#define EMC_RD_LVL_BL_DELAY__LENGTH 0x0001

#define EMC_RD_LVL_BL_DELAY__BL_RLD_CFG_SHIFT 0
#define EMC_RD_LVL_BL_DELAY__BL_RLD_CFG_WIDTH 18
#define EMC_RD_LVL_BL_DELAY__BL_RLD_CFG_RESET_VAL 0
#define EMC_RD_LVL_BL_DELAY__BL_RLD_CFG_RMASK 0x3ffff
#define EMC_RD_LVL_BL_DELAY__BL_RLD_CFG_MASK  0x3ffff
#define EMC_RD_LVL_BL_DELAY__BL_RLD_CFG_FIELD 0,17


/*
 * TRACE_TRANS_PARAMS.
 * parameters to count MC transactions
 */
#define EMC_TRACE_TRANS_PARAMS 0x012a
#define EMC_TRACE_TRANS_PARAMS__LENGTH 0x0001

#define EMC_TRACE_TRANS_PARAMS__CMD_SHIFT 0
#define EMC_TRACE_TRANS_PARAMS__CMD_WIDTH 2
#define EMC_TRACE_TRANS_PARAMS__CMD_RESET_VAL 0
#define EMC_TRACE_TRANS_PARAMS__CMD_RMASK 0x3
#define EMC_TRACE_TRANS_PARAMS__CMD_MASK  0x3
#define EMC_TRACE_TRANS_PARAMS__CMD_FIELD 0,1

#define EMC_TRACE_TRANS_PARAMS__LOGICAL_RANK_SHIFT 2
#define EMC_TRACE_TRANS_PARAMS__LOGICAL_RANK_WIDTH 3
#define EMC_TRACE_TRANS_PARAMS__LOGICAL_RANK_RESET_VAL 0
#define EMC_TRACE_TRANS_PARAMS__LOGICAL_RANK_RMASK 0x7
#define EMC_TRACE_TRANS_PARAMS__LOGICAL_RANK_MASK  0x1c
#define EMC_TRACE_TRANS_PARAMS__LOGICAL_RANK_FIELD 2,4

#define EMC_TRACE_TRANS_PARAMS__PACKAGE_RANK_SHIFT 5
#define EMC_TRACE_TRANS_PARAMS__PACKAGE_RANK_WIDTH 3
#define EMC_TRACE_TRANS_PARAMS__PACKAGE_RANK_RESET_VAL 0
#define EMC_TRACE_TRANS_PARAMS__PACKAGE_RANK_RMASK 0x7
#define EMC_TRACE_TRANS_PARAMS__PACKAGE_RANK_MASK  0xe0
#define EMC_TRACE_TRANS_PARAMS__PACKAGE_RANK_FIELD 5,7

#define EMC_TRACE_TRANS_PARAMS__BANK_SHIFT 8
#define EMC_TRACE_TRANS_PARAMS__BANK_WIDTH 5
#define EMC_TRACE_TRANS_PARAMS__BANK_RESET_VAL 0
#define EMC_TRACE_TRANS_PARAMS__BANK_RMASK 0x1f
#define EMC_TRACE_TRANS_PARAMS__BANK_MASK  0x1f00
#define EMC_TRACE_TRANS_PARAMS__BANK_FIELD 8,12

#define EMC_TRACE_TRANS_PARAMS__LOW_STREAMID_SHIFT 16
#define EMC_TRACE_TRANS_PARAMS__LOW_STREAMID_WIDTH 8
#define EMC_TRACE_TRANS_PARAMS__LOW_STREAMID_RESET_VAL 0
#define EMC_TRACE_TRANS_PARAMS__LOW_STREAMID_RMASK 0xff
#define EMC_TRACE_TRANS_PARAMS__LOW_STREAMID_MASK  0xff0000
#define EMC_TRACE_TRANS_PARAMS__LOW_STREAMID_FIELD 16,23

#define EMC_TRACE_TRANS_PARAMS__HIGH_STREAMID_SHIFT 24
#define EMC_TRACE_TRANS_PARAMS__HIGH_STREAMID_WIDTH 8
#define EMC_TRACE_TRANS_PARAMS__HIGH_STREAMID_RESET_VAL 0
#define EMC_TRACE_TRANS_PARAMS__HIGH_STREAMID_RMASK 0xff
#define EMC_TRACE_TRANS_PARAMS__HIGH_STREAMID_MASK  0xff000000
#define EMC_TRACE_TRANS_PARAMS__HIGH_STREAMID_FIELD 24,31


/*
 * TRACE_TRANS_CNTR.
 * The statistical parameters resides on register 0x2A. the enable reside on
 * register 0x16
 */
#define EMC_TRACE_TRANS_CNTR 0x012b
#define EMC_TRACE_TRANS_CNTR__LENGTH 0x0001

#define EMC_TRACE_TRANS_CNTR__VAL_SHIFT 0
#define EMC_TRACE_TRANS_CNTR__VAL_WIDTH 32
#define EMC_TRACE_TRANS_CNTR__VAL_RESET_VAL 0
#define EMC_TRACE_TRANS_CNTR__VAL_RMASK 0xffffffff
#define EMC_TRACE_TRANS_CNTR__VAL_MASK  0xffffffff
#define EMC_TRACE_TRANS_CNTR__VAL_FIELD 0,31


/*
 * DDR_ERR_INJ.
 * SDRAM device and DIMM Debug Modes Error Injection Control
 */
#define EMC_DDR_ERR_INJ 0x0130
#define EMC_DDR_ERR_INJ__LENGTH 0x0001

#define EMC_DDR_ERR_INJ__CRC_ERROR_BMP_SHIFT 0
#define EMC_DDR_ERR_INJ__CRC_ERROR_BMP_WIDTH 18
#define EMC_DDR_ERR_INJ__CRC_ERROR_BMP_RESET_VAL 0
#define EMC_DDR_ERR_INJ__CRC_ERROR_BMP_RMASK 0x3ffff
#define EMC_DDR_ERR_INJ__CRC_ERROR_BMP_MASK  0x3ffff
#define EMC_DDR_ERR_INJ__CRC_ERROR_BMP_FIELD 0,17

#define EMC_DDR_ERR_INJ__CRC_ERROR_SHIFT 24
#define EMC_DDR_ERR_INJ__CRC_ERROR_WIDTH 1
#define EMC_DDR_ERR_INJ__CRC_ERROR_RESET_VAL 0
#define EMC_DDR_ERR_INJ__CRC_ERROR_RMASK 0x1
#define EMC_DDR_ERR_INJ__CRC_ERROR_MASK  0x1000000
#define EMC_DDR_ERR_INJ__CRC_ERROR_FIELD 24,24

#define EMC_DDR_ERR_INJ__PARITY_ERR_SHIFT 28
#define EMC_DDR_ERR_INJ__PARITY_ERR_WIDTH 1
#define EMC_DDR_ERR_INJ__PARITY_ERR_RESET_VAL 0
#define EMC_DDR_ERR_INJ__PARITY_ERR_RMASK 0x1
#define EMC_DDR_ERR_INJ__PARITY_ERR_MASK  0x10000000
#define EMC_DDR_ERR_INJ__PARITY_ERR_FIELD 28,28


/*
 * ROW_HAMMER_STAT.
 * Row hammer events counter
 */
#define EMC_ROW_HAMMER_STAT 0x014e
#define EMC_ROW_HAMMER_STAT__LENGTH 0x0001

#define EMC_ROW_HAMMER_STAT__COUNTER_SHIFT 0
#define EMC_ROW_HAMMER_STAT__COUNTER_WIDTH 32
#define EMC_ROW_HAMMER_STAT__COUNTER_RESET_VAL 0
#define EMC_ROW_HAMMER_STAT__COUNTER_RMASK 0xffffffff
#define EMC_ROW_HAMMER_STAT__COUNTER_MASK  0xffffffff
#define EMC_ROW_HAMMER_STAT__COUNTER_FIELD 0,31


/*
 * ROW_HAMMER_STAT2.
 * Row hammer notification and latched address
 */
#define EMC_ROW_HAMMER_STAT2 0x014f
#define EMC_ROW_HAMMER_STAT2__LENGTH 0x0001

#define EMC_ROW_HAMMER_STAT2__ROW_SHIFT 0
#define EMC_ROW_HAMMER_STAT2__ROW_WIDTH 18
#define EMC_ROW_HAMMER_STAT2__ROW_RESET_VAL 0
#define EMC_ROW_HAMMER_STAT2__ROW_RMASK 0x3ffff
#define EMC_ROW_HAMMER_STAT2__ROW_MASK  0x3ffff
#define EMC_ROW_HAMMER_STAT2__ROW_FIELD 0,17

#define EMC_ROW_HAMMER_STAT2__BANK_SHIFT 20
#define EMC_ROW_HAMMER_STAT2__BANK_WIDTH 4
#define EMC_ROW_HAMMER_STAT2__BANK_RESET_VAL 0
#define EMC_ROW_HAMMER_STAT2__BANK_RMASK 0xf
#define EMC_ROW_HAMMER_STAT2__BANK_MASK  0xf00000
#define EMC_ROW_HAMMER_STAT2__BANK_FIELD 20,23

#define EMC_ROW_HAMMER_STAT2__LRANK_SHIFT 24
#define EMC_ROW_HAMMER_STAT2__LRANK_WIDTH 2
#define EMC_ROW_HAMMER_STAT2__LRANK_RESET_VAL 0
#define EMC_ROW_HAMMER_STAT2__LRANK_RMASK 0x3
#define EMC_ROW_HAMMER_STAT2__LRANK_MASK  0x3000000
#define EMC_ROW_HAMMER_STAT2__LRANK_FIELD 24,25

#define EMC_ROW_HAMMER_STAT2__PRANK_SHIFT 26
#define EMC_ROW_HAMMER_STAT2__PRANK_WIDTH 2
#define EMC_ROW_HAMMER_STAT2__PRANK_RESET_VAL 0
#define EMC_ROW_HAMMER_STAT2__PRANK_RMASK 0x3
#define EMC_ROW_HAMMER_STAT2__PRANK_MASK  0xc000000
#define EMC_ROW_HAMMER_STAT2__PRANK_FIELD 26,27

#define EMC_ROW_HAMMER_STAT2__MC_HAMMERED_SHIFT 28
#define EMC_ROW_HAMMER_STAT2__MC_HAMMERED_WIDTH 1
#define EMC_ROW_HAMMER_STAT2__MC_HAMMERED_RESET_VAL 0
#define EMC_ROW_HAMMER_STAT2__MC_HAMMERED_RMASK 0x1
#define EMC_ROW_HAMMER_STAT2__MC_HAMMERED_MASK  0x10000000
#define EMC_ROW_HAMMER_STAT2__MC_HAMMERED_FIELD 28,28


/*
 * ROW_HAMMER_TIME.
 * Row hammer algorithm T times
 */
#define EMC_ROW_HAMMER_TIME 0x0150
#define EMC_ROW_HAMMER_TIME__LENGTH 0x0001

#define EMC_ROW_HAMMER_TIME__T1_SHIFT 0
#define EMC_ROW_HAMMER_TIME__T1_WIDTH 8
#define EMC_ROW_HAMMER_TIME__T1_RESET_VAL 3
#define EMC_ROW_HAMMER_TIME__T1_RMASK 0xff
#define EMC_ROW_HAMMER_TIME__T1_MASK  0xff
#define EMC_ROW_HAMMER_TIME__T1_FIELD 0,7

#define EMC_ROW_HAMMER_TIME__T2_SHIFT 8
#define EMC_ROW_HAMMER_TIME__T2_WIDTH 8
#define EMC_ROW_HAMMER_TIME__T2_RESET_VAL 14
#define EMC_ROW_HAMMER_TIME__T2_RMASK 0xff
#define EMC_ROW_HAMMER_TIME__T2_MASK  0xff00
#define EMC_ROW_HAMMER_TIME__T2_FIELD 8,15

#define EMC_ROW_HAMMER_TIME__T3_SHIFT 16
#define EMC_ROW_HAMMER_TIME__T3_WIDTH 8
#define EMC_ROW_HAMMER_TIME__T3_RESET_VAL 52
#define EMC_ROW_HAMMER_TIME__T3_RMASK 0xff
#define EMC_ROW_HAMMER_TIME__T3_MASK  0xff0000
#define EMC_ROW_HAMMER_TIME__T3_FIELD 16,23


/*
 * ROW_HAMMER_EVENT.
 * Row hammer algorithm E events
 */
#define EMC_ROW_HAMMER_EVENT 0x0151
#define EMC_ROW_HAMMER_EVENT__LENGTH 0x0001

#define EMC_ROW_HAMMER_EVENT__E1_SHIFT 0
#define EMC_ROW_HAMMER_EVENT__E1_WIDTH 8
#define EMC_ROW_HAMMER_EVENT__E1_RESET_VAL 4
#define EMC_ROW_HAMMER_EVENT__E1_RMASK 0xff
#define EMC_ROW_HAMMER_EVENT__E1_MASK  0xff
#define EMC_ROW_HAMMER_EVENT__E1_FIELD 0,7

#define EMC_ROW_HAMMER_EVENT__E2_SHIFT 8
#define EMC_ROW_HAMMER_EVENT__E2_WIDTH 8
#define EMC_ROW_HAMMER_EVENT__E2_RESET_VAL 19
#define EMC_ROW_HAMMER_EVENT__E2_RMASK 0xff
#define EMC_ROW_HAMMER_EVENT__E2_MASK  0xff00
#define EMC_ROW_HAMMER_EVENT__E2_FIELD 8,15

#define EMC_ROW_HAMMER_EVENT__E3_SHIFT 16
#define EMC_ROW_HAMMER_EVENT__E3_WIDTH 8
#define EMC_ROW_HAMMER_EVENT__E3_RESET_VAL 100
#define EMC_ROW_HAMMER_EVENT__E3_RMASK 0xff
#define EMC_ROW_HAMMER_EVENT__E3_MASK  0xff0000
#define EMC_ROW_HAMMER_EVENT__E3_FIELD 16,23

#define EMC_ROW_HAMMER_EVENT__E4_SHIFT 24
#define EMC_ROW_HAMMER_EVENT__E4_WIDTH 8
#define EMC_ROW_HAMMER_EVENT__E4_RESET_VAL 90
#define EMC_ROW_HAMMER_EVENT__E4_RMASK 0xff
#define EMC_ROW_HAMMER_EVENT__E4_MASK  0xff000000
#define EMC_ROW_HAMMER_EVENT__E4_FIELD 24,31


/*
 * ROW_HAMMER.
 * Row hammer algorithm general configurations
 */
#define EMC_ROW_HAMMER 0x0152
#define EMC_ROW_HAMMER__LENGTH 0x0001

#define EMC_ROW_HAMMER__EN_SHIFT 0
#define EMC_ROW_HAMMER__EN_WIDTH 1
#define EMC_ROW_HAMMER__EN_RESET_VAL 0
#define EMC_ROW_HAMMER__EN_RMASK 0x1
#define EMC_ROW_HAMMER__EN_MASK  0x1
#define EMC_ROW_HAMMER__EN_FIELD 0,0

#define EMC_ROW_HAMMER__SWITCH_ADDR_GAP_SHIFT 1
#define EMC_ROW_HAMMER__SWITCH_ADDR_GAP_WIDTH 3
#define EMC_ROW_HAMMER__SWITCH_ADDR_GAP_RESET_VAL 0
#define EMC_ROW_HAMMER__SWITCH_ADDR_GAP_RMASK 0x7
#define EMC_ROW_HAMMER__SWITCH_ADDR_GAP_MASK  0xe
#define EMC_ROW_HAMMER__SWITCH_ADDR_GAP_FIELD 1,3

#define EMC_ROW_HAMMER__SWITCH_ADDR_TH_SHIFT 4
#define EMC_ROW_HAMMER__SWITCH_ADDR_TH_WIDTH 16
#define EMC_ROW_HAMMER__SWITCH_ADDR_TH_RESET_VAL 65290
#define EMC_ROW_HAMMER__SWITCH_ADDR_TH_RMASK 0xffff
#define EMC_ROW_HAMMER__SWITCH_ADDR_TH_MASK  0xffff0
#define EMC_ROW_HAMMER__SWITCH_ADDR_TH_FIELD 4,19

#define EMC_ROW_HAMMER__TRC_OFFSET_SHIFT 20
#define EMC_ROW_HAMMER__TRC_OFFSET_WIDTH 9
#define EMC_ROW_HAMMER__TRC_OFFSET_RESET_VAL 240
#define EMC_ROW_HAMMER__TRC_OFFSET_RMASK 0x1ff
#define EMC_ROW_HAMMER__TRC_OFFSET_MASK  0x1ff00000
#define EMC_ROW_HAMMER__TRC_OFFSET_FIELD 20,28

#define EMC_ROW_HAMMER__RESET_SHIFT 29
#define EMC_ROW_HAMMER__RESET_WIDTH 1
#define EMC_ROW_HAMMER__RESET_RESET_VAL 0
#define EMC_ROW_HAMMER__RESET_RMASK 0x1
#define EMC_ROW_HAMMER__RESET_MASK  0x20000000
#define EMC_ROW_HAMMER__RESET_FIELD 29,29

#define EMC_ROW_HAMMER__ALL_BANKS_SHIFT 30
#define EMC_ROW_HAMMER__ALL_BANKS_WIDTH 1
#define EMC_ROW_HAMMER__ALL_BANKS_RESET_VAL 0
#define EMC_ROW_HAMMER__ALL_BANKS_RMASK 0x1
#define EMC_ROW_HAMMER__ALL_BANKS_MASK  0x40000000
#define EMC_ROW_HAMMER__ALL_BANKS_FIELD 30,30

#define EMC_ROW_HAMMER__CLEAR_STAT_SHIFT 31
#define EMC_ROW_HAMMER__CLEAR_STAT_WIDTH 1
#define EMC_ROW_HAMMER__CLEAR_STAT_RESET_VAL 0
#define EMC_ROW_HAMMER__CLEAR_STAT_RMASK 0x1
#define EMC_ROW_HAMMER__CLEAR_STAT_MASK  0x80000000
#define EMC_ROW_HAMMER__CLEAR_STAT_FIELD 31,31


/*
 * ROW_HAMMER_ADDR_CHECK.
 * the suspicious checked address
 */
#define EMC_ROW_HAMMER_ADDR_CHECK 0x0153
#define EMC_ROW_HAMMER_ADDR_CHECK__LENGTH 0x0001

#define EMC_ROW_HAMMER_ADDR_CHECK__VEC_SHIFT 0
#define EMC_ROW_HAMMER_ADDR_CHECK__VEC_WIDTH 26
#define EMC_ROW_HAMMER_ADDR_CHECK__VEC_RESET_VAL 0
#define EMC_ROW_HAMMER_ADDR_CHECK__VEC_RMASK 0x3ffffff
#define EMC_ROW_HAMMER_ADDR_CHECK__VEC_MASK  0x3ffffff
#define EMC_ROW_HAMMER_ADDR_CHECK__VEC_FIELD 0,25


/*
 * ROW_HAMMER_ADDR_MASK.
 * per address bit counter masking
 */
#define EMC_ROW_HAMMER_ADDR_MASK 0x0154
#define EMC_ROW_HAMMER_ADDR_MASK__LENGTH 0x0001

#define EMC_ROW_HAMMER_ADDR_MASK__VEC_SHIFT 0
#define EMC_ROW_HAMMER_ADDR_MASK__VEC_WIDTH 26
#define EMC_ROW_HAMMER_ADDR_MASK__VEC_RESET_VAL 67108863
#define EMC_ROW_HAMMER_ADDR_MASK__VEC_RMASK 0x3ffffff
#define EMC_ROW_HAMMER_ADDR_MASK__VEC_MASK  0x3ffffff
#define EMC_ROW_HAMMER_ADDR_MASK__VEC_FIELD 0,25


/*
 * ROW_HAMMER_ADDR_CNTR.
 * Row counter enable
 */
#define EMC_ROW_HAMMER_ADDR_CNTR 0x0155
#define EMC_ROW_HAMMER_ADDR_CNTR__LENGTH 0x0001

#define EMC_ROW_HAMMER_ADDR_CNTR__EN_SHIFT 0
#define EMC_ROW_HAMMER_ADDR_CNTR__EN_WIDTH 1
#define EMC_ROW_HAMMER_ADDR_CNTR__EN_RESET_VAL 0
#define EMC_ROW_HAMMER_ADDR_CNTR__EN_RMASK 0x1
#define EMC_ROW_HAMMER_ADDR_CNTR__EN_MASK  0x1
#define EMC_ROW_HAMMER_ADDR_CNTR__EN_FIELD 0,0


/*
 * ROW_HAMMER_STAT3.
 * row_hammer_addr_counter
 */
#define EMC_ROW_HAMMER_STAT3 0x0156
#define EMC_ROW_HAMMER_STAT3__LENGTH 0x0001

#define EMC_ROW_HAMMER_STAT3__COUNTER_SHIFT 0
#define EMC_ROW_HAMMER_STAT3__COUNTER_WIDTH 32
#define EMC_ROW_HAMMER_STAT3__COUNTER_RESET_VAL 0
#define EMC_ROW_HAMMER_STAT3__COUNTER_RMASK 0xffffffff
#define EMC_ROW_HAMMER_STAT3__COUNTER_MASK  0xffffffff
#define EMC_ROW_HAMMER_STAT3__COUNTER_FIELD 0,31


/*
 * DDR_MC_CLOCK_MEASUREMENT.
 * DDR Memory Controller Clocks Counter
 */
#define EMC_DDR_MC_CLOCK_MEASUREMENT 0x015a
#define EMC_DDR_MC_CLOCK_MEASUREMENT__LENGTH 0x0001

#define EMC_DDR_MC_CLOCK_MEASUREMENT__VAL_SHIFT 0
#define EMC_DDR_MC_CLOCK_MEASUREMENT__VAL_WIDTH 32
#define EMC_DDR_MC_CLOCK_MEASUREMENT__VAL_RESET_VAL 0
#define EMC_DDR_MC_CLOCK_MEASUREMENT__VAL_RMASK 0xffffffff
#define EMC_DDR_MC_CLOCK_MEASUREMENT__VAL_MASK  0xffffffff
#define EMC_DDR_MC_CLOCK_MEASUREMENT__VAL_FIELD 0,31


/*
 * RFRSH_TREFI_OFFS.
 * Holds Trefi offsets for each rank (logical and physical)
 */
#define EMC_RFRSH_TREFI_OFFS__FIRST_WORD 0x0160
#define EMC_RFRSH_TREFI_OFFS__LAST_WORD 0x0167
#define EMC_RFRSH_TREFI_OFFS__LENGTH 0x0008
#define EMC_RFRSH_TREFI_OFFS__STRIDE 0x0001

#define EMC_RFRSH_TREFI_OFFS__VAL_0_SHIFT 0
#define EMC_RFRSH_TREFI_OFFS__VAL_0_WIDTH 15
#define EMC_RFRSH_TREFI_OFFS__VAL_0_RESET_VAL 0
#define EMC_RFRSH_TREFI_OFFS__VAL_0_RMASK 0x7fff
#define EMC_RFRSH_TREFI_OFFS__VAL_0_MASK  0x7fff
#define EMC_RFRSH_TREFI_OFFS__VAL_0_FIELD 0,14

#define EMC_RFRSH_TREFI_OFFS__VAL_1_SHIFT 16
#define EMC_RFRSH_TREFI_OFFS__VAL_1_WIDTH 15
#define EMC_RFRSH_TREFI_OFFS__VAL_1_RESET_VAL 0
#define EMC_RFRSH_TREFI_OFFS__VAL_1_RMASK 0x7fff
#define EMC_RFRSH_TREFI_OFFS__VAL_1_MASK  0x7fff0000
#define EMC_RFRSH_TREFI_OFFS__VAL_1_FIELD 16,30


/*
 * NVDIMM_FLUSH.
 * NVDIMM Flush Configuration Register
 */
#define EMC_NVDIMM_FLUSH 0x0170
#define EMC_NVDIMM_FLUSH__LENGTH 0x0001

#define EMC_NVDIMM_FLUSH__WD_VAL_SHIFT 0
#define EMC_NVDIMM_FLUSH__WD_VAL_WIDTH 20
#define EMC_NVDIMM_FLUSH__WD_VAL_RESET_VAL 1023
#define EMC_NVDIMM_FLUSH__WD_VAL_RMASK 0xfffff
#define EMC_NVDIMM_FLUSH__WD_VAL_MASK  0xfffff
#define EMC_NVDIMM_FLUSH__WD_VAL_FIELD 0,19

#define EMC_NVDIMM_FLUSH__DONE_DELAY_SHIFT 24
#define EMC_NVDIMM_FLUSH__DONE_DELAY_WIDTH 6
#define EMC_NVDIMM_FLUSH__DONE_DELAY_RESET_VAL 31
#define EMC_NVDIMM_FLUSH__DONE_DELAY_RMASK 0x3f
#define EMC_NVDIMM_FLUSH__DONE_DELAY_MASK  0x3f000000
#define EMC_NVDIMM_FLUSH__DONE_DELAY_FIELD 24,29

#define EMC_NVDIMM_FLUSH__EN_SHIFT 31
#define EMC_NVDIMM_FLUSH__EN_WIDTH 1
#define EMC_NVDIMM_FLUSH__EN_RESET_VAL 0
#define EMC_NVDIMM_FLUSH__EN_RMASK 0x1
#define EMC_NVDIMM_FLUSH__EN_MASK  0x80000000
#define EMC_NVDIMM_FLUSH__EN_FIELD 31,31


/*
 * IFC_BIST_CFG.
 * memory controller BIST machines configurations
 */
#define EMC_IFC_BIST_CFG 0x01a0
#define EMC_IFC_BIST_CFG__LENGTH 0x0001

#define EMC_IFC_BIST_CFG__REP_NUM_SHIFT 0
#define EMC_IFC_BIST_CFG__REP_NUM_WIDTH 2
#define EMC_IFC_BIST_CFG__REP_NUM_RESET_VAL 0
#define EMC_IFC_BIST_CFG__REP_NUM_RMASK 0x3
#define EMC_IFC_BIST_CFG__REP_NUM_MASK  0x3
#define EMC_IFC_BIST_CFG__REP_NUM_FIELD 0,1

#define EMC_IFC_BIST_CFG__TEST_MODE_SHIFT 2
#define EMC_IFC_BIST_CFG__TEST_MODE_WIDTH 2
#define EMC_IFC_BIST_CFG__TEST_MODE_RESET_VAL 0
#define EMC_IFC_BIST_CFG__TEST_MODE_RMASK 0x3
#define EMC_IFC_BIST_CFG__TEST_MODE_MASK  0xc
#define EMC_IFC_BIST_CFG__TEST_MODE_FIELD 2,3

#define EMC_IFC_BIST_CFG__INC_ADDR_OPERAND_SHIFT 5
#define EMC_IFC_BIST_CFG__INC_ADDR_OPERAND_WIDTH 2
#define EMC_IFC_BIST_CFG__INC_ADDR_OPERAND_RESET_VAL 0
#define EMC_IFC_BIST_CFG__INC_ADDR_OPERAND_RMASK 0x3
#define EMC_IFC_BIST_CFG__INC_ADDR_OPERAND_MASK  0x60
#define EMC_IFC_BIST_CFG__INC_ADDR_OPERAND_FIELD 5,6

#define EMC_IFC_BIST_CFG__SEQ_LEN_SHIFT 7
#define EMC_IFC_BIST_CFG__SEQ_LEN_WIDTH 9
#define EMC_IFC_BIST_CFG__SEQ_LEN_RESET_VAL 1
#define EMC_IFC_BIST_CFG__SEQ_LEN_RMASK 0x1ff
#define EMC_IFC_BIST_CFG__SEQ_LEN_MASK  0xff80
#define EMC_IFC_BIST_CFG__SEQ_LEN_FIELD 7,15

#define EMC_IFC_BIST_CFG__WR_ENABLE_SHIFT 16
#define EMC_IFC_BIST_CFG__WR_ENABLE_WIDTH 1
#define EMC_IFC_BIST_CFG__WR_ENABLE_RESET_VAL 0
#define EMC_IFC_BIST_CFG__WR_ENABLE_RMASK 0x1
#define EMC_IFC_BIST_CFG__WR_ENABLE_MASK  0x10000
#define EMC_IFC_BIST_CFG__WR_ENABLE_FIELD 16,16

#define EMC_IFC_BIST_CFG__RD_ENABLE_SHIFT 17
#define EMC_IFC_BIST_CFG__RD_ENABLE_WIDTH 1
#define EMC_IFC_BIST_CFG__RD_ENABLE_RESET_VAL 0
#define EMC_IFC_BIST_CFG__RD_ENABLE_RMASK 0x1
#define EMC_IFC_BIST_CFG__RD_ENABLE_MASK  0x20000
#define EMC_IFC_BIST_CFG__RD_ENABLE_FIELD 17,17

#define EMC_IFC_BIST_CFG__PTRN_MODE_SHIFT 18
#define EMC_IFC_BIST_CFG__PTRN_MODE_WIDTH 1
#define EMC_IFC_BIST_CFG__PTRN_MODE_RESET_VAL 0
#define EMC_IFC_BIST_CFG__PTRN_MODE_RMASK 0x1
#define EMC_IFC_BIST_CFG__PTRN_MODE_MASK  0x40000
#define EMC_IFC_BIST_CFG__PTRN_MODE_FIELD 18,18

#define EMC_IFC_BIST_CFG__PTRN_SEQ_SHIFT 19
#define EMC_IFC_BIST_CFG__PTRN_SEQ_WIDTH 1
#define EMC_IFC_BIST_CFG__PTRN_SEQ_RESET_VAL 0
#define EMC_IFC_BIST_CFG__PTRN_SEQ_RMASK 0x1
#define EMC_IFC_BIST_CFG__PTRN_SEQ_MASK  0x80000
#define EMC_IFC_BIST_CFG__PTRN_SEQ_FIELD 19,19

#define EMC_IFC_BIST_CFG__SCAN_MODE_SHIFT 20
#define EMC_IFC_BIST_CFG__SCAN_MODE_WIDTH 2
#define EMC_IFC_BIST_CFG__SCAN_MODE_RESET_VAL 0
#define EMC_IFC_BIST_CFG__SCAN_MODE_RMASK 0x3
#define EMC_IFC_BIST_CFG__SCAN_MODE_MASK  0x300000
#define EMC_IFC_BIST_CFG__SCAN_MODE_FIELD 20,21


/*
 * IFC_BIST_BASE_ADDR.
 * lowest address for access by the BIST machine.
 */
#define EMC_IFC_BIST_BASE_ADDR 0x01a1
#define EMC_IFC_BIST_BASE_ADDR__LENGTH 0x0001

#define EMC_IFC_BIST_BASE_ADDR__VAL_SHIFT 0
#define EMC_IFC_BIST_BASE_ADDR__VAL_WIDTH 32
#define EMC_IFC_BIST_BASE_ADDR__VAL_RESET_VAL 0
#define EMC_IFC_BIST_BASE_ADDR__VAL_RMASK 0xffffffff
#define EMC_IFC_BIST_BASE_ADDR__VAL_MASK  0xffffffff
#define EMC_IFC_BIST_BASE_ADDR__VAL_FIELD 0,31


/*
 * IFC_BIST_HIGH_ADDR.
 * Highest address for access by the BIST machine
 */
#define EMC_IFC_BIST_HIGH_ADDR 0x01a2
#define EMC_IFC_BIST_HIGH_ADDR__LENGTH 0x0001

#define EMC_IFC_BIST_HIGH_ADDR__VAL_SHIFT 0
#define EMC_IFC_BIST_HIGH_ADDR__VAL_WIDTH 32
#define EMC_IFC_BIST_HIGH_ADDR__VAL_RESET_VAL 0
#define EMC_IFC_BIST_HIGH_ADDR__VAL_RMASK 0xffffffff
#define EMC_IFC_BIST_HIGH_ADDR__VAL_MASK  0xffffffff
#define EMC_IFC_BIST_HIGH_ADDR__VAL_FIELD 0,31


/*
 * IFC_BIST_TIMING_PARAMS.
 * BIST parameters
 */
#define EMC_IFC_BIST_TIMING_PARAMS 0x01a3
#define EMC_IFC_BIST_TIMING_PARAMS__LENGTH 0x0001

#define EMC_IFC_BIST_TIMING_PARAMS__ACK_ADDR_GAP_SHIFT 8
#define EMC_IFC_BIST_TIMING_PARAMS__ACK_ADDR_GAP_WIDTH 5
#define EMC_IFC_BIST_TIMING_PARAMS__ACK_ADDR_GAP_RESET_VAL 0
#define EMC_IFC_BIST_TIMING_PARAMS__ACK_ADDR_GAP_RMASK 0x1f
#define EMC_IFC_BIST_TIMING_PARAMS__ACK_ADDR_GAP_MASK  0x1f00
#define EMC_IFC_BIST_TIMING_PARAMS__ACK_ADDR_GAP_FIELD 8,12

#define EMC_IFC_BIST_TIMING_PARAMS__ACK_DATA_GAP_SHIFT 16
#define EMC_IFC_BIST_TIMING_PARAMS__ACK_DATA_GAP_WIDTH 5
#define EMC_IFC_BIST_TIMING_PARAMS__ACK_DATA_GAP_RESET_VAL 0
#define EMC_IFC_BIST_TIMING_PARAMS__ACK_DATA_GAP_RMASK 0x1f
#define EMC_IFC_BIST_TIMING_PARAMS__ACK_DATA_GAP_MASK  0x1f0000
#define EMC_IFC_BIST_TIMING_PARAMS__ACK_DATA_GAP_FIELD 16,20


/*
 * IFC_BIST_DIMM_RANGE.
 * Defines Minimum and Maximum for Logical Rank and Physical Rank
 */
#define EMC_IFC_BIST_DIMM_RANGE 0x01a4
#define EMC_IFC_BIST_DIMM_RANGE__LENGTH 0x0001

#define EMC_IFC_BIST_DIMM_RANGE__MIN_LR_SHIFT 0
#define EMC_IFC_BIST_DIMM_RANGE__MIN_LR_WIDTH 2
#define EMC_IFC_BIST_DIMM_RANGE__MIN_LR_RESET_VAL 0
#define EMC_IFC_BIST_DIMM_RANGE__MIN_LR_RMASK 0x3
#define EMC_IFC_BIST_DIMM_RANGE__MIN_LR_MASK  0x3
#define EMC_IFC_BIST_DIMM_RANGE__MIN_LR_FIELD 0,1

#define EMC_IFC_BIST_DIMM_RANGE__MAX_LR_SHIFT 4
#define EMC_IFC_BIST_DIMM_RANGE__MAX_LR_WIDTH 2
#define EMC_IFC_BIST_DIMM_RANGE__MAX_LR_RESET_VAL 0
#define EMC_IFC_BIST_DIMM_RANGE__MAX_LR_RMASK 0x3
#define EMC_IFC_BIST_DIMM_RANGE__MAX_LR_MASK  0x30
#define EMC_IFC_BIST_DIMM_RANGE__MAX_LR_FIELD 4,5

#define EMC_IFC_BIST_DIMM_RANGE__MIN_PR_SHIFT 8
#define EMC_IFC_BIST_DIMM_RANGE__MIN_PR_WIDTH 2
#define EMC_IFC_BIST_DIMM_RANGE__MIN_PR_RESET_VAL 0
#define EMC_IFC_BIST_DIMM_RANGE__MIN_PR_RMASK 0x3
#define EMC_IFC_BIST_DIMM_RANGE__MIN_PR_MASK  0x300
#define EMC_IFC_BIST_DIMM_RANGE__MIN_PR_FIELD 8,9

#define EMC_IFC_BIST_DIMM_RANGE__MAX_PR_SHIFT 12
#define EMC_IFC_BIST_DIMM_RANGE__MAX_PR_WIDTH 2
#define EMC_IFC_BIST_DIMM_RANGE__MAX_PR_RESET_VAL 0
#define EMC_IFC_BIST_DIMM_RANGE__MAX_PR_RMASK 0x3
#define EMC_IFC_BIST_DIMM_RANGE__MAX_PR_MASK  0x3000
#define EMC_IFC_BIST_DIMM_RANGE__MAX_PR_FIELD 12,13


/*
 * IFC_BIST_EN.
 * Enable bit per bist
 */
#define EMC_IFC_BIST_EN 0x01a6
#define EMC_IFC_BIST_EN__LENGTH 0x0001

#define EMC_IFC_BIST_EN__VAL_SHIFT 0
#define EMC_IFC_BIST_EN__VAL_WIDTH 1
#define EMC_IFC_BIST_EN__VAL_RESET_VAL 0
#define EMC_IFC_BIST_EN__VAL_RMASK 0x1
#define EMC_IFC_BIST_EN__VAL_MASK  0x1
#define EMC_IFC_BIST_EN__VAL_FIELD 0,0


/*
 * IFC_BIST_STATUS.
 * BIST machine statistics register
 */
#define EMC_IFC_BIST_STATUS 0x01a8
#define EMC_IFC_BIST_STATUS__LENGTH 0x0001

#define EMC_IFC_BIST_STATUS__END_OF_TEST_SHIFT 0
#define EMC_IFC_BIST_STATUS__END_OF_TEST_WIDTH 1
#define EMC_IFC_BIST_STATUS__END_OF_TEST_RESET_VAL 0
#define EMC_IFC_BIST_STATUS__END_OF_TEST_RMASK 0x1
#define EMC_IFC_BIST_STATUS__END_OF_TEST_MASK  0x1
#define EMC_IFC_BIST_STATUS__END_OF_TEST_FIELD 0,0

#define EMC_IFC_BIST_STATUS__TEST_STATUS_SHIFT 1
#define EMC_IFC_BIST_STATUS__TEST_STATUS_WIDTH 1
#define EMC_IFC_BIST_STATUS__TEST_STATUS_RESET_VAL 0
#define EMC_IFC_BIST_STATUS__TEST_STATUS_RMASK 0x1
#define EMC_IFC_BIST_STATUS__TEST_STATUS_MASK  0x2
#define EMC_IFC_BIST_STATUS__TEST_STATUS_FIELD 1,1

#define EMC_IFC_BIST_STATUS__ERR_BANK_SHIFT 4
#define EMC_IFC_BIST_STATUS__ERR_BANK_WIDTH 4
#define EMC_IFC_BIST_STATUS__ERR_BANK_RESET_VAL 0
#define EMC_IFC_BIST_STATUS__ERR_BANK_RMASK 0xf
#define EMC_IFC_BIST_STATUS__ERR_BANK_MASK  0xf0
#define EMC_IFC_BIST_STATUS__ERR_BANK_FIELD 4,7

#define EMC_IFC_BIST_STATUS__ERR_LR_SHIFT 8
#define EMC_IFC_BIST_STATUS__ERR_LR_WIDTH 2
#define EMC_IFC_BIST_STATUS__ERR_LR_RESET_VAL 0
#define EMC_IFC_BIST_STATUS__ERR_LR_RMASK 0x3
#define EMC_IFC_BIST_STATUS__ERR_LR_MASK  0x300
#define EMC_IFC_BIST_STATUS__ERR_LR_FIELD 8,9

#define EMC_IFC_BIST_STATUS__ERR_PR_SHIFT 10
#define EMC_IFC_BIST_STATUS__ERR_PR_WIDTH 2
#define EMC_IFC_BIST_STATUS__ERR_PR_RESET_VAL 0
#define EMC_IFC_BIST_STATUS__ERR_PR_RMASK 0x3
#define EMC_IFC_BIST_STATUS__ERR_PR_MASK  0xc00
#define EMC_IFC_BIST_STATUS__ERR_PR_FIELD 10,11

#define EMC_IFC_BIST_STATUS__ERR_CHUNK_SHIFT 12
#define EMC_IFC_BIST_STATUS__ERR_CHUNK_WIDTH 1
#define EMC_IFC_BIST_STATUS__ERR_CHUNK_RESET_VAL 0
#define EMC_IFC_BIST_STATUS__ERR_CHUNK_RMASK 0x1
#define EMC_IFC_BIST_STATUS__ERR_CHUNK_MASK  0x1000
#define EMC_IFC_BIST_STATUS__ERR_CHUNK_FIELD 12,12

#define EMC_IFC_BIST_STATUS__ERR_SRAM_ENTRY_0_SHIFT 16
#define EMC_IFC_BIST_STATUS__ERR_SRAM_ENTRY_0_WIDTH 8
#define EMC_IFC_BIST_STATUS__ERR_SRAM_ENTRY_0_RESET_VAL 0
#define EMC_IFC_BIST_STATUS__ERR_SRAM_ENTRY_0_RMASK 0xff
#define EMC_IFC_BIST_STATUS__ERR_SRAM_ENTRY_0_MASK  0xff0000
#define EMC_IFC_BIST_STATUS__ERR_SRAM_ENTRY_0_FIELD 16,23

#define EMC_IFC_BIST_STATUS__ERR_SRAM_ENTRY_1_SHIFT 24
#define EMC_IFC_BIST_STATUS__ERR_SRAM_ENTRY_1_WIDTH 8
#define EMC_IFC_BIST_STATUS__ERR_SRAM_ENTRY_1_RESET_VAL 0
#define EMC_IFC_BIST_STATUS__ERR_SRAM_ENTRY_1_RMASK 0xff
#define EMC_IFC_BIST_STATUS__ERR_SRAM_ENTRY_1_MASK  0xff000000
#define EMC_IFC_BIST_STATUS__ERR_SRAM_ENTRY_1_FIELD 24,31


/*
 * IFC_BIST_ERR_ADDR.
 * recent address of Bist machine read error
 */
#define EMC_IFC_BIST_ERR_ADDR 0x01a9
#define EMC_IFC_BIST_ERR_ADDR__LENGTH 0x0001

#define EMC_IFC_BIST_ERR_ADDR__VAL_SHIFT 0
#define EMC_IFC_BIST_ERR_ADDR__VAL_WIDTH 32
#define EMC_IFC_BIST_ERR_ADDR__VAL_RESET_VAL 0
#define EMC_IFC_BIST_ERR_ADDR__VAL_RMASK 0xffffffff
#define EMC_IFC_BIST_ERR_ADDR__VAL_MASK  0xffffffff
#define EMC_IFC_BIST_ERR_ADDR__VAL_FIELD 0,31


/*
 * IFC_BIST_ERR_CNTR.
 * BIST machine accomulated errors
 */
#define EMC_IFC_BIST_ERR_CNTR 0x01aa
#define EMC_IFC_BIST_ERR_CNTR__LENGTH 0x0001

#define EMC_IFC_BIST_ERR_CNTR__VAL_SHIFT 0
#define EMC_IFC_BIST_ERR_CNTR__VAL_WIDTH 32
#define EMC_IFC_BIST_ERR_CNTR__VAL_RESET_VAL 0
#define EMC_IFC_BIST_ERR_CNTR__VAL_RMASK 0xffffffff
#define EMC_IFC_BIST_ERR_CNTR__VAL_MASK  0xffffffff
#define EMC_IFC_BIST_ERR_CNTR__VAL_FIELD 0,31


/*
 * IFC_BIST_ERR_DATA.
 * recent data with error
 */
#define EMC_IFC_BIST_ERR_DATA__FIRST_WORD 0x01ab
#define EMC_IFC_BIST_ERR_DATA__LAST_WORD 0x01bc
#define EMC_IFC_BIST_ERR_DATA__LENGTH 0x0012
#define EMC_IFC_BIST_ERR_DATA__STRIDE 0x0001

#define EMC_IFC_BIST_ERR_DATA__VAL_SHIFT 0
#define EMC_IFC_BIST_ERR_DATA__VAL_WIDTH 32
#define EMC_IFC_BIST_ERR_DATA__VAL_RESET_VAL 0
#define EMC_IFC_BIST_ERR_DATA__VAL_RMASK 0xffffffff
#define EMC_IFC_BIST_ERR_DATA__VAL_MASK  0xffffffff
#define EMC_IFC_BIST_ERR_DATA__VAL_FIELD 0,31


/*
 * IFC_BIST_MASK.
 * Which bits to mask while checking the returned data
 */
#define EMC_IFC_BIST_MASK__FIRST_WORD 0x01c0
#define EMC_IFC_BIST_MASK__LAST_WORD 0x01c8
#define EMC_IFC_BIST_MASK__LENGTH 0x0009
#define EMC_IFC_BIST_MASK__STRIDE 0x0001

#define EMC_IFC_BIST_MASK__BITS_SHIFT 0
#define EMC_IFC_BIST_MASK__BITS_WIDTH 32
#define EMC_IFC_BIST_MASK__BITS_RESET_VAL 0
#define EMC_IFC_BIST_MASK__BITS_RMASK 0xffffffff
#define EMC_IFC_BIST_MASK__BITS_MASK  0xffffffff
#define EMC_IFC_BIST_MASK__BITS_FIELD 0,31


/*
 * IFC_BIST_ADDR_LFSR.
 * When SCAN_MODE = "11", This is the LFSR that randomize the Address and
 * Bank.
 */
#define EMC_IFC_BIST_ADDR_LFSR 0x01ca
#define EMC_IFC_BIST_ADDR_LFSR__LENGTH 0x0001

#define EMC_IFC_BIST_ADDR_LFSR__SEED_SHIFT 0
#define EMC_IFC_BIST_ADDR_LFSR__SEED_WIDTH 25
#define EMC_IFC_BIST_ADDR_LFSR__SEED_RESET_VAL 30216756
#define EMC_IFC_BIST_ADDR_LFSR__SEED_RMASK 0x1ffffff
#define EMC_IFC_BIST_ADDR_LFSR__SEED_MASK  0x1ffffff
#define EMC_IFC_BIST_ADDR_LFSR__SEED_FIELD 0,24


/*
 * IFC_BIST_RND_BITS.
 * When SCAN_MODE = "11", this registers sets the enable and offset of the
 * random bits
 */
#define EMC_IFC_BIST_RND_BITS 0x01cb
#define EMC_IFC_BIST_RND_BITS__LENGTH 0x0001

#define EMC_IFC_BIST_RND_BITS__BANK_EN_SHIFT 0
#define EMC_IFC_BIST_RND_BITS__BANK_EN_WIDTH 1
#define EMC_IFC_BIST_RND_BITS__BANK_EN_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__BANK_EN_RMASK 0x1
#define EMC_IFC_BIST_RND_BITS__BANK_EN_MASK  0x1
#define EMC_IFC_BIST_RND_BITS__BANK_EN_FIELD 0,0

#define EMC_IFC_BIST_RND_BITS__BANK_OFFS_SHIFT 1
#define EMC_IFC_BIST_RND_BITS__BANK_OFFS_WIDTH 3
#define EMC_IFC_BIST_RND_BITS__BANK_OFFS_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__BANK_OFFS_RMASK 0x7
#define EMC_IFC_BIST_RND_BITS__BANK_OFFS_MASK  0xe
#define EMC_IFC_BIST_RND_BITS__BANK_OFFS_FIELD 1,3

#define EMC_IFC_BIST_RND_BITS__LR_0_EN_SHIFT 4
#define EMC_IFC_BIST_RND_BITS__LR_0_EN_WIDTH 1
#define EMC_IFC_BIST_RND_BITS__LR_0_EN_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__LR_0_EN_RMASK 0x1
#define EMC_IFC_BIST_RND_BITS__LR_0_EN_MASK  0x10
#define EMC_IFC_BIST_RND_BITS__LR_0_EN_FIELD 4,4

#define EMC_IFC_BIST_RND_BITS__LR_0_OFFS_SHIFT 5
#define EMC_IFC_BIST_RND_BITS__LR_0_OFFS_WIDTH 3
#define EMC_IFC_BIST_RND_BITS__LR_0_OFFS_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__LR_0_OFFS_RMASK 0x7
#define EMC_IFC_BIST_RND_BITS__LR_0_OFFS_MASK  0xe0
#define EMC_IFC_BIST_RND_BITS__LR_0_OFFS_FIELD 5,7

#define EMC_IFC_BIST_RND_BITS__LR_1_EN_SHIFT 8
#define EMC_IFC_BIST_RND_BITS__LR_1_EN_WIDTH 1
#define EMC_IFC_BIST_RND_BITS__LR_1_EN_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__LR_1_EN_RMASK 0x1
#define EMC_IFC_BIST_RND_BITS__LR_1_EN_MASK  0x100
#define EMC_IFC_BIST_RND_BITS__LR_1_EN_FIELD 8,8

#define EMC_IFC_BIST_RND_BITS__LR_1_OFFS_SHIFT 9
#define EMC_IFC_BIST_RND_BITS__LR_1_OFFS_WIDTH 3
#define EMC_IFC_BIST_RND_BITS__LR_1_OFFS_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__LR_1_OFFS_RMASK 0x7
#define EMC_IFC_BIST_RND_BITS__LR_1_OFFS_MASK  0xe00
#define EMC_IFC_BIST_RND_BITS__LR_1_OFFS_FIELD 9,11

#define EMC_IFC_BIST_RND_BITS__PR_0_EN_SHIFT 12
#define EMC_IFC_BIST_RND_BITS__PR_0_EN_WIDTH 1
#define EMC_IFC_BIST_RND_BITS__PR_0_EN_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__PR_0_EN_RMASK 0x1
#define EMC_IFC_BIST_RND_BITS__PR_0_EN_MASK  0x1000
#define EMC_IFC_BIST_RND_BITS__PR_0_EN_FIELD 12,12

#define EMC_IFC_BIST_RND_BITS__PR_0_OFFS_SHIFT 13
#define EMC_IFC_BIST_RND_BITS__PR_0_OFFS_WIDTH 3
#define EMC_IFC_BIST_RND_BITS__PR_0_OFFS_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__PR_0_OFFS_RMASK 0x7
#define EMC_IFC_BIST_RND_BITS__PR_0_OFFS_MASK  0xe000
#define EMC_IFC_BIST_RND_BITS__PR_0_OFFS_FIELD 13,15

#define EMC_IFC_BIST_RND_BITS__PR_1_EN_SHIFT 16
#define EMC_IFC_BIST_RND_BITS__PR_1_EN_WIDTH 1
#define EMC_IFC_BIST_RND_BITS__PR_1_EN_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__PR_1_EN_RMASK 0x1
#define EMC_IFC_BIST_RND_BITS__PR_1_EN_MASK  0x10000
#define EMC_IFC_BIST_RND_BITS__PR_1_EN_FIELD 16,16

#define EMC_IFC_BIST_RND_BITS__PR_1_OFFS_SHIFT 17
#define EMC_IFC_BIST_RND_BITS__PR_1_OFFS_WIDTH 3
#define EMC_IFC_BIST_RND_BITS__PR_1_OFFS_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__PR_1_OFFS_RMASK 0x7
#define EMC_IFC_BIST_RND_BITS__PR_1_OFFS_MASK  0xe0000
#define EMC_IFC_BIST_RND_BITS__PR_1_OFFS_FIELD 17,19

#define EMC_IFC_BIST_RND_BITS__ADDR_22_EN_SHIFT 20
#define EMC_IFC_BIST_RND_BITS__ADDR_22_EN_WIDTH 1
#define EMC_IFC_BIST_RND_BITS__ADDR_22_EN_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__ADDR_22_EN_RMASK 0x1
#define EMC_IFC_BIST_RND_BITS__ADDR_22_EN_MASK  0x100000
#define EMC_IFC_BIST_RND_BITS__ADDR_22_EN_FIELD 20,20

#define EMC_IFC_BIST_RND_BITS__ADDR_22_OFFS_SHIFT 21
#define EMC_IFC_BIST_RND_BITS__ADDR_22_OFFS_WIDTH 3
#define EMC_IFC_BIST_RND_BITS__ADDR_22_OFFS_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__ADDR_22_OFFS_RMASK 0x7
#define EMC_IFC_BIST_RND_BITS__ADDR_22_OFFS_MASK  0xe00000
#define EMC_IFC_BIST_RND_BITS__ADDR_22_OFFS_FIELD 21,23

#define EMC_IFC_BIST_RND_BITS__ADDR_23_EN_SHIFT 24
#define EMC_IFC_BIST_RND_BITS__ADDR_23_EN_WIDTH 1
#define EMC_IFC_BIST_RND_BITS__ADDR_23_EN_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__ADDR_23_EN_RMASK 0x1
#define EMC_IFC_BIST_RND_BITS__ADDR_23_EN_MASK  0x1000000
#define EMC_IFC_BIST_RND_BITS__ADDR_23_EN_FIELD 24,24

#define EMC_IFC_BIST_RND_BITS__ADDR_23_OFFS_SHIFT 25
#define EMC_IFC_BIST_RND_BITS__ADDR_23_OFFS_WIDTH 3
#define EMC_IFC_BIST_RND_BITS__ADDR_23_OFFS_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__ADDR_23_OFFS_RMASK 0x7
#define EMC_IFC_BIST_RND_BITS__ADDR_23_OFFS_MASK  0xe000000
#define EMC_IFC_BIST_RND_BITS__ADDR_23_OFFS_FIELD 25,27

#define EMC_IFC_BIST_RND_BITS__ADDR_24_EN_SHIFT 28
#define EMC_IFC_BIST_RND_BITS__ADDR_24_EN_WIDTH 1
#define EMC_IFC_BIST_RND_BITS__ADDR_24_EN_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__ADDR_24_EN_RMASK 0x1
#define EMC_IFC_BIST_RND_BITS__ADDR_24_EN_MASK  0x10000000
#define EMC_IFC_BIST_RND_BITS__ADDR_24_EN_FIELD 28,28

#define EMC_IFC_BIST_RND_BITS__ADDR_24_OFFS_SHIFT 29
#define EMC_IFC_BIST_RND_BITS__ADDR_24_OFFS_WIDTH 3
#define EMC_IFC_BIST_RND_BITS__ADDR_24_OFFS_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS__ADDR_24_OFFS_RMASK 0x7
#define EMC_IFC_BIST_RND_BITS__ADDR_24_OFFS_MASK  0xe0000000
#define EMC_IFC_BIST_RND_BITS__ADDR_24_OFFS_FIELD 29,31


/*
 * IFC_BIST_RND_BITS_LEN.
 * When SCAN_MODE = "11", this registers sets the maximum number for the
 * random bits
 */
#define EMC_IFC_BIST_RND_BITS_LEN 0x01cc
#define EMC_IFC_BIST_RND_BITS_LEN__LENGTH 0x0001

#define EMC_IFC_BIST_RND_BITS_LEN__VAL_SHIFT 0
#define EMC_IFC_BIST_RND_BITS_LEN__VAL_WIDTH 8
#define EMC_IFC_BIST_RND_BITS_LEN__VAL_RESET_VAL 0
#define EMC_IFC_BIST_RND_BITS_LEN__VAL_RMASK 0xff
#define EMC_IFC_BIST_RND_BITS_LEN__VAL_MASK  0xff
#define EMC_IFC_BIST_RND_BITS_LEN__VAL_FIELD 0,7


/*
 * IFC_BIST_RND_SEQ_LEN.
 * When SCAN_MODE = "11", this registers sets the number of DRAM commands
 * (Write/Read) for the test.
 */
#define EMC_IFC_BIST_RND_SEQ_LEN 0x01cd
#define EMC_IFC_BIST_RND_SEQ_LEN__LENGTH 0x0001

#define EMC_IFC_BIST_RND_SEQ_LEN__VAL_SHIFT 0
#define EMC_IFC_BIST_RND_SEQ_LEN__VAL_WIDTH 32
#define EMC_IFC_BIST_RND_SEQ_LEN__VAL_RESET_VAL 0
#define EMC_IFC_BIST_RND_SEQ_LEN__VAL_RMASK 0xffffffff
#define EMC_IFC_BIST_RND_SEQ_LEN__VAL_MASK  0xffffffff
#define EMC_IFC_BIST_RND_SEQ_LEN__VAL_FIELD 0,31


/*
 * IFC_BIST_PTRN_ACK.
 * Defines acknowledge threshold to promote the pattern sequence
 */
#define EMC_IFC_BIST_PTRN_ACK 0x01ce
#define EMC_IFC_BIST_PTRN_ACK__LENGTH 0x0001

#define EMC_IFC_BIST_PTRN_ACK__TH_SHIFT 0
#define EMC_IFC_BIST_PTRN_ACK__TH_WIDTH 32
#define EMC_IFC_BIST_PTRN_ACK__TH_RESET_VAL 0
#define EMC_IFC_BIST_PTRN_ACK__TH_RMASK 0xffffffff
#define EMC_IFC_BIST_PTRN_ACK__TH_MASK  0xffffffff
#define EMC_IFC_BIST_PTRN_ACK__TH_FIELD 0,31


/*
 * IFC_BIST_PTRN_LFSR.
 * BIST patern LFSR
 */
#define EMC_IFC_BIST_PTRN_LFSR 0x01cf
#define EMC_IFC_BIST_PTRN_LFSR__LENGTH 0x0001

#define EMC_IFC_BIST_PTRN_LFSR__SEED_SHIFT 0
#define EMC_IFC_BIST_PTRN_LFSR__SEED_WIDTH 32
#define EMC_IFC_BIST_PTRN_LFSR__SEED_RESET_VAL 2879813104
#define EMC_IFC_BIST_PTRN_LFSR__SEED_RMASK 0xffffffff
#define EMC_IFC_BIST_PTRN_LFSR__SEED_MASK  0xffffffff
#define EMC_IFC_BIST_PTRN_LFSR__SEED_FIELD 0,31


/*
 * BIST_CG.
 * BIST clock gate to save power when not used
 */
#define EMC_BIST_CG 0x01d0
#define EMC_BIST_CG__LENGTH 0x0001

#define EMC_BIST_CG__EN_SHIFT 0
#define EMC_BIST_CG__EN_WIDTH 1
#define EMC_BIST_CG__EN_RESET_VAL 1
#define EMC_BIST_CG__EN_RMASK 0x1
#define EMC_BIST_CG__EN_MASK  0x1
#define EMC_BIST_CG__EN_FIELD 0,0


/*
 * IFC_BIST_RANK_ERR_CNTR.
 * BIST machine per rank errors
 */
#define EMC_IFC_BIST_RANK_ERR_CNTR__FIRST_WORD 0x01e0
#define EMC_IFC_BIST_RANK_ERR_CNTR__LAST_WORD 0x01e3
#define EMC_IFC_BIST_RANK_ERR_CNTR__LENGTH 0x0004
#define EMC_IFC_BIST_RANK_ERR_CNTR__STRIDE 0x0001

#define EMC_IFC_BIST_RANK_ERR_CNTR__VAL_SHIFT 0
#define EMC_IFC_BIST_RANK_ERR_CNTR__VAL_WIDTH 32
#define EMC_IFC_BIST_RANK_ERR_CNTR__VAL_RESET_VAL 0
#define EMC_IFC_BIST_RANK_ERR_CNTR__VAL_RMASK 0xffffffff
#define EMC_IFC_BIST_RANK_ERR_CNTR__VAL_MASK  0xffffffff
#define EMC_IFC_BIST_RANK_ERR_CNTR__VAL_FIELD 0,31


/*
 * RST_CTRL.
 * Resets Control Register
 */
#define EMC_RST_CTRL 0x01ff
#define EMC_RST_CTRL__LENGTH 0x0001

#define EMC_RST_CTRL__SRST__SHIFT 0
#define EMC_RST_CTRL__SRST__WIDTH 1
#define EMC_RST_CTRL__SRST__RESET_VAL 1
#define EMC_RST_CTRL__SRST__RMASK 0x1
#define EMC_RST_CTRL__SRST__MASK  0x1
#define EMC_RST_CTRL__SRST__FIELD 0,0

#define EMC_RST_CTRL__PHY_RST__SHIFT 4
#define EMC_RST_CTRL__PHY_RST__WIDTH 1
#define EMC_RST_CTRL__PHY_RST__RESET_VAL 1
#define EMC_RST_CTRL__PHY_RST__RMASK 0x1
#define EMC_RST_CTRL__PHY_RST__MASK  0x10
#define EMC_RST_CTRL__PHY_RST__FIELD 4,4

#define EMC_RST_CTRL__PHY_SOFT_RESET_SHIFT 8
#define EMC_RST_CTRL__PHY_SOFT_RESET_WIDTH 1
#define EMC_RST_CTRL__PHY_SOFT_RESET_RESET_VAL 1
#define EMC_RST_CTRL__PHY_SOFT_RESET_RMASK 0x1
#define EMC_RST_CTRL__PHY_SOFT_RESET_MASK  0x100
#define EMC_RST_CTRL__PHY_SOFT_RESET_FIELD 8,8

#define EMC_RST_CTRL__APB_RST__SHIFT 12
#define EMC_RST_CTRL__APB_RST__WIDTH 1
#define EMC_RST_CTRL__APB_RST__RESET_VAL 1
#define EMC_RST_CTRL__APB_RST__RMASK 0x1
#define EMC_RST_CTRL__APB_RST__MASK  0x1000
#define EMC_RST_CTRL__APB_RST__FIELD 12,12


/*
 * CALIB_CTRLUPD_INTR_CFG.
 * Parameters for assertions calculations
 */
#define EMC_CALIB_CTRLUPD_INTR_CFG 0x0200
#define EMC_CALIB_CTRLUPD_INTR_CFG__LENGTH 0x0001

#define EMC_CALIB_CTRLUPD_INTR_CFG__T_CTRLUPD_MIN_SHIFT 0
#define EMC_CALIB_CTRLUPD_INTR_CFG__T_CTRLUPD_MIN_WIDTH 8
#define EMC_CALIB_CTRLUPD_INTR_CFG__T_CTRLUPD_MIN_RESET_VAL 24
#define EMC_CALIB_CTRLUPD_INTR_CFG__T_CTRLUPD_MIN_RMASK 0xff
#define EMC_CALIB_CTRLUPD_INTR_CFG__T_CTRLUPD_MIN_MASK  0xff
#define EMC_CALIB_CTRLUPD_INTR_CFG__T_CTRLUPD_MIN_FIELD 0,7

#define EMC_CALIB_CTRLUPD_INTR_CFG__T_CTRLUPD_MAX_SHIFT 8
#define EMC_CALIB_CTRLUPD_INTR_CFG__T_CTRLUPD_MAX_WIDTH 8
#define EMC_CALIB_CTRLUPD_INTR_CFG__T_CTRLUPD_MAX_RESET_VAL 48
#define EMC_CALIB_CTRLUPD_INTR_CFG__T_CTRLUPD_MAX_RMASK 0xff
#define EMC_CALIB_CTRLUPD_INTR_CFG__T_CTRLUPD_MAX_MASK  0xff00
#define EMC_CALIB_CTRLUPD_INTR_CFG__T_CTRLUPD_MAX_FIELD 8,15

#define EMC_CALIB_CTRLUPD_INTR_CFG__PHY_SMP_STAGES_SHIFT 16
#define EMC_CALIB_CTRLUPD_INTR_CFG__PHY_SMP_STAGES_WIDTH 4
#define EMC_CALIB_CTRLUPD_INTR_CFG__PHY_SMP_STAGES_RESET_VAL 0
#define EMC_CALIB_CTRLUPD_INTR_CFG__PHY_SMP_STAGES_RMASK 0xf
#define EMC_CALIB_CTRLUPD_INTR_CFG__PHY_SMP_STAGES_MASK  0xf0000
#define EMC_CALIB_CTRLUPD_INTR_CFG__PHY_SMP_STAGES_FIELD 16,19

#define EMC_CALIB_CTRLUPD_INTR_CFG__MC_SMP_STAGES_SHIFT 20
#define EMC_CALIB_CTRLUPD_INTR_CFG__MC_SMP_STAGES_WIDTH 4
#define EMC_CALIB_CTRLUPD_INTR_CFG__MC_SMP_STAGES_RESET_VAL 0
#define EMC_CALIB_CTRLUPD_INTR_CFG__MC_SMP_STAGES_RMASK 0xf
#define EMC_CALIB_CTRLUPD_INTR_CFG__MC_SMP_STAGES_MASK  0xf00000
#define EMC_CALIB_CTRLUPD_INTR_CFG__MC_SMP_STAGES_FIELD 20,23


/*
 * CALIB_PHYUPD_INTR_CFG.
 * Parameters for assertions calculations
 */
#define EMC_CALIB_PHYUPD_INTR_CFG 0x0201
#define EMC_CALIB_PHYUPD_INTR_CFG__LENGTH 0x0001

#define EMC_CALIB_PHYUPD_INTR_CFG__T_PHYUPD_TYPE0_SHIFT 0
#define EMC_CALIB_PHYUPD_INTR_CFG__T_PHYUPD_TYPE0_WIDTH 8
#define EMC_CALIB_PHYUPD_INTR_CFG__T_PHYUPD_TYPE0_RESET_VAL 24
#define EMC_CALIB_PHYUPD_INTR_CFG__T_PHYUPD_TYPE0_RMASK 0xff
#define EMC_CALIB_PHYUPD_INTR_CFG__T_PHYUPD_TYPE0_MASK  0xff
#define EMC_CALIB_PHYUPD_INTR_CFG__T_PHYUPD_TYPE0_FIELD 0,7

#define EMC_CALIB_PHYUPD_INTR_CFG__T_PHYUPD_RESP_SHIFT 8
#define EMC_CALIB_PHYUPD_INTR_CFG__T_PHYUPD_RESP_WIDTH 14
#define EMC_CALIB_PHYUPD_INTR_CFG__T_PHYUPD_RESP_RESET_VAL 2048
#define EMC_CALIB_PHYUPD_INTR_CFG__T_PHYUPD_RESP_RMASK 0x3fff
#define EMC_CALIB_PHYUPD_INTR_CFG__T_PHYUPD_RESP_MASK  0x3fff00
#define EMC_CALIB_PHYUPD_INTR_CFG__T_PHYUPD_RESP_FIELD 8,21


/*
 * CALIB_INTR_CAUSE.
 * There are 9 interrupt causes:
 * 1. CTRLUPD_NO_ACK_VIOL
 * 2. CTRLUPD_ACK_MIN_VIOL
 * 3. CTRLUPD_ACK_MAX_VIOL
 * 4. PHYUPD_SERV_REQ_MAX_VIOL
 * 5. PHYUPD_UNSERV_REQ_MIN_VIOL
 * 6. PHYUPD_UNSERV_REQ_MAX_VIOL
 * 7. PHYUPD_UNDERV_ACK_MAX_VIOL
 * 8. CTRLUPD_REQ_AND_CMD_VIOL
 * 9. CTRLIPD_ACK_AND_CMD_VIOL
 */
#define EMC_CALIB_INTR_CAUSE 0x0202
#define EMC_CALIB_INTR_CAUSE__LENGTH 0x0001

#define EMC_CALIB_INTR_CAUSE__CTRLUPD_NO_ACK_VIOL_SHIFT 0
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_NO_ACK_VIOL_WIDTH 1
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_NO_ACK_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_NO_ACK_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_NO_ACK_VIOL_MASK  0x1
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_NO_ACK_VIOL_FIELD 0,0

#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_MIN_VIOL_SHIFT 4
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_MIN_VIOL_WIDTH 1
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_MIN_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_MIN_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_MIN_VIOL_MASK  0x10
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_MIN_VIOL_FIELD 4,4

#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_MAX_VIOL_SHIFT 8
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_MAX_VIOL_WIDTH 1
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_MAX_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_MAX_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_MAX_VIOL_MASK  0x100
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_MAX_VIOL_FIELD 8,8

#define EMC_CALIB_INTR_CAUSE__PHYUPD_SERV_REQ_MAX_VIOL_SHIFT 12
#define EMC_CALIB_INTR_CAUSE__PHYUPD_SERV_REQ_MAX_VIOL_WIDTH 1
#define EMC_CALIB_INTR_CAUSE__PHYUPD_SERV_REQ_MAX_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_CAUSE__PHYUPD_SERV_REQ_MAX_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_CAUSE__PHYUPD_SERV_REQ_MAX_VIOL_MASK  0x1000
#define EMC_CALIB_INTR_CAUSE__PHYUPD_SERV_REQ_MAX_VIOL_FIELD 12,12

#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_REQ_MIN_VIOL_SHIFT 16
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_REQ_MIN_VIOL_WIDTH 1
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_REQ_MIN_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_REQ_MIN_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_REQ_MIN_VIOL_MASK  0x10000
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_REQ_MIN_VIOL_FIELD 16,16

#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_REQ_MAX_VIOL_SHIFT 20
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_REQ_MAX_VIOL_WIDTH 1
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_REQ_MAX_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_REQ_MAX_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_REQ_MAX_VIOL_MASK  0x100000
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_REQ_MAX_VIOL_FIELD 20,20

#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_ACK_MAX_VIOL_SHIFT 24
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_ACK_MAX_VIOL_WIDTH 1
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_ACK_MAX_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_ACK_MAX_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_ACK_MAX_VIOL_MASK  0x1000000
#define EMC_CALIB_INTR_CAUSE__PHYUPD_UNSERV_ACK_MAX_VIOL_FIELD 24,24

#define EMC_CALIB_INTR_CAUSE__CTRLUPD_REQ_AND_CMD_VIOL_SHIFT 28
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_REQ_AND_CMD_VIOL_WIDTH 1
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_REQ_AND_CMD_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_REQ_AND_CMD_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_REQ_AND_CMD_VIOL_MASK  0x10000000
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_REQ_AND_CMD_VIOL_FIELD 28,28

#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_AND_CMD_VIOL_SHIFT 29
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_AND_CMD_VIOL_WIDTH 1
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_AND_CMD_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_AND_CMD_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_AND_CMD_VIOL_MASK  0x20000000
#define EMC_CALIB_INTR_CAUSE__CTRLUPD_ACK_AND_CMD_VIOL_FIELD 29,29


/*
 * CALIB_INTR_MASK.
 * There are 9 interrupt causes:
 * 1. CTRLUPD_NO_ACK_VIOL
 * 2. CTRLUPD_ACK_MIN_VIOL
 * 3. CTRLUPD_ACK_MAX_VIOL
 * 4. PHYUPD_SERV_REQ_MAX_VIOL
 * 5. PHYUPD_UNSERV_REQ_MIN_VIOL
 * 6. PHYUPD_UNSERV_REQ_MAX_VIOL
 * 7. PHYUPD_UNSERV_ACK_MAX_VIOL
 * 8. CTRLUPD_REQ_AND_CMD_VIOL
 * 9. CTRLIPD_ACK_AND_CMD_VIOL
 */
#define EMC_CALIB_INTR_MASK 0x0203
#define EMC_CALIB_INTR_MASK__LENGTH 0x0001

#define EMC_CALIB_INTR_MASK__CTRLUPD_NO_ACK_VIOL_SHIFT 0
#define EMC_CALIB_INTR_MASK__CTRLUPD_NO_ACK_VIOL_WIDTH 1
#define EMC_CALIB_INTR_MASK__CTRLUPD_NO_ACK_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_MASK__CTRLUPD_NO_ACK_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_MASK__CTRLUPD_NO_ACK_VIOL_MASK  0x1
#define EMC_CALIB_INTR_MASK__CTRLUPD_NO_ACK_VIOL_FIELD 0,0

#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_MIN_VIOL_SHIFT 4
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_MIN_VIOL_WIDTH 1
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_MIN_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_MIN_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_MIN_VIOL_MASK  0x10
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_MIN_VIOL_FIELD 4,4

#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_MAX_VIOL_SHIFT 8
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_MAX_VIOL_WIDTH 1
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_MAX_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_MAX_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_MAX_VIOL_MASK  0x100
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_MAX_VIOL_FIELD 8,8

#define EMC_CALIB_INTR_MASK__PHYUPD_SERV_REQ_MAX_VIOL_SHIFT 12
#define EMC_CALIB_INTR_MASK__PHYUPD_SERV_REQ_MAX_VIOL_WIDTH 1
#define EMC_CALIB_INTR_MASK__PHYUPD_SERV_REQ_MAX_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_MASK__PHYUPD_SERV_REQ_MAX_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_MASK__PHYUPD_SERV_REQ_MAX_VIOL_MASK  0x1000
#define EMC_CALIB_INTR_MASK__PHYUPD_SERV_REQ_MAX_VIOL_FIELD 12,12

#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_REQ_MIN_VIOL_SHIFT 16
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_REQ_MIN_VIOL_WIDTH 1
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_REQ_MIN_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_REQ_MIN_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_REQ_MIN_VIOL_MASK  0x10000
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_REQ_MIN_VIOL_FIELD 16,16

#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_REQ_MAX_VIOL_SHIFT 20
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_REQ_MAX_VIOL_WIDTH 1
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_REQ_MAX_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_REQ_MAX_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_REQ_MAX_VIOL_MASK  0x100000
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_REQ_MAX_VIOL_FIELD 20,20

#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_ACK_MAX_VIOL_SHIFT 24
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_ACK_MAX_VIOL_WIDTH 1
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_ACK_MAX_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_ACK_MAX_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_ACK_MAX_VIOL_MASK  0x1000000
#define EMC_CALIB_INTR_MASK__PHYUPD_UNSERV_ACK_MAX_VIOL_FIELD 24,24

#define EMC_CALIB_INTR_MASK__CTRLUPD_REQ_AND_CMD_VIOL_SHIFT 28
#define EMC_CALIB_INTR_MASK__CTRLUPD_REQ_AND_CMD_VIOL_WIDTH 1
#define EMC_CALIB_INTR_MASK__CTRLUPD_REQ_AND_CMD_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_MASK__CTRLUPD_REQ_AND_CMD_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_MASK__CTRLUPD_REQ_AND_CMD_VIOL_MASK  0x10000000
#define EMC_CALIB_INTR_MASK__CTRLUPD_REQ_AND_CMD_VIOL_FIELD 28,28

#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_AND_CMD_VIOL_SHIFT 29
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_AND_CMD_VIOL_WIDTH 1
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_AND_CMD_VIOL_RESET_VAL 0
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_AND_CMD_VIOL_RMASK 0x1
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_AND_CMD_VIOL_MASK  0x20000000
#define EMC_CALIB_INTR_MASK__CTRLUPD_ACK_AND_CMD_VIOL_FIELD 29,29


/*
 * DDR_PHY_DIR_ACCESS.
 * Direct access to phy DCCM and ICCM
 */
#define EMC_DDR_PHY_DIR_ACCESS 0x0206
#define EMC_DDR_PHY_DIR_ACCESS__LENGTH 0x0001

#define EMC_DDR_PHY_DIR_ACCESS__DATA_VAL_SHIFT 0
#define EMC_DDR_PHY_DIR_ACCESS__DATA_VAL_WIDTH 32
#define EMC_DDR_PHY_DIR_ACCESS__DATA_VAL_RESET_VAL 0
#define EMC_DDR_PHY_DIR_ACCESS__DATA_VAL_RMASK 0xffffffff
#define EMC_DDR_PHY_DIR_ACCESS__DATA_VAL_MASK  0xffffffff
#define EMC_DDR_PHY_DIR_ACCESS__DATA_VAL_FIELD 0,31

#endif /* !defined(__DOXYGEN__) */

#endif /* !defined(__REGS_EMC_DEF_H__) */
